{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"METHOD_DECLARATION","change":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":false,"scope":"CLASS_S","local":"transport.src.main.io.netty.channel.socket.oio.AbstractOioChannel"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"CLASS_INSTANCE_CREATION","change":"new UnsupportedOperationException()","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"MODIFIER","change":"protected","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"PARAMETERIZED_TYPE","change":"Queue\u003cObject\u003e","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"PRIMITIVE_TYPE","change":"int","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"SIMPLE_TYPE","change":"UnsupportedOperationException","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"SIMPLE_TYPE","change":"Exception","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"SIMPLE_TYPE","change":"Object","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"SIMPLE_TYPE","change":"Queue","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Queue\u003cObject\u003e buf","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"THROW_STATEMENT","change":"throw new UnsupportedOperationException();\n","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"METHOD_INVOCATION","change":"doWriteMessages(buf)","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":false,"scope":"SUR_S","local":"io.netty.channel.socket.oio.AbstractOioChannel.flushMessageBuf(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [localFlushedAmount\u003ddoWriteMessages(buf)]","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":false,"scope":"SUR_S","local":"io.netty.channel.socket.oio.AbstractOioChannel.flushMessageBuf(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"WHILE_STATEMENT","change":"while (!buf.isEmpty()) {\n  int localFlushedAmount\u003ddoWriteMessages(buf);\n  if (localFlushedAmount \u003e 0) {\n    writeCounter+\u003dlocalFlushedAmount;\n    notifyFlushFutures();\n  }\n}\n","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":false,"scope":"SUR_S","local":"io.netty.channel.socket.oio.AbstractOioChannel.flushMessageBuf(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"METHOD_DECLARATION","change":"io.netty.channel.socket.oio.AbstractOioMessageChannel.doWriteMessages(Queue)","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":true,"scope":"EXT_T","local":"transport.src.main.io.netty.channel.socket.oio.AbstractOioMessageChannel"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"METHOD_INVOCATION","change":"doWriteMessages(buf)","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":true,"scope":"EXT_T","local":"io.netty.channel.socket.oio.AbstractOioMessageChannel.flushMessageBuf(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [localFlushedAmount\u003ddoWriteMessages(buf)]","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":true,"scope":"EXT_T","local":"io.netty.channel.socket.oio.AbstractOioMessageChannel.flushMessageBuf(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"WHILE_STATEMENT","change":"while (!buf.isEmpty()) {\n  int localFlushedAmount\u003ddoWriteMessages(buf);\n  if (localFlushedAmount \u003e 0) {\n    writeCounter+\u003dlocalFlushedAmount;\n    notifyFlushFutures();\n  }\n}\n","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":true,"scope":"EXT_T","local":"io.netty.channel.socket.oio.AbstractOioMessageChannel.flushMessageBuf(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"METHOD_DECLARATION","change":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":true,"scope":"CLASS_T","local":"transport.src.main.io.netty.channel.socket.oio.OioServerSocketChannel"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"CLASS_INSTANCE_CREATION","change":"new UnsupportedOperationException()","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"MARKER_ANNOTATION","change":"@Override","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"MODIFIER","change":"protected","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"PARAMETERIZED_TYPE","change":"Queue\u003cObject\u003e","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"PRIMITIVE_TYPE","change":"int","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"SIMPLE_TYPE","change":"UnsupportedOperationException","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"SIMPLE_TYPE","change":"Exception","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"SIMPLE_TYPE","change":"Object","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"SIMPLE_TYPE","change":"Queue","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Queue\u003cObject\u003e buf","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"7b05f3417162caffee26aef59e005710bb8bac1c","changeType":"THROW_STATEMENT","change":"throw new UnsupportedOperationException();\n","source":"io.netty.channel.socket.oio.AbstractOioChannel.doWriteMessages(Queue)","target":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.oio.OioServerSocketChannel.doWriteMessages(Queue)"}
{"project":"netty_netty","commit":"81de2275e482c8954c85e67be0d2799b53ba6e6e","changeType":"METHOD_DECLARATION","change":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","source":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","target":"io.netty.channel.DefaultChannelPipeline.teardownAll()","added":false,"scope":"CLASS_S","local":"transport.src.main.io.netty.channel.DefaultChannelHandlerContext"}
{"project":"netty_netty","commit":"81de2275e482c8954c85e67be0d2799b53ba6e6e","changeType":"EXPRESSION_STATEMENT","change":"pipeline.tail.prev.teardown()","source":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","target":"io.netty.channel.DefaultChannelPipeline.teardownAll()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()"}
{"project":"netty_netty","commit":"81de2275e482c8954c85e67be0d2799b53ba6e6e","changeType":"METHOD_INVOCATION","change":"pipeline.tail.prev.teardown()","source":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","target":"io.netty.channel.DefaultChannelPipeline.teardownAll()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()"}
{"project":"netty_netty","commit":"81de2275e482c8954c85e67be0d2799b53ba6e6e","changeType":"PRIMITIVE_TYPE","change":"void","source":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","target":"io.netty.channel.DefaultChannelPipeline.teardownAll()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()"}
{"project":"netty_netty","commit":"81de2275e482c8954c85e67be0d2799b53ba6e6e","changeType":"QUALIFIED_NAME","change":"pipeline.tail","source":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","target":"io.netty.channel.DefaultChannelPipeline.teardownAll()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()"}
{"project":"netty_netty","commit":"81de2275e482c8954c85e67be0d2799b53ba6e6e","changeType":"QUALIFIED_NAME","change":"pipeline.tail.prev","source":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","target":"io.netty.channel.DefaultChannelPipeline.teardownAll()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()"}
{"project":"netty_netty","commit":"81de2275e482c8954c85e67be0d2799b53ba6e6e","changeType":"JAVADOC","change":"/** \n * Invocation initiated by  {@link DefaultChannelPipeline#teardownAll()}}. \n */\n","source":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","target":"io.netty.channel.DefaultChannelPipeline.teardownAll()","added":true,"scope":"SUR_T","local":"io.netty.channel.DefaultChannelHandlerContext.teardown()"}
{"project":"netty_netty","commit":"81de2275e482c8954c85e67be0d2799b53ba6e6e","changeType":"METHOD_DECLARATION","change":"io.netty.channel.DefaultChannelPipeline.teardownAll()","source":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","target":"io.netty.channel.DefaultChannelPipeline.teardownAll()","added":true,"scope":"CLASS_T","local":"transport.src.main.io.netty.channel.DefaultChannelPipeline"}
{"project":"netty_netty","commit":"81de2275e482c8954c85e67be0d2799b53ba6e6e","changeType":"EXPRESSION_STATEMENT","change":"tail.prev.teardown()","source":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","target":"io.netty.channel.DefaultChannelPipeline.teardownAll()","added":true,"scope":"TARGET","local":"io.netty.channel.DefaultChannelPipeline.teardownAll()"}
{"project":"netty_netty","commit":"81de2275e482c8954c85e67be0d2799b53ba6e6e","changeType":"JAVADOC","change":"/** \n * Removes all handlers from the pipeline one by one from tail (exclusive) to head (inclusive) to trigger handlerRemoved().  Note that the tail handler is excluded because it\u0027s neither an outbound handler nor it does anything in handlerRemoved().\n */\n","source":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","target":"io.netty.channel.DefaultChannelPipeline.teardownAll()","added":true,"scope":"TARGET","local":"io.netty.channel.DefaultChannelPipeline.teardownAll()"}
{"project":"netty_netty","commit":"81de2275e482c8954c85e67be0d2799b53ba6e6e","changeType":"METHOD_INVOCATION","change":"tail.prev.teardown()","source":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","target":"io.netty.channel.DefaultChannelPipeline.teardownAll()","added":true,"scope":"TARGET","local":"io.netty.channel.DefaultChannelPipeline.teardownAll()"}
{"project":"netty_netty","commit":"81de2275e482c8954c85e67be0d2799b53ba6e6e","changeType":"MODIFIER","change":"private","source":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","target":"io.netty.channel.DefaultChannelPipeline.teardownAll()","added":true,"scope":"TARGET","local":"io.netty.channel.DefaultChannelPipeline.teardownAll()"}
{"project":"netty_netty","commit":"81de2275e482c8954c85e67be0d2799b53ba6e6e","changeType":"PRIMITIVE_TYPE","change":"void","source":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","target":"io.netty.channel.DefaultChannelPipeline.teardownAll()","added":true,"scope":"TARGET","local":"io.netty.channel.DefaultChannelPipeline.teardownAll()"}
{"project":"netty_netty","commit":"81de2275e482c8954c85e67be0d2799b53ba6e6e","changeType":"QUALIFIED_NAME","change":"tail.prev","source":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","target":"io.netty.channel.DefaultChannelPipeline.teardownAll()","added":true,"scope":"TARGET","local":"io.netty.channel.DefaultChannelPipeline.teardownAll()"}
{"project":"netty_netty","commit":"81de2275e482c8954c85e67be0d2799b53ba6e6e","changeType":"EXPRESSION_STATEMENT","change":"teardownAll()","source":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","target":"io.netty.channel.DefaultChannelPipeline.teardownAll()","added":true,"scope":"EXT_T","local":"io.netty.channel.DefaultChannelPipeline.fireChannelUnregistered()"}
{"project":"netty_netty","commit":"81de2275e482c8954c85e67be0d2799b53ba6e6e","changeType":"METHOD_INVOCATION","change":"teardownAll()","source":"io.netty.channel.DefaultChannelHandlerContext.teardownAll()","target":"io.netty.channel.DefaultChannelPipeline.teardownAll()","added":true,"scope":"EXT_T","local":"io.netty.channel.DefaultChannelPipeline.fireChannelUnregistered()"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"METHOD_DECLARATION","change":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"CLASS_S","local":"transport.src.main.io.netty.channel.socket.nio.AbstractNioChannel"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"FOR_STATEMENT","change":"for (int i\u003dwriteSpinCount; i \u003e\u003d 0; i--) {\n  int localFlushedAmount\u003ddoWriteMessages(buf,i \u003d\u003d 0);\n  if (localFlushedAmount \u003e 0) {\n    writeCounter+\u003dlocalFlushedAmount;\n    wrote\u003dtrue;\n    notifyFlushFutures();\n    break;\n  }\n}\n","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"SUR_S","local":"io.netty.channel.socket.nio.AbstractNioChannel.flushMessageBuf(Queue)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"METHOD_INVOCATION","change":"doWriteMessages(buf,i \u003d\u003d 0)","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"SUR_S","local":"io.netty.channel.socket.nio.AbstractNioChannel.flushMessageBuf(Queue)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [localFlushedAmount\u003ddoWriteMessages(buf,i \u003d\u003d 0)]","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"SUR_S","local":"io.netty.channel.socket.nio.AbstractNioChannel.flushMessageBuf(Queue)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"WHILE_STATEMENT","change":"while (!buf.isEmpty()) {\n  boolean wrote\u003dfalse;\n  for (int i\u003dwriteSpinCount; i \u003e\u003d 0; i--) {\n    int localFlushedAmount\u003ddoWriteMessages(buf,i \u003d\u003d 0);\n    if (localFlushedAmount \u003e 0) {\n      writeCounter+\u003dlocalFlushedAmount;\n      wrote\u003dtrue;\n      notifyFlushFutures();\n      break;\n    }\n  }\n  if (!wrote) {\n    break;\n  }\n}\n","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"SUR_S","local":"io.netty.channel.socket.nio.AbstractNioChannel.flushMessageBuf(Queue)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"CLASS_INSTANCE_CREATION","change":"new UnsupportedOperationException()","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"MODIFIER","change":"protected","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"PARAMETERIZED_TYPE","change":"Queue\u003cObject\u003e","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"PRIMITIVE_TYPE","change":"int","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"SIMPLE_TYPE","change":"UnsupportedOperationException","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"SIMPLE_TYPE","change":"Exception","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"SIMPLE_TYPE","change":"Object","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"SIMPLE_TYPE","change":"Queue","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"SINGLE_VARIABLE_DECLARATION","change":"boolean lastSpin","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Queue\u003cObject\u003e buf","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"THROW_STATEMENT","change":"throw new UnsupportedOperationException();\n","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"METHOD_DECLARATION","change":"io.netty.channel.socket.nio.AbstractNioMessageChannel.doWriteMessages(Queue,boolean)","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"EXT_T","local":"transport.src.main.io.netty.channel.socket.nio.AbstractNioMessageChannel"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"FOR_STATEMENT","change":"for (int i\u003dwriteSpinCount; i \u003e\u003d 0; i--) {\n  int localFlushedAmount\u003ddoWriteMessages(buf,i \u003d\u003d 0);\n  if (localFlushedAmount \u003e 0) {\n    writeCounter+\u003dlocalFlushedAmount;\n    wrote\u003dtrue;\n    notifyFlushFutures();\n    break;\n  }\n}\n","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"EXT_T","local":"io.netty.channel.socket.nio.AbstractNioMessageChannel.flushMessageBuf(Queue)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"METHOD_INVOCATION","change":"doWriteMessages(buf,i \u003d\u003d 0)","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"EXT_T","local":"io.netty.channel.socket.nio.AbstractNioMessageChannel.flushMessageBuf(Queue)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [localFlushedAmount\u003ddoWriteMessages(buf,i \u003d\u003d 0)]","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"EXT_T","local":"io.netty.channel.socket.nio.AbstractNioMessageChannel.flushMessageBuf(Queue)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"WHILE_STATEMENT","change":"while (!buf.isEmpty()) {\n  boolean wrote\u003dfalse;\n  for (int i\u003dwriteSpinCount; i \u003e\u003d 0; i--) {\n    int localFlushedAmount\u003ddoWriteMessages(buf,i \u003d\u003d 0);\n    if (localFlushedAmount \u003e 0) {\n      writeCounter+\u003dlocalFlushedAmount;\n      wrote\u003dtrue;\n      notifyFlushFutures();\n      break;\n    }\n  }\n  if (!wrote) {\n    break;\n  }\n}\n","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"EXT_T","local":"io.netty.channel.socket.nio.AbstractNioMessageChannel.flushMessageBuf(Queue)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"METHOD_DECLARATION","change":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"CLASS_T","local":"transport.src.main.io.netty.channel.socket.nio.NioServerSocketChannel"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"CLASS_INSTANCE_CREATION","change":"new UnsupportedOperationException()","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"MARKER_ANNOTATION","change":"@Override","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"MODIFIER","change":"protected","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"PARAMETERIZED_TYPE","change":"Queue\u003cObject\u003e","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"PRIMITIVE_TYPE","change":"int","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"SIMPLE_TYPE","change":"UnsupportedOperationException","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"SIMPLE_TYPE","change":"Exception","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"SIMPLE_TYPE","change":"Object","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"SIMPLE_TYPE","change":"Queue","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"SINGLE_VARIABLE_DECLARATION","change":"boolean lastSpin","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Queue\u003cObject\u003e buf","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"064b3dc9e560f599143410dc3e9c7419ebf3a388","changeType":"THROW_STATEMENT","change":"throw new UnsupportedOperationException();\n","source":"io.netty.channel.socket.nio.AbstractNioChannel.doWriteMessages(Queue,boolean)","target":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.socket.nio.NioServerSocketChannel.doWriteMessages(Queue,boolean)"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"METHOD_DECLARATION","change":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"CLASS_T","local":"common.src.main.io.netty.util.internal.MacAddressUtil"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"ARRAY_CREATION","change":"new byte[EUI64_MAC_ADDRESS_LENGTH]","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"ARRAY_TYPE","change":"byte[]","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"ASSIGNMENT","change":"bestMacAddr \u003d new byte[EUI64_MAC_ADDRESS_LENGTH]","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"DIMENSION","change":"[]","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"EXPRESSION_STATEMENT","change":"logger.warn(\"Failed to find a usable hardware address from the network interfaces; using random bytes: {}\",MacAddressUtil.formatAddress(bestMacAddr))","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"EXPRESSION_STATEMENT","change":"ThreadLocalRandom.current().nextBytes(bestMacAddr)","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"EXPRESSION_STATEMENT","change":"bestMacAddr\u003dnew byte[EUI64_MAC_ADDRESS_LENGTH]","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"IF_STATEMENT","change":"bestMacAddr \u003d\u003d null","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"INFIX_EXPRESSION","change":"bestMacAddr \u003d\u003d null","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"JAVADOC","change":"/** \n * Returns the result of  {@link #bestAvailableMac()} if non-{@code null} otherwise returns a random EUI-64 MACaddress.\n */\n","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"METHOD_INVOCATION","change":"MacAddressUtil.formatAddress(bestMacAddr)","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"METHOD_INVOCATION","change":"logger.warn(\"Failed to find a usable hardware address from the network interfaces; using random bytes: {}\",MacAddressUtil.formatAddress(bestMacAddr))","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"METHOD_INVOCATION","change":"ThreadLocalRandom.current()","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"METHOD_INVOCATION","change":"ThreadLocalRandom.current().nextBytes(bestMacAddr)","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"METHOD_INVOCATION","change":"MacAddressUtil.bestAvailableMac()","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"MODIFIER","change":"static","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"MODIFIER","change":"public","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"NULL_LITERAL","change":"null","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"PRIMITIVE_TYPE","change":"byte","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"RETURN_STATEMENT","change":"return bestMacAddr;\n","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"STRING_LITERAL","change":"Failed to find a usable hardware address from the network interfaces; using random bytes: {}","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"bestMacAddr","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"byte[] [bestMacAddr\u003dMacAddressUtil.bestAvailableMac()]","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"TARGET","local":"io.netty.util.internal.MacAddressUtil.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"METHOD_DECLARATION","change":"io.netty.channel.DefaultChannelId.defaultMachineId()","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"CLASS_S","local":"transport.src.main.io.netty.channel.DefaultChannelId"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"ARRAY_CREATION","change":"new byte[MacAddressUtil.MAC_ADDRESS_LENGTH]","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"ARRAY_TYPE","change":"byte[]","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"ASSIGNMENT","change":"bestMacAddr \u003d new byte[MacAddressUtil.MAC_ADDRESS_LENGTH]","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"DIMENSION","change":"[]","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"EXPRESSION_STATEMENT","change":"logger.warn(\"Failed to find a usable hardware address from the network interfaces; using random bytes: {}\",MacAddressUtil.formatAddress(bestMacAddr))","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"EXPRESSION_STATEMENT","change":"ThreadLocalRandom.current().nextBytes(bestMacAddr)","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"EXPRESSION_STATEMENT","change":"bestMacAddr\u003dnew byte[MacAddressUtil.MAC_ADDRESS_LENGTH]","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"IF_STATEMENT","change":"bestMacAddr \u003d\u003d null","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"INFIX_EXPRESSION","change":"bestMacAddr \u003d\u003d null","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"METHOD_INVOCATION","change":"MacAddressUtil.formatAddress(bestMacAddr)","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"METHOD_INVOCATION","change":"logger.warn(\"Failed to find a usable hardware address from the network interfaces; using random bytes: {}\",MacAddressUtil.formatAddress(bestMacAddr))","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"METHOD_INVOCATION","change":"ThreadLocalRandom.current()","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"METHOD_INVOCATION","change":"ThreadLocalRandom.current().nextBytes(bestMacAddr)","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"METHOD_INVOCATION","change":"MacAddressUtil.bestAvailableMac()","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"MODIFIER","change":"static","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"MODIFIER","change":"private","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"NULL_LITERAL","change":"null","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"PRIMITIVE_TYPE","change":"byte","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"QUALIFIED_NAME","change":"MacAddressUtil.MAC_ADDRESS_LENGTH","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"RETURN_STATEMENT","change":"return bestMacAddr;\n","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"STRING_LITERAL","change":"Failed to find a usable hardware address from the network interfaces; using random bytes: {}","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"bestMacAddr","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"byte[] [bestMacAddr\u003dMacAddressUtil.bestAvailableMac()]","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelId.defaultMachineId()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"INITIALIZER","change":"static {\n  int processId\u003d-1;\n  String customProcessId\u003dSystemPropertyUtil.get(\"io.netty.processId\");\n  if (customProcessId !\u003d null) {\n    try {\n      processId\u003dInteger.parseInt(customProcessId);\n    }\n catch (    NumberFormatException e) {\n    }\n    if (processId \u003c 0) {\n      processId\u003d-1;\n      logger.warn(\"-Dio.netty.processId: {} (malformed)\",customProcessId);\n    }\n else     if (logger.isDebugEnabled()) {\n      logger.debug(\"-Dio.netty.processId: {} (user-set)\",processId);\n    }\n  }\n  if (processId \u003c 0) {\n    processId\u003ddefaultProcessId();\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"-Dio.netty.processId: {} (auto-detected)\",processId);\n    }\n  }\n  PROCESS_ID\u003dprocessId;\n  byte[] machineId\u003dnull;\n  String customMachineId\u003dSystemPropertyUtil.get(\"io.netty.machineId\");\n  if (customMachineId !\u003d null) {\n    try {\n      machineId\u003dparseMAC(customMachineId);\n    }\n catch (    Exception e) {\n      logger.warn(\"-Dio.netty.machineId: {} (malformed)\",customMachineId,e);\n    }\n    if (machineId !\u003d null) {\n      logger.debug(\"-Dio.netty.machineId: {} (user-set)\",customMachineId);\n    }\n  }\n  if (machineId \u003d\u003d null) {\n    machineId\u003ddefaultMachineId();\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"-Dio.netty.machineId: {} (auto-detected)\",MacAddressUtil.formatAddress(machineId));\n    }\n  }\n  MACHINE_ID\u003dmachineId;\n}\n","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":true,"scope":"EXT_T","local":"io.netty.channel.DefaultChannelId.newInstance()"}
{"project":"netty_netty","commit":"3d1133415179daab602db1709bdf01d7a297e9f3","changeType":"INITIALIZER","change":"static {\n  int processId\u003d-1;\n  String customProcessId\u003dSystemPropertyUtil.get(\"io.netty.processId\");\n  if (customProcessId !\u003d null) {\n    try {\n      processId\u003dInteger.parseInt(customProcessId);\n    }\n catch (    NumberFormatException e) {\n    }\n    if (processId \u003c 0) {\n      processId\u003d-1;\n      logger.warn(\"-Dio.netty.processId: {} (malformed)\",customProcessId);\n    }\n else     if (logger.isDebugEnabled()) {\n      logger.debug(\"-Dio.netty.processId: {} (user-set)\",processId);\n    }\n  }\n  if (processId \u003c 0) {\n    processId\u003ddefaultProcessId();\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"-Dio.netty.processId: {} (auto-detected)\",processId);\n    }\n  }\n  PROCESS_ID\u003dprocessId;\n  byte[] machineId\u003dnull;\n  String customMachineId\u003dSystemPropertyUtil.get(\"io.netty.machineId\");\n  if (customMachineId !\u003d null) {\n    if (MACHINE_ID_PATTERN.matcher(customMachineId).matches()) {\n      machineId\u003dparseMachineId(customMachineId);\n      logger.debug(\"-Dio.netty.machineId: {} (user-set)\",customMachineId);\n    }\n else {\n      logger.warn(\"-Dio.netty.machineId: {} (malformed)\",customMachineId);\n    }\n  }\n  if (machineId \u003d\u003d null) {\n    machineId\u003ddefaultMachineId();\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"-Dio.netty.machineId: {} (auto-detected)\",MacAddressUtil.formatAddress(machineId));\n    }\n  }\n  MACHINE_ID\u003dmachineId;\n}\n","source":"io.netty.channel.DefaultChannelId.defaultMachineId()","target":"io.netty.util.internal.MacAddressUtil.defaultMachineId()","added":false,"scope":"EXT_S","local":"io.netty.channel.DefaultChannelId.newInstance()"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"METHOD_DECLARATION","change":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"CLASS_S","local":"buffer.src.main.io.netty.buffer.AbstractByteBuf"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"ASSIGNMENT","change":"newCapacity \u003c\u003c\u003d 1","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"ASSIGNMENT","change":"newCapacity +\u003d threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"ASSIGNMENT","change":"newCapacity \u003d maxCapacity","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"EXPRESSION_STATEMENT","change":"newCapacity\u003c\u003c\u003d1","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"EXPRESSION_STATEMENT","change":"newCapacity+\u003dthreshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"EXPRESSION_STATEMENT","change":"newCapacity\u003dmaxCapacity","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"FIELD_ACCESS","change":"this.maxCapacity","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"IF_STATEMENT","change":"newCapacity \u003e maxCapacity - threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"IF_STATEMENT","change":"minNewCapacity \u003e threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"IF_STATEMENT","change":"minNewCapacity \u003d\u003d threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"newCapacity \u003c minNewCapacity","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"maxCapacity - threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"newCapacity \u003e maxCapacity - threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"minNewCapacity / threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"minNewCapacity / threshold * threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"minNewCapacity \u003e threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"minNewCapacity \u003d\u003d threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"1048576 * 4","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"METHOD_INVOCATION","change":"Math.min(newCapacity,maxCapacity)","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"MODIFIER","change":"final","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"MODIFIER","change":"private","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"NUMBER_LITERAL","change":"1","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"NUMBER_LITERAL","change":"64","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"NUMBER_LITERAL","change":"4","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"NUMBER_LITERAL","change":"1048576","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"PRIMITIVE_TYPE","change":"int","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"RETURN_STATEMENT","change":"return Math.min(newCapacity,maxCapacity);\n","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"RETURN_STATEMENT","change":"return newCapacity;\n","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"RETURN_STATEMENT","change":"return threshold;\n","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"SINGLE_VARIABLE_DECLARATION","change":"int minNewCapacity","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"THIS_EXPRESSION","change":"this","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"newCapacity","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"maxCapacity","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [newCapacity\u003d64]","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [newCapacity\u003dminNewCapacity / threshold * threshold]","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [threshold\u003d1048576 * 4]","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [maxCapacity\u003dthis.maxCapacity]","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"WHILE_STATEMENT","change":"while (newCapacity \u003c minNewCapacity) {\n  newCapacity\u003c\u003c\u003d1;\n}\n","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SOURCE","local":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"METHOD_INVOCATION","change":"alloc().calculateNewCapacity(writerIndex + minWritableBytes,maxCapacity)","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"SUR_T","local":"io.netty.buffer.AbstractByteBuf.ensureWritable(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [newCapacity\u003dalloc().calculateNewCapacity(writerIndex + minWritableBytes,maxCapacity)]","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"SUR_T","local":"io.netty.buffer.AbstractByteBuf.ensureWritable(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"METHOD_INVOCATION","change":"calculateNewCapacity(writerIndex + minWritableBytes)","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SUR_S","local":"io.netty.buffer.AbstractByteBuf.ensureWritable(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [newCapacity\u003dcalculateNewCapacity(writerIndex + minWritableBytes)]","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SUR_S","local":"io.netty.buffer.AbstractByteBuf.ensureWritable(int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"METHOD_INVOCATION","change":"alloc().calculateNewCapacity(writerIndex + minWritableBytes,maxCapacity)","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"SUR_T","local":"io.netty.buffer.AbstractByteBuf.ensureWritable(int,boolean)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [newCapacity\u003dalloc().calculateNewCapacity(writerIndex + minWritableBytes,maxCapacity)]","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"SUR_T","local":"io.netty.buffer.AbstractByteBuf.ensureWritable(int,boolean)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"METHOD_INVOCATION","change":"calculateNewCapacity(writerIndex + minWritableBytes)","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SUR_S","local":"io.netty.buffer.AbstractByteBuf.ensureWritable(int,boolean)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [newCapacity\u003dcalculateNewCapacity(writerIndex + minWritableBytes)]","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":false,"scope":"SUR_S","local":"io.netty.buffer.AbstractByteBuf.ensureWritable(int,boolean)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"METHOD_DECLARATION","change":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"CLASS_T","local":"buffer.src.main.io.netty.buffer.AbstractByteBufAllocator"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"ASSIGNMENT","change":"newCapacity \u003c\u003c\u003d 1","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"ASSIGNMENT","change":"newCapacity +\u003d threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"ASSIGNMENT","change":"newCapacity \u003d maxCapacity","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"CLASS_INSTANCE_CREATION","change":"new IllegalArgumentException(String.format(\"minNewCapacity: %d (expected: not greater than maxCapacity(%d)\",minNewCapacity,maxCapacity))","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"CLASS_INSTANCE_CREATION","change":"new IllegalArgumentException(\"minNewCapacity: \" + minNewCapacity + \" (expectd: 0+)\")","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"EXPRESSION_STATEMENT","change":"newCapacity\u003c\u003c\u003d1","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"EXPRESSION_STATEMENT","change":"newCapacity+\u003dthreshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"EXPRESSION_STATEMENT","change":"newCapacity\u003dmaxCapacity","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"IF_STATEMENT","change":"newCapacity \u003e maxCapacity - threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"IF_STATEMENT","change":"minNewCapacity \u003e threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"IF_STATEMENT","change":"minNewCapacity \u003d\u003d threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"IF_STATEMENT","change":"minNewCapacity \u003e maxCapacity","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"IF_STATEMENT","change":"minNewCapacity \u003c 0","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"newCapacity \u003c minNewCapacity","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"maxCapacity - threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"newCapacity \u003e maxCapacity - threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"minNewCapacity / threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"minNewCapacity / threshold * threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"minNewCapacity \u003e threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"minNewCapacity \u003d\u003d threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"1048576 * 4","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"minNewCapacity \u003e maxCapacity","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"\"minNewCapacity: \" + minNewCapacity + \" (expectd: 0+)\"","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"INFIX_EXPRESSION","change":"minNewCapacity \u003c 0","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"MARKER_ANNOTATION","change":"@Override","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"METHOD_INVOCATION","change":"Math.min(newCapacity,maxCapacity)","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"METHOD_INVOCATION","change":"String.format(\"minNewCapacity: %d (expected: not greater than maxCapacity(%d)\",minNewCapacity,maxCapacity)","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"MODIFIER","change":"final","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"MODIFIER","change":"public","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"NUMBER_LITERAL","change":"1","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"NUMBER_LITERAL","change":"64","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"NUMBER_LITERAL","change":"4","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"NUMBER_LITERAL","change":"1048576","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"NUMBER_LITERAL","change":"0","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"PRIMITIVE_TYPE","change":"int","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"RETURN_STATEMENT","change":"return Math.min(newCapacity,maxCapacity);\n","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"RETURN_STATEMENT","change":"return newCapacity;\n","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"RETURN_STATEMENT","change":"return threshold;\n","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"SIMPLE_TYPE","change":"IllegalArgumentException","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"SINGLE_VARIABLE_DECLARATION","change":"int maxCapacity","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"SINGLE_VARIABLE_DECLARATION","change":"int minNewCapacity","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"STRING_LITERAL","change":"minNewCapacity: %d (expected: not greater than maxCapacity(%d)","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"STRING_LITERAL","change":" (expectd: 0+)","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"STRING_LITERAL","change":"minNewCapacity: ","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"THROW_STATEMENT","change":"throw new IllegalArgumentException(String.format(\"minNewCapacity: %d (expected: not greater than maxCapacity(%d)\",minNewCapacity,maxCapacity));\n","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"THROW_STATEMENT","change":"throw new IllegalArgumentException(\"minNewCapacity: \" + minNewCapacity + \" (expectd: 0+)\");\n","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"newCapacity","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"threshold","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [newCapacity\u003d64]","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [newCapacity\u003dminNewCapacity / threshold * threshold]","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [threshold\u003d1048576 * 4]","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"WHILE_STATEMENT","change":"while (newCapacity \u003c minNewCapacity) {\n  newCapacity\u003c\u003c\u003d1;\n}\n","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)"}
{"project":"netty_netty","commit":"ad86ec798d20cfd825aebf50cf14b7bb29cfae93","changeType":"METHOD_DECLARATION","change":"io.netty.buffer.ByteBufAllocator.calculateNewCapacity(int,int)","source":"io.netty.buffer.AbstractByteBuf.calculateNewCapacity(int)","target":"io.netty.buffer.AbstractByteBufAllocator.calculateNewCapacity(int,int)","added":true,"scope":"EXT_T","local":"buffer.src.main.io.netty.buffer.ByteBufAllocator"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_DECLARATION","change":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"CLASS_T","local":"transport.src.main.io.netty.channel.AbstractChannel"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"EXPRESSION_STATEMENT","change":"byteBuf.ensureWritableBytes(increment)","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"EXPRESSION_STATEMENT","change":"byteBuf.capacity(maxCapacity)","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"EXPRESSION_STATEMENT","change":"byteBuf.discardReadBytes()","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"IF_STATEMENT","change":"writerIndex + increment \u003e maxCapacity","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"IF_STATEMENT","change":"byteBuf.readerIndex() !\u003d 0","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"IF_STATEMENT","change":"capacity \u003d\u003d maxCapacity","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"IF_STATEMENT","change":"capacity !\u003d writerIndex","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"INFIX_EXPRESSION","change":"writerIndex + increment","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"INFIX_EXPRESSION","change":"writerIndex + increment \u003e maxCapacity","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"INFIX_EXPRESSION","change":"byteBuf.readerIndex() !\u003d 0","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"INFIX_EXPRESSION","change":"capacity \u003d\u003d maxCapacity","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"INFIX_EXPRESSION","change":"capacity !\u003d writerIndex","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_INVOCATION","change":"byteBuf.ensureWritableBytes(increment)","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_INVOCATION","change":"byteBuf.capacity(maxCapacity)","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_INVOCATION","change":"byteBuf.discardReadBytes()","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_INVOCATION","change":"byteBuf.readerIndex()","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_INVOCATION","change":"byteBuf.maxCapacity()","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_INVOCATION","change":"byteBuf.capacity()","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_INVOCATION","change":"byteBuf.writerIndex()","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"MODIFIER","change":"final","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"MODIFIER","change":"static","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"MODIFIER","change":"protected","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"NUMBER_LITERAL","change":"1","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"NUMBER_LITERAL","change":"4096","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"NUMBER_LITERAL","change":"2","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"NUMBER_LITERAL","change":"0","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"PRIMITIVE_TYPE","change":"int","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"RETURN_STATEMENT","change":"return 1;\n","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"RETURN_STATEMENT","change":"return 2;\n","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"RETURN_STATEMENT","change":"return 0;\n","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"SIMPLE_TYPE","change":"ByteBuf","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ByteBuf byteBuf","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"increment","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"maxCapacity","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"capacity","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"writerIndex","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [increment\u003d4096]","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [maxCapacity\u003dbyteBuf.maxCapacity()]","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [capacity\u003dbyteBuf.capacity()]","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [writerIndex\u003dbyteBuf.writerIndex()]","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_DECLARATION","change":"io.netty.channel.socket.aio.AioSocketChannel.expandReadBuffer(ByteBuf)","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"EXT_S","local":"transport.src.main.io.netty.channel.socket.aio.AioSocketChannel"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_DECLARATION","change":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"CLASS_S","local":"transport.src.main.io.netty.channel.socket.nio.AbstractNioByteChannel"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"EXPRESSION_STATEMENT","change":"byteBuf.ensureWritableBytes(increment)","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"EXPRESSION_STATEMENT","change":"byteBuf.capacity(maxCapacity)","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"EXPRESSION_STATEMENT","change":"byteBuf.discardReadBytes()","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"IF_STATEMENT","change":"writerIndex + increment \u003e maxCapacity","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"IF_STATEMENT","change":"byteBuf.readerIndex() !\u003d 0","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"IF_STATEMENT","change":"capacity \u003d\u003d maxCapacity","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"IF_STATEMENT","change":"capacity !\u003d writerIndex","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"INFIX_EXPRESSION","change":"writerIndex + increment","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"INFIX_EXPRESSION","change":"writerIndex + increment \u003e maxCapacity","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"INFIX_EXPRESSION","change":"byteBuf.readerIndex() !\u003d 0","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"INFIX_EXPRESSION","change":"capacity \u003d\u003d maxCapacity","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"INFIX_EXPRESSION","change":"capacity !\u003d writerIndex","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_INVOCATION","change":"byteBuf.ensureWritableBytes(increment)","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_INVOCATION","change":"byteBuf.capacity(maxCapacity)","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_INVOCATION","change":"byteBuf.discardReadBytes()","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_INVOCATION","change":"byteBuf.readerIndex()","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_INVOCATION","change":"byteBuf.maxCapacity()","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_INVOCATION","change":"byteBuf.capacity()","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_INVOCATION","change":"byteBuf.writerIndex()","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"MODIFIER","change":"final","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"MODIFIER","change":"static","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"MODIFIER","change":"private","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"NUMBER_LITERAL","change":"1","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"NUMBER_LITERAL","change":"4096","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"NUMBER_LITERAL","change":"2","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"NUMBER_LITERAL","change":"0","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"PRIMITIVE_TYPE","change":"int","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"RETURN_STATEMENT","change":"return 1;\n","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"RETURN_STATEMENT","change":"return 2;\n","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"RETURN_STATEMENT","change":"return 0;\n","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"SIMPLE_TYPE","change":"ByteBuf","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ByteBuf byteBuf","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"increment","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"maxCapacity","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"capacity","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"writerIndex","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [increment\u003d4096]","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [maxCapacity\u003dbyteBuf.maxCapacity()]","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [capacity\u003dbyteBuf.capacity()]","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [writerIndex\u003dbyteBuf.writerIndex()]","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"EXPRESSION_STATEMENT","change":"expandReadBuffer(byteBuf)","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"EXT_T","local":"io.netty.channel.socket.oio.AbstractOioByteChannel.doRead()"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"FOR_STATEMENT","change":"for (; ; ) {\n  int localReadAmount\u003ddoReadBytes(byteBuf);\n  if (localReadAmount \u003e 0) {\n    read\u003dtrue;\n  }\n else   if (localReadAmount \u003c 0) {\n    closed\u003dtrue;\n    break;\n  }\n  final int available\u003davailable();\n  if (available \u003c\u003d 0) {\n    break;\n  }\nswitch (expandReadBuffer(byteBuf)) {\ncase 0:\n    break loop;\ncase 1:\n  break;\ncase 2:\nif (read) {\n  read\u003dfalse;\n  pipeline.fireInboundBufferUpdated();\n  if (!byteBuf.writable()) {\n    throw new IllegalStateException(\"an inbound handler whose buffer is full must consume at \" + \"least one byte.\");\n  }\n}\n}\n}\n","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"EXT_T","local":"io.netty.channel.socket.oio.AbstractOioByteChannel.doRead()"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"LABELED_STATEMENT","change":"loop: for (; ; ) {\n  int localReadAmount\u003ddoReadBytes(byteBuf);\n  if (localReadAmount \u003e 0) {\n    read\u003dtrue;\n  }\n else   if (localReadAmount \u003c 0) {\n    closed\u003dtrue;\n    break;\n  }\n  final int available\u003davailable();\n  if (available \u003c\u003d 0) {\n    break;\n  }\nswitch (expandReadBuffer(byteBuf)) {\ncase 0:\n    break loop;\ncase 1:\n  break;\ncase 2:\nif (read) {\n  read\u003dfalse;\n  pipeline.fireInboundBufferUpdated();\n  if (!byteBuf.writable()) {\n    throw new IllegalStateException(\"an inbound handler whose buffer is full must consume at \" + \"least one byte.\");\n  }\n}\n}\n}\n","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"EXT_T","local":"io.netty.channel.socket.oio.AbstractOioByteChannel.doRead()"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"METHOD_INVOCATION","change":"expandReadBuffer(byteBuf)","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"EXT_T","local":"io.netty.channel.socket.oio.AbstractOioByteChannel.doRead()"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"SWITCH_STATEMENT","change":"switch (expandReadBuffer(byteBuf)) {\ncase 0:\n  break loop;\ncase 1:\nbreak;\ncase 2:\nif (read) {\nread\u003dfalse;\npipeline.fireInboundBufferUpdated();\nif (!byteBuf.writable()) {\n  throw new IllegalStateException(\"an inbound handler whose buffer is full must consume at \" + \"least one byte.\");\n}\n}\n}\n","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"EXT_T","local":"io.netty.channel.socket.oio.AbstractOioByteChannel.doRead()"}
{"project":"netty_netty","commit":"5161ca733c330e21fa0f1b89ba4d464791600d52","changeType":"TRY_STATEMENT","change":"try {\n  expandReadBuffer(byteBuf);\n  loop:   for (; ; ) {\n    int localReadAmount\u003ddoReadBytes(byteBuf);\n    if (localReadAmount \u003e 0) {\n      read\u003dtrue;\n    }\n else     if (localReadAmount \u003c 0) {\n      closed\u003dtrue;\n      break;\n    }\n    final int available\u003davailable();\n    if (available \u003c\u003d 0) {\n      break;\n    }\nswitch (expandReadBuffer(byteBuf)) {\ncase 0:\n      break loop;\ncase 1:\n    break;\ncase 2:\n  if (read) {\n    read\u003dfalse;\n    pipeline.fireInboundBufferUpdated();\n    if (!byteBuf.writable()) {\n      throw new IllegalStateException(\"an inbound handler whose buffer is full must consume at \" + \"least one byte.\");\n    }\n  }\n}\n}\n}\n catch (Throwable t) {\nif (read) {\nread\u003dfalse;\npipeline.fireInboundBufferUpdated();\n}\nfiredInboundBufferSuspeneded\u003dtrue;\npipeline.fireInboundBufferSuspended();\npipeline.fireExceptionCaught(t);\nif (t instanceof IOException) {\nunsafe().close(unsafe().voidFuture());\n}\n}\n finally {\nif (read) {\npipeline.fireInboundBufferUpdated();\n}\nif (!firedInboundBufferSuspeneded) {\npipeline.fireInboundBufferSuspended();\n}\nif (closed) {\ninputShutdown\u003dtrue;\nif (isOpen()) {\nif (Boolean.TRUE.equals(config().getOption(ChannelOption.ALLOW_HALF_CLOSURE))) {\n  pipeline.fireUserEventTriggered(ChannelInputShutdownEvent.INSTANCE);\n}\n else {\n  unsafe().close(unsafe().voidFuture());\n}\n}\n}\n}\n","source":"io.netty.channel.socket.nio.AbstractNioByteChannel.expandReadBuffer(ByteBuf)","target":"io.netty.channel.AbstractChannel.expandReadBuffer(ByteBuf)","added":true,"scope":"EXT_T","local":"io.netty.channel.socket.oio.AbstractOioByteChannel.doRead()"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_DECLARATION","change":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"CLASS_T","local":"transport.src.main.io.netty.channel.ChannelHandlerInvokerUtil"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"BOOLEAN_LITERAL","change":"true","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"BOOLEAN_LITERAL","change":"false","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"CLASS_INSTANCE_CREATION","change":"new IllegalArgumentException(StringUtil.simpleClassName(AbstractChannel.CloseFuture.class) + \" not allowed in a pipeline\")","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"CLASS_INSTANCE_CREATION","change":"new IllegalArgumentException(StringUtil.simpleClassName(VoidChannelPromise.class) + \" not allowed for this operation\")","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"CLASS_INSTANCE_CREATION","change":"new IllegalArgumentException(String.format(\"promise.channel does not match: %s (expected: %s)\",promise.channel(),ctx.channel()))","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"CLASS_INSTANCE_CREATION","change":"new IllegalArgumentException(\"promise already done: \" + promise)","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"CLASS_INSTANCE_CREATION","change":"new NullPointerException(\"promise\")","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"CLASS_INSTANCE_CREATION","change":"new NullPointerException(\"ctx\")","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"IF_STATEMENT","change":"promise instanceof AbstractChannel.CloseFuture","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"IF_STATEMENT","change":"!allowVoidPromise \u0026\u0026 promise instanceof VoidChannelPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"IF_STATEMENT","change":"promise.getClass() \u003d\u003d DefaultChannelPromise.class","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"IF_STATEMENT","change":"promise.channel() !\u003d ctx.channel()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"IF_STATEMENT","change":"promise.isCancelled()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"IF_STATEMENT","change":"promise.isDone()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"IF_STATEMENT","change":"promise \u003d\u003d null","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"IF_STATEMENT","change":"ctx \u003d\u003d null","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INFIX_EXPRESSION","change":"StringUtil.simpleClassName(AbstractChannel.CloseFuture.class) + \" not allowed in a pipeline\"","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INFIX_EXPRESSION","change":"StringUtil.simpleClassName(VoidChannelPromise.class) + \" not allowed for this operation\"","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INFIX_EXPRESSION","change":"!allowVoidPromise \u0026\u0026 promise instanceof VoidChannelPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INFIX_EXPRESSION","change":"promise.getClass() \u003d\u003d DefaultChannelPromise.class","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INFIX_EXPRESSION","change":"promise.channel() !\u003d ctx.channel()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INFIX_EXPRESSION","change":"\"promise already done: \" + promise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INFIX_EXPRESSION","change":"promise \u003d\u003d null","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INFIX_EXPRESSION","change":"ctx \u003d\u003d null","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INSTANCEOF_EXPRESSION","change":"promise instanceof AbstractChannel.CloseFuture","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INSTANCEOF_EXPRESSION","change":"promise instanceof VoidChannelPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_INVOCATION","change":"StringUtil.simpleClassName(AbstractChannel.CloseFuture.class)","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_INVOCATION","change":"StringUtil.simpleClassName(VoidChannelPromise.class)","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_INVOCATION","change":"promise.getClass()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_INVOCATION","change":"ctx.channel()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_INVOCATION","change":"promise.channel()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_INVOCATION","change":"String.format(\"promise.channel does not match: %s (expected: %s)\",promise.channel(),ctx.channel())","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_INVOCATION","change":"promise.isCancelled()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_INVOCATION","change":"promise.isDone()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"MODIFIER","change":"static","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"MODIFIER","change":"public","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"NULL_LITERAL","change":"null","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"PREFIX_EXPRESSION","change":"!allowVoidPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"QUALIFIED_NAME","change":"AbstractChannel.CloseFuture","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"RETURN_STATEMENT","change":"return true;\n","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"RETURN_STATEMENT","change":"return false;\n","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SIMPLE_TYPE","change":"AbstractChannel.CloseFuture","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SIMPLE_TYPE","change":"IllegalArgumentException","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SIMPLE_TYPE","change":"VoidChannelPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SIMPLE_TYPE","change":"DefaultChannelPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SIMPLE_TYPE","change":"NullPointerException","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SIMPLE_TYPE","change":"ChannelPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SIMPLE_TYPE","change":"ChannelHandlerContext","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SINGLE_VARIABLE_DECLARATION","change":"boolean allowVoidPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ChannelPromise promise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ChannelHandlerContext ctx","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"STRING_LITERAL","change":" not allowed in a pipeline","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"STRING_LITERAL","change":" not allowed for this operation","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"STRING_LITERAL","change":"promise.channel does not match: %s (expected: %s)","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"STRING_LITERAL","change":"promise already done: ","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"STRING_LITERAL","change":"promise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"STRING_LITERAL","change":"ctx","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"THROW_STATEMENT","change":"throw new IllegalArgumentException(StringUtil.simpleClassName(AbstractChannel.CloseFuture.class) + \" not allowed in a pipeline\");\n","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"THROW_STATEMENT","change":"throw new IllegalArgumentException(StringUtil.simpleClassName(VoidChannelPromise.class) + \" not allowed for this operation\");\n","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"THROW_STATEMENT","change":"throw new IllegalArgumentException(String.format(\"promise.channel does not match: %s (expected: %s)\",promise.channel(),ctx.channel()));\n","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"THROW_STATEMENT","change":"throw new IllegalArgumentException(\"promise already done: \" + promise);\n","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"THROW_STATEMENT","change":"throw new NullPointerException(\"promise\");\n","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"THROW_STATEMENT","change":"throw new NullPointerException(\"ctx\");\n","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"TYPE_LITERAL","change":"AbstractChannel.CloseFuture","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"TYPE_LITERAL","change":"VoidChannelPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"TYPE_LITERAL","change":"DefaultChannelPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":true,"scope":"TARGET","local":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_DECLARATION","change":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"CLASS_S","local":"transport.src.main.io.netty.channel.DefaultChannelHandlerInvoker"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"BOOLEAN_LITERAL","change":"true","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"BOOLEAN_LITERAL","change":"false","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"CLASS_INSTANCE_CREATION","change":"new IllegalArgumentException(StringUtil.simpleClassName(AbstractChannel.CloseFuture.class) + \" not allowed in a pipeline\")","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"CLASS_INSTANCE_CREATION","change":"new IllegalArgumentException(StringUtil.simpleClassName(VoidChannelPromise.class) + \" not allowed for this operation\")","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"CLASS_INSTANCE_CREATION","change":"new IllegalArgumentException(String.format(\"promise.channel does not match: %s (expected: %s)\",promise.channel(),ctx.channel()))","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"CLASS_INSTANCE_CREATION","change":"new IllegalArgumentException(\"promise already done: \" + promise)","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"CLASS_INSTANCE_CREATION","change":"new NullPointerException(\"promise\")","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"CLASS_INSTANCE_CREATION","change":"new NullPointerException(\"ctx\")","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"IF_STATEMENT","change":"promise instanceof AbstractChannel.CloseFuture","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"IF_STATEMENT","change":"!allowVoidPromise \u0026\u0026 promise instanceof VoidChannelPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"IF_STATEMENT","change":"promise.getClass() \u003d\u003d DefaultChannelPromise.class","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"IF_STATEMENT","change":"promise.channel() !\u003d ctx.channel()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"IF_STATEMENT","change":"promise.isCancelled()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"IF_STATEMENT","change":"promise.isDone()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"IF_STATEMENT","change":"promise \u003d\u003d null","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"IF_STATEMENT","change":"ctx \u003d\u003d null","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INFIX_EXPRESSION","change":"StringUtil.simpleClassName(AbstractChannel.CloseFuture.class) + \" not allowed in a pipeline\"","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INFIX_EXPRESSION","change":"StringUtil.simpleClassName(VoidChannelPromise.class) + \" not allowed for this operation\"","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INFIX_EXPRESSION","change":"!allowVoidPromise \u0026\u0026 promise instanceof VoidChannelPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INFIX_EXPRESSION","change":"promise.getClass() \u003d\u003d DefaultChannelPromise.class","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INFIX_EXPRESSION","change":"promise.channel() !\u003d ctx.channel()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INFIX_EXPRESSION","change":"\"promise already done: \" + promise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INFIX_EXPRESSION","change":"promise \u003d\u003d null","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INFIX_EXPRESSION","change":"ctx \u003d\u003d null","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INSTANCEOF_EXPRESSION","change":"promise instanceof AbstractChannel.CloseFuture","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"INSTANCEOF_EXPRESSION","change":"promise instanceof VoidChannelPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_INVOCATION","change":"StringUtil.simpleClassName(AbstractChannel.CloseFuture.class)","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_INVOCATION","change":"StringUtil.simpleClassName(VoidChannelPromise.class)","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_INVOCATION","change":"promise.getClass()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_INVOCATION","change":"ctx.channel()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_INVOCATION","change":"promise.channel()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_INVOCATION","change":"String.format(\"promise.channel does not match: %s (expected: %s)\",promise.channel(),ctx.channel())","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_INVOCATION","change":"promise.isCancelled()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"METHOD_INVOCATION","change":"promise.isDone()","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"MODIFIER","change":"static","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"MODIFIER","change":"private","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"NULL_LITERAL","change":"null","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"PREFIX_EXPRESSION","change":"!allowVoidPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"QUALIFIED_NAME","change":"AbstractChannel.CloseFuture","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"RETURN_STATEMENT","change":"return true;\n","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"RETURN_STATEMENT","change":"return false;\n","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SIMPLE_TYPE","change":"AbstractChannel.CloseFuture","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SIMPLE_TYPE","change":"IllegalArgumentException","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SIMPLE_TYPE","change":"VoidChannelPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SIMPLE_TYPE","change":"DefaultChannelPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SIMPLE_TYPE","change":"NullPointerException","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SIMPLE_TYPE","change":"ChannelPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SIMPLE_TYPE","change":"ChannelHandlerContext","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SINGLE_VARIABLE_DECLARATION","change":"boolean allowVoidPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ChannelPromise promise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ChannelHandlerContext ctx","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"STRING_LITERAL","change":" not allowed in a pipeline","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"STRING_LITERAL","change":" not allowed for this operation","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"STRING_LITERAL","change":"promise.channel does not match: %s (expected: %s)","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"STRING_LITERAL","change":"promise already done: ","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"STRING_LITERAL","change":"promise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"STRING_LITERAL","change":"ctx","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"THROW_STATEMENT","change":"throw new IllegalArgumentException(StringUtil.simpleClassName(AbstractChannel.CloseFuture.class) + \" not allowed in a pipeline\");\n","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"THROW_STATEMENT","change":"throw new IllegalArgumentException(StringUtil.simpleClassName(VoidChannelPromise.class) + \" not allowed for this operation\");\n","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"THROW_STATEMENT","change":"throw new IllegalArgumentException(String.format(\"promise.channel does not match: %s (expected: %s)\",promise.channel(),ctx.channel()));\n","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"THROW_STATEMENT","change":"throw new IllegalArgumentException(\"promise already done: \" + promise);\n","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"THROW_STATEMENT","change":"throw new NullPointerException(\"promise\");\n","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"THROW_STATEMENT","change":"throw new NullPointerException(\"ctx\");\n","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"TYPE_LITERAL","change":"AbstractChannel.CloseFuture","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"TYPE_LITERAL","change":"VoidChannelPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"9e02a9bbee4cd3db1fa08955cb7fe4515bf3c50c","changeType":"TYPE_LITERAL","change":"DefaultChannelPromise","source":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","target":"io.netty.channel.ChannelHandlerInvokerUtil.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)","added":false,"scope":"SOURCE","local":"io.netty.channel.DefaultChannelHandlerInvoker.validatePromise(ChannelHandlerContext,ChannelPromise,boolean)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"METHOD_DECLARATION","change":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"CLASS_T","local":"common.src.main.io.netty.util.concurrent.AbstractEventExecutor"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"CATCH_CLAUSE","change":"catch (Throwable t) {\n  logger.warn(\"A task raised an exception. Task: {}\",task,t);\n}\n","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"TARGET","local":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"EXPRESSION_STATEMENT","change":"logger.warn(\"A task raised an exception. Task: {}\",task,t)","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"TARGET","local":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"EXPRESSION_STATEMENT","change":"task.run()","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"TARGET","local":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"JAVADOC","change":"/** \n * Try to execute the given  {@link Runnable} and just log if it throws a {@link Throwable}.\n */\n","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"TARGET","local":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"METHOD_INVOCATION","change":"logger.warn(\"A task raised an exception. Task: {}\",task,t)","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"TARGET","local":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"METHOD_INVOCATION","change":"task.run()","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"TARGET","local":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"MODIFIER","change":"static","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"TARGET","local":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"MODIFIER","change":"protected","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"TARGET","local":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"PRIMITIVE_TYPE","change":"void","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"TARGET","local":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"SIMPLE_TYPE","change":"Throwable","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"TARGET","local":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"SIMPLE_TYPE","change":"Runnable","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"TARGET","local":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Throwable t","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"TARGET","local":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Runnable task","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"TARGET","local":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"STRING_LITERAL","change":"A task raised an exception. Task: {}","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"TARGET","local":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"TRY_STATEMENT","change":"try {\n  task.run();\n}\n catch (Throwable t) {\n  logger.warn(\"A task raised an exception. Task: {}\",task,t);\n}\n","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"TARGET","local":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"EXPRESSION_STATEMENT","change":"safeExecute(task)","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"EXT_T","local":"io.netty.util.concurrent.NonStickyEventExecutorGroup.run()"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"FOR_STATEMENT","change":"for (; i \u003c maxTaskExecutePerRun; i++) {\n  Runnable task\u003dtasks.poll();\n  if (task \u003d\u003d null) {\n    break;\n  }\n  safeExecute(task);\n}\n","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"EXT_T","local":"io.netty.util.concurrent.NonStickyEventExecutorGroup.run()"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"FOR_STATEMENT","change":"for (; ; ) {\n  int i\u003d0;\n  try {\n    for (; i \u003c maxTaskExecutePerRun; i++) {\n      Runnable task\u003dtasks.poll();\n      if (task \u003d\u003d null) {\n        break;\n      }\n      safeExecute(task);\n    }\n  }\n  finally {\n    if (i \u003d\u003d maxTaskExecutePerRun) {\n      try {\n        state.set(SUBMITTED);\n        executor.execute(this);\n        return;\n      }\n catch (      Throwable ignore) {\n        state.set(RUNNING);\n      }\n    }\n else {\n      state.set(NONE);\n      return;\n    }\n  }\n}\n","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"EXT_T","local":"io.netty.util.concurrent.NonStickyEventExecutorGroup.run()"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"METHOD_INVOCATION","change":"safeExecute(task)","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"EXT_T","local":"io.netty.util.concurrent.NonStickyEventExecutorGroup.run()"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"TRY_STATEMENT","change":"try {\n  for (; i \u003c maxTaskExecutePerRun; i++) {\n    Runnable task\u003dtasks.poll();\n    if (task \u003d\u003d null) {\n      break;\n    }\n    safeExecute(task);\n  }\n}\n  finally {\n  if (i \u003d\u003d maxTaskExecutePerRun) {\n    try {\n      state.set(SUBMITTED);\n      executor.execute(this);\n      return;\n    }\n catch (    Throwable ignore) {\n      state.set(RUNNING);\n    }\n  }\n else {\n    state.set(NONE);\n    return;\n  }\n}\n","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":true,"scope":"EXT_T","local":"io.netty.util.concurrent.NonStickyEventExecutorGroup.run()"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"METHOD_DECLARATION","change":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":false,"scope":"CLASS_S","local":"common.src.main.io.netty.util.concurrent.SingleThreadEventExecutor"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"CATCH_CLAUSE","change":"catch (Throwable t) {\n  logger.warn(\"A task raised an exception. Task: {}\",task,t);\n}\n","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":false,"scope":"SOURCE","local":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"EXPRESSION_STATEMENT","change":"logger.warn(\"A task raised an exception. Task: {}\",task,t)","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":false,"scope":"SOURCE","local":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"EXPRESSION_STATEMENT","change":"task.run()","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":false,"scope":"SOURCE","local":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"METHOD_INVOCATION","change":"logger.warn(\"A task raised an exception. Task: {}\",task,t)","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":false,"scope":"SOURCE","local":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"METHOD_INVOCATION","change":"task.run()","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":false,"scope":"SOURCE","local":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"MODIFIER","change":"static","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":false,"scope":"SOURCE","local":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"MODIFIER","change":"private","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":false,"scope":"SOURCE","local":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"PRIMITIVE_TYPE","change":"void","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":false,"scope":"SOURCE","local":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"SIMPLE_TYPE","change":"Throwable","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":false,"scope":"SOURCE","local":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"SIMPLE_TYPE","change":"Runnable","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":false,"scope":"SOURCE","local":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Throwable t","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":false,"scope":"SOURCE","local":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Runnable task","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":false,"scope":"SOURCE","local":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"STRING_LITERAL","change":"A task raised an exception. Task: {}","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":false,"scope":"SOURCE","local":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"fc14ca31cb36715690bdf785d6713ae2b0919159","changeType":"TRY_STATEMENT","change":"try {\n  task.run();\n}\n catch (Throwable t) {\n  logger.warn(\"A task raised an exception. Task: {}\",task,t);\n}\n","source":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)","target":"io.netty.util.concurrent.AbstractEventExecutor.safeExecute(Runnable)","added":false,"scope":"SOURCE","local":"io.netty.util.concurrent.SingleThreadEventExecutor.safeExecute(Runnable)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"METHOD_DECLARATION","change":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"CLASS_T","local":"codec-http.src.main.io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"METHOD_DECLARATION","change":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters()","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"CLASS_S","local":"codec-http.src.main.io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"ARRAY_ACCESS","change":"sao.bytes[sao.pos++]","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"CAST_EXPRESSION","change":"(char)(sao.bytes[sao.pos++] \u0026 0xFF)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"CATCH_CLAUSE","change":"catch (IndexOutOfBoundsException e1) {\n  throw new NotEnoughDataDecoderException(e1);\n}\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"CLASS_INSTANCE_CREATION","change":"new NotEnoughDataDecoderException(\"Access out of bounds\")","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"CLASS_INSTANCE_CREATION","change":"new SeekAheadOptimize(undecodedChunk)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"CLASS_INSTANCE_CREATION","change":"new NotEnoughDataDecoderException(e1)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"EXPRESSION_STATEMENT","change":"sao.setReadPosition(1)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"EXPRESSION_STATEMENT","change":"skipControlCharactersStandard(undecodedChunk)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"IF_STATEMENT","change":"!Character.isISOControl(c) \u0026\u0026 !Character.isWhitespace(c)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"IF_STATEMENT","change":"!undecodedChunk.hasArray()","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"INFIX_EXPRESSION","change":"!Character.isISOControl(c) \u0026\u0026 !Character.isWhitespace(c)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"INFIX_EXPRESSION","change":"sao.bytes[sao.pos++] \u0026 0xFF","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"INFIX_EXPRESSION","change":"sao.pos \u003c sao.limit","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"JAVADOC","change":"/** \n * Skip control Characters\n * @throws NotEnoughDataDecoderException\n */\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"METHOD_INVOCATION","change":"sao.setReadPosition(1)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"METHOD_INVOCATION","change":"Character.isWhitespace(c)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"METHOD_INVOCATION","change":"Character.isISOControl(c)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"METHOD_INVOCATION","change":"skipControlCharactersStandard(undecodedChunk)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"METHOD_INVOCATION","change":"undecodedChunk.hasArray()","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"MODIFIER","change":"static","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"MODIFIER","change":"private","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"NUMBER_LITERAL","change":"1","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"NUMBER_LITERAL","change":"0xFF","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"PARENTHESIZED_EXPRESSION","change":"(sao.bytes[sao.pos++] \u0026 0xFF)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"POSTFIX_EXPRESSION","change":"sao.pos++","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"PREFIX_EXPRESSION","change":"!Character.isWhitespace(c)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"PREFIX_EXPRESSION","change":"!Character.isISOControl(c)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"PREFIX_EXPRESSION","change":"!undecodedChunk.hasArray()","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"PRIMITIVE_TYPE","change":"char","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"PRIMITIVE_TYPE","change":"void","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"QUALIFIED_NAME","change":"sao.pos","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"QUALIFIED_NAME","change":"sao.bytes","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"QUALIFIED_NAME","change":"sao.limit","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"RETURN_STATEMENT","change":"return;\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"SIMPLE_TYPE","change":"NotEnoughDataDecoderException","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"SIMPLE_TYPE","change":"SeekAheadOptimize","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"SIMPLE_TYPE","change":"IndexOutOfBoundsException","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"SIMPLE_TYPE","change":"ByteBuf","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"SINGLE_VARIABLE_DECLARATION","change":"IndexOutOfBoundsException e1","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ByteBuf undecodedChunk","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"STRING_LITERAL","change":"Access out of bounds","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"THROW_STATEMENT","change":"throw new NotEnoughDataDecoderException(\"Access out of bounds\");\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"THROW_STATEMENT","change":"throw new NotEnoughDataDecoderException(e1);\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"TRY_STATEMENT","change":"try {\n  skipControlCharactersStandard(undecodedChunk);\n}\n catch (IndexOutOfBoundsException e1) {\n  throw new NotEnoughDataDecoderException(e1);\n}\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"c","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"sao","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"char [c\u003d(char)(sao.bytes[sao.pos++] \u0026 0xFF)]","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"SeekAheadOptimize [sao\u003dnew SeekAheadOptimize(undecodedChunk)]","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"WHILE_STATEMENT","change":"while (sao.pos \u003c sao.limit) {\n  char c\u003d(char)(sao.bytes[sao.pos++] \u0026 0xFF);\n  if (!Character.isISOControl(c) \u0026\u0026 !Character.isWhitespace(c)) {\n    sao.setReadPosition(1);\n    return;\n  }\n}\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"EXPRESSION_STATEMENT","change":"skipControlCharacters(undecodedChunk)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"SUR_T","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.findMultipartDelimiter(String,MultiPartStatus,MultiPartStatus)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"METHOD_INVOCATION","change":"skipControlCharacters(undecodedChunk)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"SUR_T","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.findMultipartDelimiter(String,MultiPartStatus,MultiPartStatus)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"TRY_STATEMENT","change":"try {\n  skipControlCharacters(undecodedChunk);\n}\n catch (NotEnoughDataDecoderException ignored) {\n  undecodedChunk.readerIndex(readerIndex);\n  return null;\n}\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"SUR_T","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.findMultipartDelimiter(String,MultiPartStatus,MultiPartStatus)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"EXPRESSION_STATEMENT","change":"skipControlCharacters()","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SUR_S","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.findMultipartDelimiter(String,MultiPartStatus,MultiPartStatus)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"METHOD_INVOCATION","change":"skipControlCharacters()","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SUR_S","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.findMultipartDelimiter(String,MultiPartStatus,MultiPartStatus)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"TRY_STATEMENT","change":"try {\n  skipControlCharacters();\n}\n catch (NotEnoughDataDecoderException ignored) {\n  undecodedChunk.readerIndex(readerIndex);\n  return null;\n}\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SUR_S","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.findMultipartDelimiter(String,MultiPartStatus,MultiPartStatus)"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"EXPRESSION_STATEMENT","change":"skipControlCharacters(undecodedChunk)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"SUR_T","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.findMultipartDisposition()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"METHOD_INVOCATION","change":"skipControlCharacters(undecodedChunk)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"SUR_T","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.findMultipartDisposition()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"TRY_STATEMENT","change":"try {\n  skipControlCharacters(undecodedChunk);\n  newline\u003dreadLine(undecodedChunk,charset);\n}\n catch (NotEnoughDataDecoderException ignored) {\n  undecodedChunk.readerIndex(readerIndex);\n  return null;\n}\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"SUR_T","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.findMultipartDisposition()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"WHILE_STATEMENT","change":"while (!skipOneLine()) {\n  String newline;\n  try {\n    skipControlCharacters(undecodedChunk);\n    newline\u003dreadLine(undecodedChunk,charset);\n  }\n catch (  NotEnoughDataDecoderException ignored) {\n    undecodedChunk.readerIndex(readerIndex);\n    return null;\n  }\n  String[] contents\u003dsplitMultipartHeader(newline);\n  if (HttpHeaderNames.CONTENT_DISPOSITION.contentEqualsIgnoreCase(contents[0])) {\n    boolean checkSecondArg;\n    if (currentStatus \u003d\u003d MultiPartStatus.DISPOSITION) {\n      checkSecondArg\u003dHttpHeaderValues.FORM_DATA.contentEqualsIgnoreCase(contents[1]);\n    }\n else {\n      checkSecondArg\u003dHttpHeaderValues.ATTACHMENT.contentEqualsIgnoreCase(contents[1]) || HttpHeaderValues.FILE.contentEqualsIgnoreCase(contents[1]);\n    }\n    if (checkSecondArg) {\n      for (int i\u003d2; i \u003c contents.length; i++) {\n        String[] values\u003dcontents[i].split(\"\u003d\",2);\n        Attribute attribute;\n        try {\n          String name\u003dcleanString(values[0]);\n          String value\u003dvalues[1];\n          if (HttpHeaderValues.FILENAME.contentEquals(name)) {\n            value\u003dvalue.substring(1,value.length() - 1);\n          }\n else {\n            value\u003dcleanString(value);\n          }\n          attribute\u003dfactory.createAttribute(request,name,value);\n        }\n catch (        NullPointerException e) {\n          throw new ErrorDataDecoderException(e);\n        }\ncatch (        IllegalArgumentException e) {\n          throw new ErrorDataDecoderException(e);\n        }\n        currentFieldAttributes.put(attribute.getName(),attribute);\n      }\n    }\n  }\n else   if (HttpHeaderNames.CONTENT_TRANSFER_ENCODING.contentEqualsIgnoreCase(contents[0])) {\n    Attribute attribute;\n    try {\n      attribute\u003dfactory.createAttribute(request,HttpHeaderNames.CONTENT_TRANSFER_ENCODING.toString(),cleanString(contents[1]));\n    }\n catch (    NullPointerException e) {\n      throw new ErrorDataDecoderException(e);\n    }\ncatch (    IllegalArgumentException e) {\n      throw new ErrorDataDecoderException(e);\n    }\n    currentFieldAttributes.put(HttpHeaderNames.CONTENT_TRANSFER_ENCODING,attribute);\n  }\n else   if (HttpHeaderNames.CONTENT_LENGTH.contentEqualsIgnoreCase(contents[0])) {\n    Attribute attribute;\n    try {\n      attribute\u003dfactory.createAttribute(request,HttpHeaderNames.CONTENT_LENGTH.toString(),cleanString(contents[1]));\n    }\n catch (    NullPointerException e) {\n      throw new ErrorDataDecoderException(e);\n    }\ncatch (    IllegalArgumentException e) {\n      throw new ErrorDataDecoderException(e);\n    }\n    currentFieldAttributes.put(HttpHeaderNames.CONTENT_LENGTH,attribute);\n  }\n else   if (HttpHeaderNames.CONTENT_TYPE.contentEqualsIgnoreCase(contents[0])) {\n    if (HttpHeaderValues.MULTIPART_MIXED.contentEqualsIgnoreCase(contents[1])) {\n      if (currentStatus \u003d\u003d MultiPartStatus.DISPOSITION) {\n        String values\u003dStringUtil.substringAfter(contents[2],\u0027\u003d\u0027);\n        multipartMixedBoundary\u003d\"--\" + values;\n        currentStatus\u003dMultiPartStatus.MIXEDDELIMITER;\n        return decodeMultipart(MultiPartStatus.MIXEDDELIMITER);\n      }\n else {\n        throw new ErrorDataDecoderException(\"Mixed Multipart found in a previous Mixed Multipart\");\n      }\n    }\n else {\n      for (int i\u003d1; i \u003c contents.length; i++) {\n        final String charsetHeader\u003dHttpHeaderValues.CHARSET.toString();\n        if (contents[i].regionMatches(true,0,charsetHeader,0,charsetHeader.length())) {\n          String values\u003dStringUtil.substringAfter(contents[i],\u0027\u003d\u0027);\n          Attribute attribute;\n          try {\n            attribute\u003dfactory.createAttribute(request,charsetHeader,cleanString(values));\n          }\n catch (          NullPointerException e) {\n            throw new ErrorDataDecoderException(e);\n          }\ncatch (          IllegalArgumentException e) {\n            throw new ErrorDataDecoderException(e);\n          }\n          currentFieldAttributes.put(HttpHeaderValues.CHARSET,attribute);\n        }\n else {\n          Attribute attribute;\n          try {\n            attribute\u003dfactory.createAttribute(request,cleanString(contents[0]),contents[i]);\n          }\n catch (          NullPointerException e) {\n            throw new ErrorDataDecoderException(e);\n          }\ncatch (          IllegalArgumentException e) {\n            throw new ErrorDataDecoderException(e);\n          }\n          currentFieldAttributes.put(attribute.getName(),attribute);\n        }\n      }\n    }\n  }\n else {\n    throw new ErrorDataDecoderException(\"Unknown Params: \" + newline);\n  }\n}\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":true,"scope":"SUR_T","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.findMultipartDisposition()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"EXPRESSION_STATEMENT","change":"skipControlCharacters()","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SUR_S","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.findMultipartDisposition()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"METHOD_INVOCATION","change":"skipControlCharacters()","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SUR_S","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.findMultipartDisposition()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"TRY_STATEMENT","change":"try {\n  skipControlCharacters();\n  newline\u003dreadLine();\n}\n catch (NotEnoughDataDecoderException ignored) {\n  undecodedChunk.readerIndex(readerIndex);\n  return null;\n}\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SUR_S","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.findMultipartDisposition()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"WHILE_STATEMENT","change":"while (!skipOneLine()) {\n  String newline;\n  try {\n    skipControlCharacters();\n    newline\u003dreadLine();\n  }\n catch (  NotEnoughDataDecoderException ignored) {\n    undecodedChunk.readerIndex(readerIndex);\n    return null;\n  }\n  String[] contents\u003dsplitMultipartHeader(newline);\n  if (HttpHeaderNames.CONTENT_DISPOSITION.contentEqualsIgnoreCase(contents[0])) {\n    boolean checkSecondArg;\n    if (currentStatus \u003d\u003d MultiPartStatus.DISPOSITION) {\n      checkSecondArg\u003dHttpHeaderValues.FORM_DATA.contentEqualsIgnoreCase(contents[1]);\n    }\n else {\n      checkSecondArg\u003dHttpHeaderValues.ATTACHMENT.contentEqualsIgnoreCase(contents[1]) || HttpHeaderValues.FILE.contentEqualsIgnoreCase(contents[1]);\n    }\n    if (checkSecondArg) {\n      for (int i\u003d2; i \u003c contents.length; i++) {\n        String[] values\u003dcontents[i].split(\"\u003d\",2);\n        Attribute attribute;\n        try {\n          String name\u003dcleanString(values[0]);\n          String value\u003dvalues[1];\n          if (HttpHeaderValues.FILENAME.contentEquals(name)) {\n            value\u003dvalue.substring(1,value.length() - 1);\n          }\n else {\n            value\u003dcleanString(value);\n          }\n          attribute\u003dfactory.createAttribute(request,name,value);\n        }\n catch (        NullPointerException e) {\n          throw new ErrorDataDecoderException(e);\n        }\ncatch (        IllegalArgumentException e) {\n          throw new ErrorDataDecoderException(e);\n        }\n        currentFieldAttributes.put(attribute.getName(),attribute);\n      }\n    }\n  }\n else   if (HttpHeaderNames.CONTENT_TRANSFER_ENCODING.contentEqualsIgnoreCase(contents[0])) {\n    Attribute attribute;\n    try {\n      attribute\u003dfactory.createAttribute(request,HttpHeaderNames.CONTENT_TRANSFER_ENCODING.toString(),cleanString(contents[1]));\n    }\n catch (    NullPointerException e) {\n      throw new ErrorDataDecoderException(e);\n    }\ncatch (    IllegalArgumentException e) {\n      throw new ErrorDataDecoderException(e);\n    }\n    currentFieldAttributes.put(HttpHeaderNames.CONTENT_TRANSFER_ENCODING,attribute);\n  }\n else   if (HttpHeaderNames.CONTENT_LENGTH.contentEqualsIgnoreCase(contents[0])) {\n    Attribute attribute;\n    try {\n      attribute\u003dfactory.createAttribute(request,HttpHeaderNames.CONTENT_LENGTH.toString(),cleanString(contents[1]));\n    }\n catch (    NullPointerException e) {\n      throw new ErrorDataDecoderException(e);\n    }\ncatch (    IllegalArgumentException e) {\n      throw new ErrorDataDecoderException(e);\n    }\n    currentFieldAttributes.put(HttpHeaderNames.CONTENT_LENGTH,attribute);\n  }\n else   if (HttpHeaderNames.CONTENT_TYPE.contentEqualsIgnoreCase(contents[0])) {\n    if (HttpHeaderValues.MULTIPART_MIXED.contentEqualsIgnoreCase(contents[1])) {\n      if (currentStatus \u003d\u003d MultiPartStatus.DISPOSITION) {\n        String values\u003dStringUtil.substringAfter(contents[2],\u0027\u003d\u0027);\n        multipartMixedBoundary\u003d\"--\" + values;\n        currentStatus\u003dMultiPartStatus.MIXEDDELIMITER;\n        return decodeMultipart(MultiPartStatus.MIXEDDELIMITER);\n      }\n else {\n        throw new ErrorDataDecoderException(\"Mixed Multipart found in a previous Mixed Multipart\");\n      }\n    }\n else {\n      for (int i\u003d1; i \u003c contents.length; i++) {\n        final String charsetHeader\u003dHttpHeaderValues.CHARSET.toString();\n        if (contents[i].regionMatches(true,0,charsetHeader,0,charsetHeader.length())) {\n          String values\u003dStringUtil.substringAfter(contents[i],\u0027\u003d\u0027);\n          Attribute attribute;\n          try {\n            attribute\u003dfactory.createAttribute(request,charsetHeader,cleanString(values));\n          }\n catch (          NullPointerException e) {\n            throw new ErrorDataDecoderException(e);\n          }\ncatch (          IllegalArgumentException e) {\n            throw new ErrorDataDecoderException(e);\n          }\n          currentFieldAttributes.put(HttpHeaderValues.CHARSET,attribute);\n        }\n else {\n          Attribute attribute;\n          try {\n            attribute\u003dfactory.createAttribute(request,cleanString(contents[0]),contents[i]);\n          }\n catch (          NullPointerException e) {\n            throw new ErrorDataDecoderException(e);\n          }\ncatch (          IllegalArgumentException e) {\n            throw new ErrorDataDecoderException(e);\n          }\n          currentFieldAttributes.put(attribute.getName(),attribute);\n        }\n      }\n    }\n  }\n else {\n    throw new ErrorDataDecoderException(\"Unknown Params: \" + newline);\n  }\n}\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SUR_S","local":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.findMultipartDisposition()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"METHOD_DECLARATION","change":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"CLASS_S","local":"codec-http.src.main.io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"ARRAY_ACCESS","change":"sao.bytes[sao.pos++]","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"ASSIGNMENT","change":"sao \u003d new SeekAheadOptimize(undecodedChunk)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"CAST_EXPRESSION","change":"(char)(sao.bytes[sao.pos++] \u0026 0xFF)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"CATCH_CLAUSE","change":"catch (IndexOutOfBoundsException e) {\n  throw new NotEnoughDataDecoderException(e);\n}\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"CATCH_CLAUSE","change":"catch (SeekAheadNoBackArrayException ignored) {\n  try {\n    skipControlCharactersStandard();\n  }\n catch (  IndexOutOfBoundsException e) {\n    throw new NotEnoughDataDecoderException(e);\n  }\n  return;\n}\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"CLASS_INSTANCE_CREATION","change":"new NotEnoughDataDecoderException(\"Access out of bounds\")","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"CLASS_INSTANCE_CREATION","change":"new NotEnoughDataDecoderException(e)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"CLASS_INSTANCE_CREATION","change":"new SeekAheadOptimize(undecodedChunk)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"EXPRESSION_STATEMENT","change":"sao.setReadPosition(1)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"EXPRESSION_STATEMENT","change":"skipControlCharactersStandard()","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"EXPRESSION_STATEMENT","change":"sao\u003dnew SeekAheadOptimize(undecodedChunk)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"IF_STATEMENT","change":"!Character.isISOControl(c) \u0026\u0026 !Character.isWhitespace(c)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"INFIX_EXPRESSION","change":"!Character.isISOControl(c) \u0026\u0026 !Character.isWhitespace(c)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"INFIX_EXPRESSION","change":"sao.bytes[sao.pos++] \u0026 0xFF","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"INFIX_EXPRESSION","change":"sao.pos \u003c sao.limit","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"JAVADOC","change":"/** \n * Skip control Characters\n */\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"METHOD_INVOCATION","change":"sao.setReadPosition(1)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"METHOD_INVOCATION","change":"Character.isWhitespace(c)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"METHOD_INVOCATION","change":"Character.isISOControl(c)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"METHOD_INVOCATION","change":"skipControlCharactersStandard()","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"NUMBER_LITERAL","change":"1","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"NUMBER_LITERAL","change":"0xFF","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"PARENTHESIZED_EXPRESSION","change":"(sao.bytes[sao.pos++] \u0026 0xFF)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"POSTFIX_EXPRESSION","change":"sao.pos++","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"PREFIX_EXPRESSION","change":"!Character.isWhitespace(c)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"PREFIX_EXPRESSION","change":"!Character.isISOControl(c)","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"PRIMITIVE_TYPE","change":"char","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"PRIMITIVE_TYPE","change":"void","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"QUALIFIED_NAME","change":"sao.pos","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"QUALIFIED_NAME","change":"sao.bytes","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"QUALIFIED_NAME","change":"sao.limit","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"RETURN_STATEMENT","change":"return;\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"SIMPLE_TYPE","change":"NotEnoughDataDecoderException","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"SIMPLE_TYPE","change":"IndexOutOfBoundsException","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"SIMPLE_TYPE","change":"SeekAheadNoBackArrayException","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"SIMPLE_TYPE","change":"SeekAheadOptimize","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"SINGLE_VARIABLE_DECLARATION","change":"IndexOutOfBoundsException e","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"SINGLE_VARIABLE_DECLARATION","change":"SeekAheadNoBackArrayException ignored","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"STRING_LITERAL","change":"Access out of bounds","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"THROW_STATEMENT","change":"throw new NotEnoughDataDecoderException(\"Access out of bounds\");\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"THROW_STATEMENT","change":"throw new NotEnoughDataDecoderException(e);\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"TRY_STATEMENT","change":"try {\n  skipControlCharactersStandard();\n}\n catch (IndexOutOfBoundsException e) {\n  throw new NotEnoughDataDecoderException(e);\n}\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"TRY_STATEMENT","change":"try {\n  sao\u003dnew SeekAheadOptimize(undecodedChunk);\n}\n catch (SeekAheadNoBackArrayException ignored) {\n  try {\n    skipControlCharactersStandard();\n  }\n catch (  IndexOutOfBoundsException e) {\n    throw new NotEnoughDataDecoderException(e);\n  }\n  return;\n}\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"c","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"sao","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"char [c\u003d(char)(sao.bytes[sao.pos++] \u0026 0xFF)]","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"SeekAheadOptimize [sao]","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"b03b0f22d1e54733c2d39c7f913f971dab14ebfa","changeType":"WHILE_STATEMENT","change":"while (sao.pos \u003c sao.limit) {\n  char c\u003d(char)(sao.bytes[sao.pos++] \u0026 0xFF);\n  if (!Character.isISOControl(c) \u0026\u0026 !Character.isWhitespace(c)) {\n    sao.setReadPosition(1);\n    return;\n  }\n}\n","source":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()","target":"io.netty.handler.codec.http.multipart.HttpPostMultipartRequestDecoder.skipControlCharacters(ByteBuf)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.http.multipart.HttpPostStandardRequestDecoder.skipControlCharacters()"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_DECLARATION","change":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"CLASS_T","local":"buffer.src.main.io.netty.buffer.AbstractMessageBuf"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"ARRAY_ACCESS","change":"a[i]","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"ARRAY_TYPE","change":"Object[]","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"ASSIGNMENT","change":"i \u003d 0","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"BOOLEAN_LITERAL","change":"false","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"BREAK_STATEMENT","change":"break;\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"CAST_EXPRESSION","change":"(T)o","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"CAST_EXPRESSION","change":"(T)m","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"CAST_EXPRESSION","change":"(Object[])o","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"DIMENSION","change":"[]","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"EXPRESSION_STATEMENT","change":"add((T)m)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"FOR_STATEMENT","change":"for (i\u003d0; i \u003c a.length; i++) {\n  Object m\u003da[i];\n  if (m \u003d\u003d null) {\n    break;\n  }\n  add((T)m);\n}\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"m \u003d\u003d null","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"o instanceof Object[]","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"o \u003d\u003d null","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"INFIX_EXPRESSION","change":"i !\u003d 0","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"INFIX_EXPRESSION","change":"m \u003d\u003d null","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"INFIX_EXPRESSION","change":"i \u003c a.length","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"INFIX_EXPRESSION","change":"o \u003d\u003d null","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"INSTANCEOF_EXPRESSION","change":"o instanceof Object[]","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"MARKER_ANNOTATION","change":"@Override","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"add((T)o)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"add((T)m)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"MODIFIER","change":"public","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"NULL_LITERAL","change":"null","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"NUMBER_LITERAL","change":"0","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"POSTFIX_EXPRESSION","change":"i++","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"PRIMITIVE_TYPE","change":"int","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"QUALIFIED_NAME","change":"a.length","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"RETURN_STATEMENT","change":"return add((T)o);\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"RETURN_STATEMENT","change":"return i !\u003d 0;\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"RETURN_STATEMENT","change":"return false;\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"SIMPLE_TYPE","change":"T","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"SIMPLE_TYPE","change":"Object","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"SINGLE_MEMBER_ANNOTATION","change":"@SuppressWarnings(\"unchecked\")","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Object o","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"STRING_LITERAL","change":"unchecked","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"m","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"i","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"a","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Object [m\u003da[i]]","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [i]","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Object[] [a\u003d(Object[])o]","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"TARGET","local":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_DECLARATION","change":"io.netty.buffer.MessageBuf.unfoldAndAdd(Object)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"buffer.src.main.io.netty.buffer.MessageBuf"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"out.unfoldAndAdd(o)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.ByteToMessageDecoder.callDecode(ChannelHandlerContext,ByteBuf)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"out.unfoldAndAdd(o)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.ByteToMessageDecoder.callDecode(ChannelHandlerContext,ByteBuf)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"TRY_STATEMENT","change":"try {\n  int oldInputLength\u003din.readableBytes();\n  Object o\u003ddecode(ctx,in);\n  if (o \u003d\u003d null) {\n    wasNull\u003dtrue;\n    if (oldInputLength \u003d\u003d in.readableBytes()) {\n      break;\n    }\n else {\n      continue;\n    }\n  }\n  wasNull\u003dfalse;\n  if (oldInputLength \u003d\u003d in.readableBytes()) {\n    throw new IllegalStateException(\"decode() did not read anything but decoded a message.\");\n  }\n  if (out.unfoldAndAdd(o)) {\n    decoded\u003dtrue;\n    if (isSingleDecode()) {\n      break;\n    }\n  }\n else {\n    break;\n  }\n}\n catch (Throwable t) {\n  if (decoded) {\n    decoded\u003dfalse;\n    ctx.fireInboundBufferUpdated();\n  }\n  if (t instanceof CodecException) {\n    ctx.fireExceptionCaught(t);\n  }\n else {\n    ctx.fireExceptionCaught(new DecoderException(t));\n  }\n}\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.ByteToMessageDecoder.callDecode(ChannelHandlerContext,ByteBuf)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"WHILE_STATEMENT","change":"while (in.isReadable()) {\n  try {\n    int oldInputLength\u003din.readableBytes();\n    Object o\u003ddecode(ctx,in);\n    if (o \u003d\u003d null) {\n      wasNull\u003dtrue;\n      if (oldInputLength \u003d\u003d in.readableBytes()) {\n        break;\n      }\n else {\n        continue;\n      }\n    }\n    wasNull\u003dfalse;\n    if (oldInputLength \u003d\u003d in.readableBytes()) {\n      throw new IllegalStateException(\"decode() did not read anything but decoded a message.\");\n    }\n    if (out.unfoldAndAdd(o)) {\n      decoded\u003dtrue;\n      if (isSingleDecode()) {\n        break;\n      }\n    }\n else {\n      break;\n    }\n  }\n catch (  Throwable t) {\n    if (decoded) {\n      decoded\u003dfalse;\n      ctx.fireInboundBufferUpdated();\n    }\n    if (t instanceof CodecException) {\n      ctx.fireExceptionCaught(t);\n    }\n else {\n      ctx.fireExceptionCaught(new DecoderException(t));\n    }\n  }\n}\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.ByteToMessageDecoder.callDecode(ChannelHandlerContext,ByteBuf)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"ChannelHandlerUtil.unfoldAndAdd(ctx,o,true)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"EXT_S","local":"io.netty.handler.codec.ByteToMessageDecoder.callDecode(ChannelHandlerContext,ByteBuf)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"ChannelHandlerUtil.unfoldAndAdd(ctx,o,true)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"EXT_S","local":"io.netty.handler.codec.ByteToMessageDecoder.callDecode(ChannelHandlerContext,ByteBuf)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"TRY_STATEMENT","change":"try {\n  int oldInputLength\u003din.readableBytes();\n  Object o\u003ddecode(ctx,in);\n  if (o \u003d\u003d null) {\n    wasNull\u003dtrue;\n    if (oldInputLength \u003d\u003d in.readableBytes()) {\n      break;\n    }\n else {\n      continue;\n    }\n  }\n  wasNull\u003dfalse;\n  if (oldInputLength \u003d\u003d in.readableBytes()) {\n    throw new IllegalStateException(\"decode() did not read anything but decoded a message.\");\n  }\n  if (ChannelHandlerUtil.unfoldAndAdd(ctx,o,true)) {\n    decoded\u003dtrue;\n    if (isSingleDecode()) {\n      break;\n    }\n  }\n else {\n    break;\n  }\n}\n catch (Throwable t) {\n  if (decoded) {\n    decoded\u003dfalse;\n    ctx.fireInboundBufferUpdated();\n  }\n  if (t instanceof CodecException) {\n    ctx.fireExceptionCaught(t);\n  }\n else {\n    ctx.fireExceptionCaught(new DecoderException(t));\n  }\n}\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"EXT_S","local":"io.netty.handler.codec.ByteToMessageDecoder.callDecode(ChannelHandlerContext,ByteBuf)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"WHILE_STATEMENT","change":"while (in.isReadable()) {\n  try {\n    int oldInputLength\u003din.readableBytes();\n    Object o\u003ddecode(ctx,in);\n    if (o \u003d\u003d null) {\n      wasNull\u003dtrue;\n      if (oldInputLength \u003d\u003d in.readableBytes()) {\n        break;\n      }\n else {\n        continue;\n      }\n    }\n    wasNull\u003dfalse;\n    if (oldInputLength \u003d\u003d in.readableBytes()) {\n      throw new IllegalStateException(\"decode() did not read anything but decoded a message.\");\n    }\n    if (ChannelHandlerUtil.unfoldAndAdd(ctx,o,true)) {\n      decoded\u003dtrue;\n      if (isSingleDecode()) {\n        break;\n      }\n    }\n else {\n      break;\n    }\n  }\n catch (  Throwable t) {\n    if (decoded) {\n      decoded\u003dfalse;\n      ctx.fireInboundBufferUpdated();\n    }\n    if (t instanceof CodecException) {\n      ctx.fireExceptionCaught(t);\n    }\n else {\n      ctx.fireExceptionCaught(new DecoderException(t));\n    }\n  }\n}\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"EXT_S","local":"io.netty.handler.codec.ByteToMessageDecoder.callDecode(ChannelHandlerContext,ByteBuf)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"ctx.nextInboundMessageBuffer().unfoldAndAdd(decodeLast(ctx,in))","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ChannelHandlerContext)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"ctx.nextInboundMessageBuffer().unfoldAndAdd(decodeLast(ctx,in))","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ChannelHandlerContext)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"TRY_STATEMENT","change":"try {\n  if (ctx.nextInboundMessageBuffer().unfoldAndAdd(decodeLast(ctx,in))) {\n    ctx.fireInboundBufferUpdated();\n  }\n}\n catch (Throwable t) {\n  if (t instanceof CodecException) {\n    ctx.fireExceptionCaught(t);\n  }\n else {\n    ctx.fireExceptionCaught(new DecoderException(t));\n  }\n}\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ChannelHandlerContext)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"ChannelHandlerUtil.unfoldAndAdd(ctx,decodeLast(ctx,in),true)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"EXT_S","local":"io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ChannelHandlerContext)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"ChannelHandlerUtil.unfoldAndAdd(ctx,decodeLast(ctx,in),true)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"EXT_S","local":"io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ChannelHandlerContext)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"TRY_STATEMENT","change":"try {\n  if (ChannelHandlerUtil.unfoldAndAdd(ctx,decodeLast(ctx,in),true)) {\n    ctx.fireInboundBufferUpdated();\n  }\n}\n catch (Throwable t) {\n  if (t instanceof CodecException) {\n    ctx.fireExceptionCaught(t);\n  }\n else {\n    ctx.fireExceptionCaught(new DecoderException(t));\n  }\n}\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"EXT_S","local":"io.netty.handler.codec.ByteToMessageDecoder.channelInactive(ChannelHandlerContext)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"EXPRESSION_STATEMENT","change":"ctx.nextInboundMessageBuffer().unfoldAndAdd(decode(ctx,msg))","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.MessageToMessageDecoder.messageReceived(ChannelHandlerContext,I)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"ctx.nextInboundMessageBuffer().unfoldAndAdd(decode(ctx,msg))","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.MessageToMessageDecoder.messageReceived(ChannelHandlerContext,I)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"EXPRESSION_STATEMENT","change":"ctx.nextOutboundMessageBuffer().unfoldAndAdd(encode(ctx,msg))","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.MessageToMessageEncoder.flush(ChannelHandlerContext,I)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"ctx.nextOutboundMessageBuffer().unfoldAndAdd(encode(ctx,msg))","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.MessageToMessageEncoder.flush(ChannelHandlerContext,I)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"TRY_STATEMENT","change":"try {\n  ctx.nextOutboundMessageBuffer().unfoldAndAdd(encode(ctx,msg));\n}\n catch (CodecException e) {\n  throw e;\n}\ncatch (Exception e) {\n  throw new CodecException(e);\n}\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.MessageToMessageEncoder.flush(ChannelHandlerContext,I)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"out.unfoldAndAdd(result)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.ReplayingDecoder.callDecode(ChannelHandlerContext,ByteBuf)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"out.unfoldAndAdd(result)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.ReplayingDecoder.callDecode(ChannelHandlerContext,ByteBuf)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"TRY_STATEMENT","change":"try {\n  int oldReaderIndex\u003dcheckpoint\u003din.readerIndex();\n  Object result\u003dnull;\n  S oldState\u003dstate;\n  try {\n    result\u003ddecode(ctx,replayable);\n    if (result \u003d\u003d null) {\n      if (oldReaderIndex \u003d\u003d in.readerIndex() \u0026\u0026 oldState \u003d\u003d state) {\n        throw new IllegalStateException(\"null cannot be returned if no data is consumed and state didn\u0027t change.\");\n      }\n else {\n        continue;\n      }\n    }\n  }\n catch (  Signal replay) {\n    replay.expect(REPLAY);\n    int checkpoint\u003dthis.checkpoint;\n    if (checkpoint \u003e\u003d 0) {\n      in.readerIndex(checkpoint);\n    }\n else {\n    }\n  }\n  if (result \u003d\u003d null) {\n    wasNull\u003dtrue;\n    break;\n  }\n  wasNull\u003dfalse;\n  if (oldReaderIndex \u003d\u003d in.readerIndex() \u0026\u0026 oldState \u003d\u003d state) {\n    throw new IllegalStateException(\"decode() method must consume at least one byte \" + \"if it returned a decoded message (caused by: \" + getClass() + \u0027)\u0027);\n  }\n  if (out.unfoldAndAdd(result)) {\n    decoded\u003dtrue;\n    if (isSingleDecode()) {\n      break;\n    }\n  }\n}\n catch (Throwable t) {\n  if (decoded) {\n    decoded\u003dfalse;\n    ctx.fireInboundBufferUpdated();\n  }\n  if (t instanceof CodecException) {\n    ctx.fireExceptionCaught(t);\n  }\n else {\n    ctx.fireExceptionCaught(new DecoderException(t));\n  }\n}\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.ReplayingDecoder.callDecode(ChannelHandlerContext,ByteBuf)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"WHILE_STATEMENT","change":"while (in.isReadable()) {\n  try {\n    int oldReaderIndex\u003dcheckpoint\u003din.readerIndex();\n    Object result\u003dnull;\n    S oldState\u003dstate;\n    try {\n      result\u003ddecode(ctx,replayable);\n      if (result \u003d\u003d null) {\n        if (oldReaderIndex \u003d\u003d in.readerIndex() \u0026\u0026 oldState \u003d\u003d state) {\n          throw new IllegalStateException(\"null cannot be returned if no data is consumed and state didn\u0027t change.\");\n        }\n else {\n          continue;\n        }\n      }\n    }\n catch (    Signal replay) {\n      replay.expect(REPLAY);\n      int checkpoint\u003dthis.checkpoint;\n      if (checkpoint \u003e\u003d 0) {\n        in.readerIndex(checkpoint);\n      }\n else {\n      }\n    }\n    if (result \u003d\u003d null) {\n      wasNull\u003dtrue;\n      break;\n    }\n    wasNull\u003dfalse;\n    if (oldReaderIndex \u003d\u003d in.readerIndex() \u0026\u0026 oldState \u003d\u003d state) {\n      throw new IllegalStateException(\"decode() method must consume at least one byte \" + \"if it returned a decoded message (caused by: \" + getClass() + \u0027)\u0027);\n    }\n    if (out.unfoldAndAdd(result)) {\n      decoded\u003dtrue;\n      if (isSingleDecode()) {\n        break;\n      }\n    }\n  }\n catch (  Throwable t) {\n    if (decoded) {\n      decoded\u003dfalse;\n      ctx.fireInboundBufferUpdated();\n    }\n    if (t instanceof CodecException) {\n      ctx.fireExceptionCaught(t);\n    }\n else {\n      ctx.fireExceptionCaught(new DecoderException(t));\n    }\n  }\n}\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.ReplayingDecoder.callDecode(ChannelHandlerContext,ByteBuf)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"ChannelHandlerUtil.unfoldAndAdd(ctx,result,true)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"EXT_S","local":"io.netty.handler.codec.ReplayingDecoder.callDecode(ChannelHandlerContext,ByteBuf)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"ChannelHandlerUtil.unfoldAndAdd(ctx,result,true)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"EXT_S","local":"io.netty.handler.codec.ReplayingDecoder.callDecode(ChannelHandlerContext,ByteBuf)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"TRY_STATEMENT","change":"try {\n  int oldReaderIndex\u003dcheckpoint\u003din.readerIndex();\n  Object result\u003dnull;\n  S oldState\u003dstate;\n  try {\n    result\u003ddecode(ctx,replayable);\n    if (result \u003d\u003d null) {\n      if (oldReaderIndex \u003d\u003d in.readerIndex() \u0026\u0026 oldState \u003d\u003d state) {\n        throw new IllegalStateException(\"null cannot be returned if no data is consumed and state didn\u0027t change.\");\n      }\n else {\n        continue;\n      }\n    }\n  }\n catch (  Signal replay) {\n    replay.expect(REPLAY);\n    int checkpoint\u003dthis.checkpoint;\n    if (checkpoint \u003e\u003d 0) {\n      in.readerIndex(checkpoint);\n    }\n else {\n    }\n  }\n  if (result \u003d\u003d null) {\n    wasNull\u003dtrue;\n    break;\n  }\n  wasNull\u003dfalse;\n  if (oldReaderIndex \u003d\u003d in.readerIndex() \u0026\u0026 oldState \u003d\u003d state) {\n    throw new IllegalStateException(\"decode() method must consume at least one byte \" + \"if it returned a decoded message (caused by: \" + getClass() + \u0027)\u0027);\n  }\n  if (ChannelHandlerUtil.unfoldAndAdd(ctx,result,true)) {\n    decoded\u003dtrue;\n    if (isSingleDecode()) {\n      break;\n    }\n  }\n}\n catch (Throwable t) {\n  if (decoded) {\n    decoded\u003dfalse;\n    ctx.fireInboundBufferUpdated();\n  }\n  if (t instanceof CodecException) {\n    ctx.fireExceptionCaught(t);\n  }\n else {\n    ctx.fireExceptionCaught(new DecoderException(t));\n  }\n}\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"EXT_S","local":"io.netty.handler.codec.ReplayingDecoder.callDecode(ChannelHandlerContext,ByteBuf)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"WHILE_STATEMENT","change":"while (in.isReadable()) {\n  try {\n    int oldReaderIndex\u003dcheckpoint\u003din.readerIndex();\n    Object result\u003dnull;\n    S oldState\u003dstate;\n    try {\n      result\u003ddecode(ctx,replayable);\n      if (result \u003d\u003d null) {\n        if (oldReaderIndex \u003d\u003d in.readerIndex() \u0026\u0026 oldState \u003d\u003d state) {\n          throw new IllegalStateException(\"null cannot be returned if no data is consumed and state didn\u0027t change.\");\n        }\n else {\n          continue;\n        }\n      }\n    }\n catch (    Signal replay) {\n      replay.expect(REPLAY);\n      int checkpoint\u003dthis.checkpoint;\n      if (checkpoint \u003e\u003d 0) {\n        in.readerIndex(checkpoint);\n      }\n else {\n      }\n    }\n    if (result \u003d\u003d null) {\n      wasNull\u003dtrue;\n      break;\n    }\n    wasNull\u003dfalse;\n    if (oldReaderIndex \u003d\u003d in.readerIndex() \u0026\u0026 oldState \u003d\u003d state) {\n      throw new IllegalStateException(\"decode() method must consume at least one byte \" + \"if it returned a decoded message (caused by: \" + getClass() + \u0027)\u0027);\n    }\n    if (ChannelHandlerUtil.unfoldAndAdd(ctx,result,true)) {\n      decoded\u003dtrue;\n      if (isSingleDecode()) {\n        break;\n      }\n    }\n  }\n catch (  Throwable t) {\n    if (decoded) {\n      decoded\u003dfalse;\n      ctx.fireInboundBufferUpdated();\n    }\n    if (t instanceof CodecException) {\n      ctx.fireExceptionCaught(t);\n    }\n else {\n      ctx.fireExceptionCaught(new DecoderException(t));\n    }\n  }\n}\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"EXT_S","local":"io.netty.handler.codec.ReplayingDecoder.callDecode(ChannelHandlerContext,ByteBuf)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"ctx.nextInboundMessageBuffer().unfoldAndAdd(decodeLast(ctx,replayable))","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.ReplayingDecoder.channelInactive(ChannelHandlerContext)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"ctx.nextInboundMessageBuffer().unfoldAndAdd(decodeLast(ctx,replayable))","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.ReplayingDecoder.channelInactive(ChannelHandlerContext)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"TRY_STATEMENT","change":"try {\n  if (ctx.nextInboundMessageBuffer().unfoldAndAdd(decodeLast(ctx,replayable))) {\n    ctx.fireInboundBufferUpdated();\n  }\n}\n catch (Signal replay) {\n  replay.expect(REPLAY);\n}\ncatch (Throwable t) {\n  if (t instanceof CodecException) {\n    ctx.fireExceptionCaught(t);\n  }\n else {\n    ctx.fireExceptionCaught(new DecoderException(t));\n  }\n}\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.ReplayingDecoder.channelInactive(ChannelHandlerContext)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"ChannelHandlerUtil.unfoldAndAdd(ctx,decodeLast(ctx,replayable),true)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"EXT_S","local":"io.netty.handler.codec.ReplayingDecoder.channelInactive(ChannelHandlerContext)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"ChannelHandlerUtil.unfoldAndAdd(ctx,decodeLast(ctx,replayable),true)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"EXT_S","local":"io.netty.handler.codec.ReplayingDecoder.channelInactive(ChannelHandlerContext)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"TRY_STATEMENT","change":"try {\n  if (ChannelHandlerUtil.unfoldAndAdd(ctx,decodeLast(ctx,replayable),true)) {\n    ctx.fireInboundBufferUpdated();\n  }\n}\n catch (Signal replay) {\n  replay.expect(REPLAY);\n}\ncatch (Throwable t) {\n  if (t instanceof CodecException) {\n    ctx.fireExceptionCaught(t);\n  }\n else {\n    ctx.fireExceptionCaught(new DecoderException(t));\n  }\n}\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"EXT_S","local":"io.netty.handler.codec.ReplayingDecoder.channelInactive(ChannelHandlerContext)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_DECLARATION","change":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"CLASS_S","local":"transport.src.main.io.netty.channel.ChannelHandlerUtil"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"ARRAY_CREATION","change":"new Class\u003c?\u003e[0]","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"ARRAY_TYPE","change":"Class\u003c?\u003e[]","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"ARRAY_TYPE","change":"Object[]","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"ASSIGNMENT","change":"added \u003d true","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"BOOLEAN_LITERAL","change":"true","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"BOOLEAN_LITERAL","change":"false","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"BREAK_STATEMENT","change":"break;\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"CAST_EXPRESSION","change":"(Object[])msg","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"DIMENSION","change":"[]","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"ENHANCED_FOR_STATEMENT","change":"for (Object m : array) {\n  if (m \u003d\u003d null) {\n    break;\n  }\n  if (unfoldAndAdd(ctx,m,inbound)) {\n    added\u003dtrue;\n  }\n}\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"EXPRESSION_STATEMENT","change":"ctx.nextOutboundMessageBuffer().add(msg)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"EXPRESSION_STATEMENT","change":"ctx.nextInboundMessageBuffer().add(msg)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"EXPRESSION_STATEMENT","change":"added\u003dtrue","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"FIELD_DECLARATION","change":"private static final Class\u003c?\u003e[] EMPTY_TYPES\u003dnew Class\u003c?\u003e[0];\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"inbound","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"unfoldAndAdd(ctx,m,inbound)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"m \u003d\u003d null","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"array.length \u003d\u003d 0","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"msg instanceof Object[]","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"IF_STATEMENT","change":"msg \u003d\u003d null","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"INFIX_EXPRESSION","change":"m \u003d\u003d null","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"INFIX_EXPRESSION","change":"array.length \u003d\u003d 0","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"INFIX_EXPRESSION","change":"msg \u003d\u003d null","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"INSTANCEOF_EXPRESSION","change":"msg instanceof Object[]","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"JAVADOC","change":"/** \n * Unfold the given msg and pass it to the next buffer depending on the msg type.\n * @param ctx the  {@link ChannelHandlerContext} on which to operate\n * @param msg the msg to unfold and pass to the next buffer\n * @param inbound {@code true} if it is an inbound message, {@code false} otherwise\n * @return added{@code true} if the message was added to the next {@link ByteBuf} or {@link MessageBuf}\n * @throws Exception thrown if an error accour\n */\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"ctx.nextOutboundMessageBuffer()","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"ctx.nextOutboundMessageBuffer().add(msg)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"ctx.nextInboundMessageBuffer()","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"ctx.nextInboundMessageBuffer().add(msg)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"METHOD_INVOCATION","change":"unfoldAndAdd(ctx,m,inbound)","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"MODIFIER","change":"final","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"MODIFIER","change":"static","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"MODIFIER","change":"private","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"MODIFIER","change":"public","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"NULL_LITERAL","change":"null","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"NUMBER_LITERAL","change":"0","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"PARAMETERIZED_TYPE","change":"Class\u003c?\u003e","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"QUALIFIED_NAME","change":"array.length","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"RETURN_STATEMENT","change":"return true;\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"RETURN_STATEMENT","change":"return added;\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"RETURN_STATEMENT","change":"return false;\n","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"SIMPLE_TYPE","change":"Class","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"SIMPLE_TYPE","change":"Object","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"SIMPLE_TYPE","change":"Exception","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"SIMPLE_TYPE","change":"ChannelHandlerContext","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Object m","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"boolean inbound","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Object msg","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ChannelHandlerContext ctx","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"EMPTY_TYPES","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"added","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"array","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"boolean [added\u003dfalse]","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Object[] [array\u003d(Object[])msg]","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"44ea0a116f08a49e727c6b18957b4662ff6da9c8","changeType":"WILDCARD_TYPE","change":"?","source":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)","target":"io.netty.buffer.AbstractMessageBuf.unfoldAndAdd(Object)","added":false,"scope":"SOURCE","local":"io.netty.channel.ChannelHandlerUtil.unfoldAndAdd(ChannelHandlerContext,Object,boolean)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"METHOD_DECLARATION","change":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":true,"scope":"CLASS_T","local":"codec-http.src.main.io.netty.handler.codec.spdy.SpdyCodecUtil"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"INFIX_EXPRESSION","change":"ID % 2","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"INFIX_EXPRESSION","change":"ID % 2 \u003d\u003d 0","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"JAVADOC","change":"/** \n * Returns  {@code true} if ID is for a server initiated stream or ping.\n */\n","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"MODIFIER","change":"static","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"NUMBER_LITERAL","change":"0","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"NUMBER_LITERAL","change":"2","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"PRIMITIVE_TYPE","change":"int","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"RETURN_STATEMENT","change":"return ID % 2 \u003d\u003d 0;\n","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"SINGLE_VARIABLE_DECLARATION","change":"int ID","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":true,"scope":"TARGET","local":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"IF_STATEMENT","change":"SpdyCodecUtil.isServerID(streamID)","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.spdy.SpdyHttpDecoder.decode(ChannelHandlerContext,Channel,Object)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"METHOD_INVOCATION","change":"SpdyCodecUtil.isServerID(streamID)","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.spdy.SpdyHttpDecoder.decode(ChannelHandlerContext,Channel,Object)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"METHOD_DECLARATION","change":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":false,"scope":"CLASS_S","local":"codec-http.src.main.io.netty.handler.codec.spdy.SpdySessionHandler"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"INFIX_EXPRESSION","change":"ID % 2","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"INFIX_EXPRESSION","change":"ID % 2 \u003d\u003d 0","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"MODIFIER","change":"private","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"NUMBER_LITERAL","change":"0","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"NUMBER_LITERAL","change":"2","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"PRIMITIVE_TYPE","change":"int","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"RETURN_STATEMENT","change":"return ID % 2 \u003d\u003d 0;\n","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"SINGLE_VARIABLE_DECLARATION","change":"int ID","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":false,"scope":"SOURCE","local":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"METHOD_INVOCATION","change":"SpdyCodecUtil.isServerID(ID)","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.spdy.SpdySessionHandler.isRemoteInitiatedID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"boolean [serverID\u003dSpdyCodecUtil.isServerID(ID)]","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":true,"scope":"EXT_T","local":"io.netty.handler.codec.spdy.SpdySessionHandler.isRemoteInitiatedID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"METHOD_INVOCATION","change":"isServerID(ID)","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":false,"scope":"EXT_S","local":"io.netty.handler.codec.spdy.SpdySessionHandler.isRemoteInitiatedID(int)"}
{"project":"netty_netty","commit":"9b563c8a2829a43de19734b92a7eedd764a750d2","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"boolean [serverID\u003disServerID(ID)]","source":"io.netty.handler.codec.spdy.SpdySessionHandler.isServerID(int)","target":"io.netty.handler.codec.spdy.SpdyCodecUtil.isServerID(int)","added":false,"scope":"EXT_S","local":"io.netty.handler.codec.spdy.SpdySessionHandler.isRemoteInitiatedID(int)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"ANONYMOUS_CLASS_DECLARATION","change":"{\n  @Override void validateHeaderName(  String name){\n    super.validateHeaderName(name);\n    if (name.equalsIgnoreCase(HttpHeaders.Names.CONTENT_LENGTH) || name.equalsIgnoreCase(HttpHeaders.Names.TRANSFER_ENCODING) || name.equalsIgnoreCase(HttpHeaders.Names.TRAILER)) {\n      throw new IllegalArgumentException(\"prohibited trailing header: \" + name);\n    }\n  }\n}\n","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"CLASS_T","local":"src.main.org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"CLASS_INSTANCE_CREATION","change":"new HttpHeaders(){\n  @Override void validateHeaderName(  String name){\n    super.validateHeaderName(name);\n    if (name.equalsIgnoreCase(HttpHeaders.Names.CONTENT_LENGTH) || name.equalsIgnoreCase(HttpHeaders.Names.TRANSFER_ENCODING) || name.equalsIgnoreCase(HttpHeaders.Names.TRAILER)) {\n      throw new IllegalArgumentException(\"prohibited trailing header: \" + name);\n    }\n  }\n}\n","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"CLASS_T","local":"src.main.org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"FIELD_DECLARATION","change":"private final HttpHeaders headers\u003dnew HttpHeaders(){\n  @Override void validateHeaderName(  String name){\n    super.validateHeaderName(name);\n    if (name.equalsIgnoreCase(HttpHeaders.Names.CONTENT_LENGTH) || name.equalsIgnoreCase(HttpHeaders.Names.TRANSFER_ENCODING) || name.equalsIgnoreCase(HttpHeaders.Names.TRAILER)) {\n      throw new IllegalArgumentException(\"prohibited trailing header: \" + name);\n    }\n  }\n}\n;\n","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"CLASS_T","local":"src.main.org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"EXPRESSION_STATEMENT","change":"super.validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"MARKER_ANNOTATION","change":"@Override","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"SUPER_METHOD_INVOCATION","change":"super.validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"EXPRESSION_STATEMENT","change":"HttpCodecUtil.validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"METHOD_INVOCATION","change":"HttpCodecUtil.validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"MODIFIER","change":"private","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"MODIFIER","change":"static","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"EXPRESSION_STATEMENT","change":"validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":false,"scope":"SUR_S","local":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.setHeader(String,Iterable)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"METHOD_INVOCATION","change":"validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":false,"scope":"SUR_S","local":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.setHeader(String,Iterable)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"EXPRESSION_STATEMENT","change":"validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":false,"scope":"SUR_S","local":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.addHeader(String,String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"METHOD_INVOCATION","change":"validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":false,"scope":"SUR_S","local":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.addHeader(String,String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"EXPRESSION_STATEMENT","change":"validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":false,"scope":"SUR_S","local":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.setHeader(String,String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"METHOD_INVOCATION","change":"validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":false,"scope":"SUR_S","local":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.setHeader(String,String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"EXPRESSION_STATEMENT","change":"HttpCodecUtil.validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":false,"scope":"EXT_S","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setHeader(String,String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"METHOD_INVOCATION","change":"HttpCodecUtil.validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":false,"scope":"EXT_S","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setHeader(String,String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"EXPRESSION_STATEMENT","change":"HttpCodecUtil.validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":false,"scope":"EXT_S","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.addHeader(String,String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"METHOD_INVOCATION","change":"HttpCodecUtil.validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":false,"scope":"EXT_S","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.addHeader(String,String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"EXPRESSION_STATEMENT","change":"HttpCodecUtil.validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":false,"scope":"EXT_S","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setHeader(String,Iterable)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"METHOD_INVOCATION","change":"HttpCodecUtil.validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":false,"scope":"EXT_S","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setHeader(String,Iterable)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"METHOD_DECLARATION","change":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"CLASS_T","local":"src.main.org.jboss.netty.handler.codec.http.HttpHeaders"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"EXPRESSION_STATEMENT","change":"HttpCodecUtil.validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"METHOD_INVOCATION","change":"HttpCodecUtil.validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"SIMPLE_TYPE","change":"String","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String name","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"EXPRESSION_STATEMENT","change":"validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"EXT_T","local":"org.jboss.netty.handler.codec.http.HttpHeaders.addHeader(String,String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"METHOD_INVOCATION","change":"validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"EXT_T","local":"org.jboss.netty.handler.codec.http.HttpHeaders.addHeader(String,String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"EXPRESSION_STATEMENT","change":"validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"EXT_T","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setHeader(String,String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"METHOD_INVOCATION","change":"validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"EXT_T","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setHeader(String,String)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"EXPRESSION_STATEMENT","change":"validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"EXT_T","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setHeader(String,Iterable)"}
{"project":"netty_netty","commit":"4ede085edcd6ef4113945954ef2e54a8be8b0c59","changeType":"METHOD_INVOCATION","change":"validateHeaderName(name)","source":"org.jboss.netty.handler.codec.http.DefaultHttpChunkTrailer.validateHeaderName(String)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.validateHeaderName(String)","added":true,"scope":"EXT_T","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setHeader(String,Iterable)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"METHOD_DECLARATION","change":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"CLASS_S","local":"src.main.org.jboss.netty.handler.codec.http.DefaultHttpMessage"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"EXPRESSION_STATEMENT","change":"setHeader(Names.CONNECTION,Values.CLOSE)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"EXPRESSION_STATEMENT","change":"removeHeader(Names.CONNECTION)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"EXPRESSION_STATEMENT","change":"setHeader(Names.CONNECTION,Values.KEEP_ALIVE)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"IF_STATEMENT","change":"keepAlive","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"IF_STATEMENT","change":"version.equals(HttpVersion.HTTP_1_0)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"IF_STATEMENT","change":"!version.getProtocolName().equals(\"HTTP\")","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"METHOD_INVOCATION","change":"setHeader(Names.CONNECTION,Values.CLOSE)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"METHOD_INVOCATION","change":"removeHeader(Names.CONNECTION)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"METHOD_INVOCATION","change":"setHeader(Names.CONNECTION,Values.KEEP_ALIVE)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"METHOD_INVOCATION","change":"version.equals(HttpVersion.HTTP_1_0)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"METHOD_INVOCATION","change":"version.getProtocolName()","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"METHOD_INVOCATION","change":"version.getProtocolName().equals(\"HTTP\")","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"METHOD_INVOCATION","change":"getProtocolVersion()","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"MODIFIER","change":"public","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"PREFIX_EXPRESSION","change":"!version.getProtocolName().equals(\"HTTP\")","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"QUALIFIED_NAME","change":"Values.CLOSE","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"QUALIFIED_NAME","change":"Names.CONNECTION","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"QUALIFIED_NAME","change":"Values.KEEP_ALIVE","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"QUALIFIED_NAME","change":"HttpVersion.HTTP_1_0","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"RETURN_STATEMENT","change":"return;\n","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"SIMPLE_TYPE","change":"HttpVersion","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"SINGLE_VARIABLE_DECLARATION","change":"boolean keepAlive","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"STRING_LITERAL","change":"HTTP","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"version","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"HttpVersion [version\u003dgetProtocolVersion()]","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"SOURCE","local":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"METHOD_DECLARATION","change":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"CLASS_T","local":"src.main.org.jboss.netty.handler.codec.http.HttpHeaders"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"EXPRESSION_STATEMENT","change":"message.removeHeader(Names.CONNECTION)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"EXPRESSION_STATEMENT","change":"message.setHeader(Names.CONNECTION,Values.KEEP_ALIVE)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"EXPRESSION_STATEMENT","change":"message.setHeader(Names.CONNECTION,Values.CLOSE)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"IF_STATEMENT","change":"keepAlive","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"IF_STATEMENT","change":"message.getProtocolVersion().isKeepAliveDefault()","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"JAVADOC","change":"/** \n * Sets the value of the  {@code \"Connection\"} header depending on theprotocol version of the specified message.  This method sets or removes the  {@code \"Connection\"} header depending on what the default keep alivemode of the message\u0027s protocol version is, as specified by {@link HttpVersion#isKeepAliveDefault()}. \u003cul\u003e \u003cli\u003eIf the connection is kept alive by default: \u003cul\u003e \u003cli\u003eset to  {@code \"close\"} if {@code keepAlive} is {@code false}.\u003c/li\u003e \u003cli\u003eremove otherwise.\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003cli\u003eIf the connection is closed by default: \u003cul\u003e \u003cli\u003eset to  {@code \"keep-alive\"} if {@code keepAlive} is {@code true}.\u003c/li\u003e \u003cli\u003eremove otherwise.\u003c/li\u003e \u003c/ul\u003e\u003c/li\u003e \u003c/ul\u003e\n */\n","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"METHOD_INVOCATION","change":"message.removeHeader(Names.CONNECTION)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"METHOD_INVOCATION","change":"message.setHeader(Names.CONNECTION,Values.KEEP_ALIVE)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"METHOD_INVOCATION","change":"message.setHeader(Names.CONNECTION,Values.CLOSE)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"METHOD_INVOCATION","change":"message.getProtocolVersion()","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"METHOD_INVOCATION","change":"message.getProtocolVersion().isKeepAliveDefault()","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"MODIFIER","change":"static","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"MODIFIER","change":"public","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"QUALIFIED_NAME","change":"Names.CONNECTION","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"QUALIFIED_NAME","change":"Values.KEEP_ALIVE","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"QUALIFIED_NAME","change":"Values.CLOSE","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"SIMPLE_TYPE","change":"HttpMessage","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"SINGLE_VARIABLE_DECLARATION","change":"boolean keepAlive","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"SINGLE_VARIABLE_DECLARATION","change":"HttpMessage message","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":true,"scope":"TARGET","local":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)"}
{"project":"netty_netty","commit":"a85635f74c9574efd5d98e6cb717c1635bcc6831","changeType":"METHOD_DECLARATION","change":"org.jboss.netty.handler.codec.http.HttpMessage.setKeepAlive(boolean)","source":"org.jboss.netty.handler.codec.http.DefaultHttpMessage.setKeepAlive(boolean)","target":"org.jboss.netty.handler.codec.http.HttpHeaders.setKeepAlive(HttpMessage,boolean)","added":false,"scope":"EXT_S","local":"src.main.org.jboss.netty.handler.codec.http.HttpMessage"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_DECLARATION","change":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"CLASS_S","local":"hystrix-contrib.hystrix-javanica.src.main.com.netflix.hystrix.contribnica.command.AbstractHystrixCommandFactory"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"ARRAY_TYPE","change":"HystrixProperty[]","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"ASSIGNMENT","change":"name \u003d name.replace(\"{}\",threadPoolKey)","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"ASSIGNMENT","change":"threadPoolKey \u003d \"default\"","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"DIMENSION","change":"[]","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"ENHANCED_FOR_STATEMENT","change":"for (HystrixProperty property : properties) {\n  Integer value\u003dInteger.parseInt(property.value());\n  String name\u003dproperty.name();\n  name\u003dname.replace(\"{}\",threadPoolKey);\n  ConfigurationManager.getConfigInstance().setProperty(name,property.value());\n}\n","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"EXPRESSION_STATEMENT","change":"ConfigurationManager.getConfigInstance().setProperty(name,property.value())","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"EXPRESSION_STATEMENT","change":"name\u003dname.replace(\"{}\",threadPoolKey)","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"EXPRESSION_STATEMENT","change":"threadPoolKey\u003d\"default\"","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"FIELD_ACCESS","change":"hystrixCommand.threadPoolProperties().length","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"IF_STATEMENT","change":"threadPoolKey \u003d\u003d null || \"\".equals(threadPoolKey)","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"IF_STATEMENT","change":"hystrixCommand.threadPoolProperties() \u003d\u003d null || hystrixCommand.threadPoolProperties().length \u003d\u003d 0","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"INFIX_EXPRESSION","change":"threadPoolKey \u003d\u003d null","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"INFIX_EXPRESSION","change":"threadPoolKey \u003d\u003d null || \"\".equals(threadPoolKey)","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"INFIX_EXPRESSION","change":"hystrixCommand.threadPoolProperties().length \u003d\u003d 0","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"INFIX_EXPRESSION","change":"hystrixCommand.threadPoolProperties() \u003d\u003d null","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"INFIX_EXPRESSION","change":"hystrixCommand.threadPoolProperties() \u003d\u003d null || hystrixCommand.threadPoolProperties().length \u003d\u003d 0","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"property.value()","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"ConfigurationManager.getConfigInstance()","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"ConfigurationManager.getConfigInstance().setProperty(name,property.value())","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"name.replace(\"{}\",threadPoolKey)","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"property.name()","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"Integer.parseInt(property.value())","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"hystrixCommand.threadPoolProperties()","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"\"\".equals(threadPoolKey)","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"hystrixCommand.threadPoolKey()","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"HystrixThreadPoolProperties.Setter()","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"MODIFIER","change":"public","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"NULL_LITERAL","change":"null","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"NUMBER_LITERAL","change":"0","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"PRIMITIVE_TYPE","change":"void","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"QUALIFIED_NAME","change":"HystrixThreadPoolProperties.Setter","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"RETURN_STATEMENT","change":"return;\n","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"SIMPLE_TYPE","change":"String","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"SIMPLE_TYPE","change":"Integer","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"SIMPLE_TYPE","change":"HystrixProperty","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"SIMPLE_TYPE","change":"HystrixThreadPoolProperties.Setter","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"SIMPLE_TYPE","change":"HystrixCommand","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"SINGLE_VARIABLE_DECLARATION","change":"HystrixProperty property","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"SINGLE_VARIABLE_DECLARATION","change":"HystrixCommand hystrixCommand","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"STRING_LITERAL","change":"{}","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"STRING_LITERAL","change":"default","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"STRING_LITERAL","change":"","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"name","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"value","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"properties","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"threadPoolKey","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"setter","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [name\u003dproperty.name()]","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Integer [value\u003dInteger.parseInt(property.value())]","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"HystrixProperty[] [properties\u003dhystrixCommand.threadPoolProperties()]","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [threadPoolKey\u003dhystrixCommand.threadPoolKey()]","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"HystrixThreadPoolProperties.Setter [setter\u003dHystrixThreadPoolProperties.Setter()]","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SOURCE","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"EXPRESSION_STATEMENT","change":"HystrixPropertiesManager.initializeThreadPoolProperties(metaHolder.getHystrixCommand())","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"SUR_T","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.create(MetaHolder,Collection)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"HystrixPropertiesManager.initializeThreadPoolProperties(metaHolder.getHystrixCommand())","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"SUR_T","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.create(MetaHolder,Collection)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"EXPRESSION_STATEMENT","change":"initializeThreadPoolProperties(metaHolder.getHystrixCommand())","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SUR_S","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.create(MetaHolder,Collection)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"initializeThreadPoolProperties(metaHolder.getHystrixCommand())","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":false,"scope":"SUR_S","local":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.create(MetaHolder,Collection)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_DECLARATION","change":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"CLASS_T","local":"hystrix-contrib.hystrix-javanica.src.main.com.netflix.hystrix.contribnica.conf.HystrixPropertiesManager"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"ARRAY_TYPE","change":"HystrixProperty[]","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"ASSIGNMENT","change":"threadPoolKey \u003d \"default\"","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"DIMENSION","change":"[]","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"ENHANCED_FOR_STATEMENT","change":"for (HystrixProperty property : properties) {\n  Integer value\u003dInteger.parseInt(property.value());\n  String name\u003dString.format(\"hystrix.threadpool.%s.%s\",threadPoolKey,property.name());\n  ConfigurationManager.getConfigInstance().setProperty(name,property.value());\n}\n","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"EXPRESSION_STATEMENT","change":"ConfigurationManager.getConfigInstance().setProperty(name,property.value())","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"EXPRESSION_STATEMENT","change":"threadPoolKey\u003d\"default\"","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"FIELD_ACCESS","change":"hystrixCommand.threadPoolProperties().length","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"IF_STATEMENT","change":"threadPoolKey \u003d\u003d null || \"\".equals(threadPoolKey)","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"IF_STATEMENT","change":"hystrixCommand.threadPoolProperties() \u003d\u003d null || hystrixCommand.threadPoolProperties().length \u003d\u003d 0","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"INFIX_EXPRESSION","change":"threadPoolKey \u003d\u003d null","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"INFIX_EXPRESSION","change":"threadPoolKey \u003d\u003d null || \"\".equals(threadPoolKey)","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"INFIX_EXPRESSION","change":"hystrixCommand.threadPoolProperties().length \u003d\u003d 0","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"INFIX_EXPRESSION","change":"hystrixCommand.threadPoolProperties() \u003d\u003d null","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"INFIX_EXPRESSION","change":"hystrixCommand.threadPoolProperties() \u003d\u003d null || hystrixCommand.threadPoolProperties().length \u003d\u003d 0","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"property.value()","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"ConfigurationManager.getConfigInstance()","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"ConfigurationManager.getConfigInstance().setProperty(name,property.value())","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"property.name()","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"String.format(\"hystrix.threadpool.%s.%s\",threadPoolKey,property.name())","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"Integer.parseInt(property.value())","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"hystrixCommand.threadPoolProperties()","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"\"\".equals(threadPoolKey)","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"hystrixCommand.threadPoolKey()","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"METHOD_INVOCATION","change":"HystrixThreadPoolProperties.Setter()","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"MODIFIER","change":"static","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"MODIFIER","change":"public","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"NULL_LITERAL","change":"null","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"NUMBER_LITERAL","change":"0","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"PRIMITIVE_TYPE","change":"void","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"QUALIFIED_NAME","change":"HystrixThreadPoolProperties.Setter","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"RETURN_STATEMENT","change":"return;\n","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"SIMPLE_TYPE","change":"String","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"SIMPLE_TYPE","change":"Integer","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"SIMPLE_TYPE","change":"HystrixProperty","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"SIMPLE_TYPE","change":"HystrixThreadPoolProperties.Setter","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"SIMPLE_TYPE","change":"HystrixCommand","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"SINGLE_VARIABLE_DECLARATION","change":"HystrixProperty property","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"SINGLE_VARIABLE_DECLARATION","change":"HystrixCommand hystrixCommand","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"STRING_LITERAL","change":"hystrix.threadpool.%s.%s","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"STRING_LITERAL","change":"default","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"STRING_LITERAL","change":"","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"name","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"value","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"properties","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"threadPoolKey","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"setter","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [name\u003dString.format(\"hystrix.threadpool.%s.%s\",threadPoolKey,property.name())]","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Integer [value\u003dInteger.parseInt(property.value())]","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"HystrixProperty[] [properties\u003dhystrixCommand.threadPoolProperties()]","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [threadPoolKey\u003dhystrixCommand.threadPoolKey()]","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"Netflix_Hystrix","commit":"3d9ef196c659df2dc8fb970ac2557f74aa0406f7","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"HystrixThreadPoolProperties.Setter [setter\u003dHystrixThreadPoolProperties.Setter()]","source":"com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommandFactory.initializeThreadPoolProperties(HystrixCommand)","target":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)","added":true,"scope":"TARGET","local":"com.netflix.hystrix.contrib.javanica.conf.HystrixPropertiesManager.initializeThreadPoolProperties(HystrixCommand)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_DECLARATION","change":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"CLASS_T","local":"framework.src.main.org.ikasan.framework.initiator.AbstractInitiator"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"ASSIGNMENT","change":"exceptionAction \u003d flow.invoke(event)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"BREAK_STATEMENT","change":"break;\n","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"ENHANCED_FOR_STATEMENT","change":"for (Event event : events) {\n  exceptionAction\u003dflow.invoke(event);\n  if (exceptionAction !\u003d null) {\n    break;\n  }\n}\n","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"EXPRESSION_STATEMENT","change":"handleAction(exceptionAction)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"EXPRESSION_STATEMENT","change":"exceptionAction\u003dflow.invoke(event)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"IF_STATEMENT","change":"exceptionAction !\u003d null","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"IF_STATEMENT","change":"events !\u003d null \u0026\u0026 !events.isEmpty()","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"INFIX_EXPRESSION","change":"exceptionAction !\u003d null","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"INFIX_EXPRESSION","change":"events !\u003d null","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"INFIX_EXPRESSION","change":"events !\u003d null \u0026\u0026 !events.isEmpty()","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"JAVADOC","change":"/** \n * Flow invocation routine. Attempts to play each Event down the flow in sequence, interrupted only if an exception action is encountered. \n */\n","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_INVOCATION","change":"handleAction(exceptionAction)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_INVOCATION","change":"flow.invoke(event)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_INVOCATION","change":"events.isEmpty()","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"MODIFIER","change":"protected","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"NULL_LITERAL","change":"null","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"PARAMETERIZED_TYPE","change":"List\u003cEvent\u003e","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"PREFIX_EXPRESSION","change":"!events.isEmpty()","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"SIMPLE_TYPE","change":"Event","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"SIMPLE_TYPE","change":"IkasanExceptionAction","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"SIMPLE_TYPE","change":"List","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Event event","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"SINGLE_VARIABLE_DECLARATION","change":"List\u003cEvent\u003e events","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"exceptionAction","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"IkasanExceptionAction [exceptionAction\u003dnull]","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"TARGET","local":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_DECLARATION","change":"org.ikasan.framework.initiator.AbstractInvocationDrivenInitiator.invokeFlow(List)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"EXT_S","local":"framework.src.main.org.ikasan.framework.initiator.AbstractInvocationDrivenInitiator"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"EXPRESSION_STATEMENT","change":"invokeFlow(events)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"EXT_T","local":"org.ikasan.framework.initiator.messagedriven.JmsMessageDrivenInitiatorImpl.onMessage(Message)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_INVOCATION","change":"invokeFlow(events)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"EXT_T","local":"org.ikasan.framework.initiator.messagedriven.JmsMessageDrivenInitiatorImpl.onMessage(Message)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_DECLARATION","change":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"CLASS_S","local":"framework.src.main.org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"ASSIGNMENT","change":"precedentAction \u003d action","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"BREAK_STATEMENT","change":"break;\n","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"ENHANCED_FOR_STATEMENT","change":"for (Event event : events) {\n  IkasanExceptionAction action\u003dthis.getFlow().invoke(event);\n  if (action !\u003d null) {\n    if (precedentAction \u003d\u003d null || action.getType().isHigherPrecedence(precedentAction.getType())) {\n      precedentAction\u003daction;\n      if (precedentAction.getType().isRollback()) {\n        break;\n      }\n    }\n  }\n}\n","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"EXPRESSION_STATEMENT","change":"this.handleAction(precedentAction)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"EXPRESSION_STATEMENT","change":"precedentAction\u003daction","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"EXPRESSION_STATEMENT","change":"this.handleAction(null)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"IF_STATEMENT","change":"precedentAction.getType().isRollback()","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"IF_STATEMENT","change":"precedentAction \u003d\u003d null || action.getType().isHigherPrecedence(precedentAction.getType())","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"IF_STATEMENT","change":"action !\u003d null","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"IF_STATEMENT","change":"events \u003d\u003d null || events.size() \u003d\u003d 0","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"INFIX_EXPRESSION","change":"precedentAction \u003d\u003d null","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"INFIX_EXPRESSION","change":"precedentAction \u003d\u003d null || action.getType().isHigherPrecedence(precedentAction.getType())","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"INFIX_EXPRESSION","change":"action !\u003d null","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"INFIX_EXPRESSION","change":"events.size() \u003d\u003d 0","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"INFIX_EXPRESSION","change":"events \u003d\u003d null","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"INFIX_EXPRESSION","change":"events \u003d\u003d null || events.size() \u003d\u003d 0","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"JAVADOC","change":"/** \n * Internal method for invoking the flow.\n */\n","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"MARKER_ANNOTATION","change":"@Override","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_INVOCATION","change":"this.handleAction(precedentAction)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_INVOCATION","change":"precedentAction.getType()","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_INVOCATION","change":"precedentAction.getType().isRollback()","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_INVOCATION","change":"action.getType()","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_INVOCATION","change":"action.getType().isHigherPrecedence(precedentAction.getType())","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_INVOCATION","change":"this.getFlow()","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_INVOCATION","change":"this.getFlow().invoke(event)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_INVOCATION","change":"this.handleAction(null)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_INVOCATION","change":"events.size()","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"MODIFIER","change":"protected","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"NULL_LITERAL","change":"null","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"NUMBER_LITERAL","change":"0","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"PARAMETERIZED_TYPE","change":"List\u003cEvent\u003e","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"RETURN_STATEMENT","change":"return;\n","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"SIMPLE_TYPE","change":"IkasanExceptionAction","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"SIMPLE_TYPE","change":"Event","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"SIMPLE_TYPE","change":"List","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Event event","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"SINGLE_VARIABLE_DECLARATION","change":"List\u003cEvent\u003e events","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"THIS_EXPRESSION","change":"this","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"action","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"precedentAction","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"IkasanExceptionAction [action\u003dthis.getFlow().invoke(event)]","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"IkasanExceptionAction [precedentAction\u003dnull]","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":false,"scope":"SOURCE","local":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"EXPRESSION_STATEMENT","change":"invokeFlow(events)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"EXT_T","local":"org.ikasan.framework.initiator.AbstractInitiatorTest.invokeInvokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"e7e55fc099d08a685fb084a65206f2b9da09929d","changeType":"METHOD_INVOCATION","change":"invokeFlow(events)","source":"org.ikasan.framework.initiator.scheduled.quartz.QuartzStatefulScheduledDrivenInitiator.invokeFlow(List)","target":"org.ikasan.framework.initiator.AbstractInitiator.invokeFlow(List)","added":true,"scope":"EXT_T","local":"org.ikasan.framework.initiator.AbstractInitiatorTest.invokeInvokeFlow(List)"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"METHOD_DECLARATION","change":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":true,"scope":"CLASS_T","local":"ikasaneip.security.src.test.org.ikasan.security.service.LdapServiceTest"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"BOOLEAN_LITERAL","change":"true","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":true,"scope":"TARGET","local":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"EXPRESSION_STATEMENT","change":"inMemoryDirectoryServer.shutDown(true)","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":true,"scope":"TARGET","local":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"EXPRESSION_STATEMENT","change":"inMemoryDirectoryServer.clear()","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":true,"scope":"TARGET","local":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"MARKER_ANNOTATION","change":"@After","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":true,"scope":"TARGET","local":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"METHOD_INVOCATION","change":"inMemoryDirectoryServer.shutDown(true)","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":true,"scope":"TARGET","local":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"METHOD_INVOCATION","change":"inMemoryDirectoryServer.clear()","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":true,"scope":"TARGET","local":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"MODIFIER","change":"public","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":true,"scope":"TARGET","local":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":true,"scope":"TARGET","local":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"METHOD_DECLARATION","change":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":false,"scope":"CLASS_S","local":"ikasaneip.security.src.test.org.ikasan.security.service.SecurityServiceTest"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"BOOLEAN_LITERAL","change":"true","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":false,"scope":"SOURCE","local":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"EXPRESSION_STATEMENT","change":"inMemoryDirectoryServer.shutDown(true)","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":false,"scope":"SOURCE","local":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"MARKER_ANNOTATION","change":"@After","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":false,"scope":"SOURCE","local":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"METHOD_INVOCATION","change":"inMemoryDirectoryServer.shutDown(true)","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":false,"scope":"SOURCE","local":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"MODIFIER","change":"public","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":false,"scope":"SOURCE","local":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":false,"scope":"SOURCE","local":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()"}
{"project":"ikasanEIP_ikasan","commit":"78689de5d767ec0a740c1fd67fb40d9c6ca45d61","changeType":"METHOD_DECLARATION","change":"org.ikasan.security.service.authentication.AuthenticationProviderFactoryTest.teardownLdapServer()","source":"org.ikasan.security.service.SecurityServiceTest.teardownLdapServer()","target":"org.ikasan.security.service.LdapServiceTest.teardownLdapServer()","added":true,"scope":"EXT_T","local":"ikasaneip.security.src.test.org.ikasan.security.service.authentication.AuthenticationProviderFactoryTest"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"METHOD_DECLARATION","change":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"CLASS_S","local":"ikasaneip.component.endpoint.jms-spring.src.main.org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"CAST_EXPRESSION","change":"(FlowEvent)message","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"IF_STATEMENT","change":"message instanceof FlowEvent","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"INSTANCEOF_EXPRESSION","change":"message instanceof FlowEvent","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"JAVADOC","change":"/** \n * Extract the payload based on event coming in.\n * @param message\n * @return\n */\n","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"METHOD_INVOCATION","change":"((FlowEvent)message).getPayload()","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"MODIFIER","change":"protected","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"PARENTHESIZED_EXPRESSION","change":"((FlowEvent)message)","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"RETURN_STATEMENT","change":"return message;\n","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"RETURN_STATEMENT","change":"return ((FlowEvent)message).getPayload();\n","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"SIMPLE_TYPE","change":"FlowEvent","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"SIMPLE_TYPE","change":"Object","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Object message","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"METHOD_DECLARATION","change":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"CLASS_T","local":"ikasaneip.component.endpoint.jms-spring.src.main.org.springframework.jms.core.IkasanJmsTemplate"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"CAST_EXPRESSION","change":"(FlowEvent)message","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"IF_STATEMENT","change":"message instanceof FlowEvent","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"INSTANCEOF_EXPRESSION","change":"message instanceof FlowEvent","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"JAVADOC","change":"/** \n * Extract the payload based on event coming in.\n * @param message\n * @return\n */\n","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"METHOD_INVOCATION","change":"((FlowEvent)message).getPayload()","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"MODIFIER","change":"protected","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"PARENTHESIZED_EXPRESSION","change":"((FlowEvent)message)","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"RETURN_STATEMENT","change":"return message;\n","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"RETURN_STATEMENT","change":"return ((FlowEvent)message).getPayload();\n","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"SIMPLE_TYPE","change":"FlowEvent","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"SIMPLE_TYPE","change":"Object","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Object message","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"METHOD_INVOCATION","change":"getRequiredMessageConverter().toMessage(getPayload(message),session)","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"EXT_T","local":"org.springframework.jms.core.IkasanJmsTemplate.createMessage(Session)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"METHOD_INVOCATION","change":"getPayload(message)","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"EXT_T","local":"org.springframework.jms.core.IkasanJmsTemplate.createMessage(Session)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Message [msg\u003dgetRequiredMessageConverter().toMessage(getPayload(message),session)]","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"EXT_T","local":"org.springframework.jms.core.IkasanJmsTemplate.createMessage(Session)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"ANONYMOUS_CLASS_DECLARATION","change":"{\n  public Message createMessage(  Session session) throws JMSException {\n    Message msg\u003dgetRequiredMessageConverter().toMessage(getPayload(message),session);\n    if (postProcessor !\u003d null) {\n      postProcessor.invoke(message,msg);\n    }\n    return msg;\n  }\n}\n","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"EXT_T","local":"org.springframework.jms.core.IkasanJmsTemplate.convertAndSend(Destination,Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"CLASS_INSTANCE_CREATION","change":"new MessageCreator(){\n  public Message createMessage(  Session session) throws JMSException {\n    Message msg\u003dgetRequiredMessageConverter().toMessage(getPayload(message),session);\n    if (postProcessor !\u003d null) {\n      postProcessor.invoke(message,msg);\n    }\n    return msg;\n  }\n}\n","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"EXT_T","local":"org.springframework.jms.core.IkasanJmsTemplate.convertAndSend(Destination,Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"EXPRESSION_STATEMENT","change":"send(destination,new MessageCreator(){\n  public Message createMessage(  Session session) throws JMSException {\n    Message msg\u003dgetRequiredMessageConverter().toMessage(getPayload(message),session);\n    if (postProcessor !\u003d null) {\n      postProcessor.invoke(message,msg);\n    }\n    return msg;\n  }\n}\n)","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"EXT_T","local":"org.springframework.jms.core.IkasanJmsTemplate.convertAndSend(Destination,Object)"}
{"project":"ikasanEIP_ikasan","commit":"6eae65278d287ce4a2a6334c82d654baaa0fceb5","changeType":"METHOD_INVOCATION","change":"send(destination,new MessageCreator(){\n  public Message createMessage(  Session session) throws JMSException {\n    Message msg\u003dgetRequiredMessageConverter().toMessage(getPayload(message),session);\n    if (postProcessor !\u003d null) {\n      postProcessor.invoke(message,msg);\n    }\n    return msg;\n  }\n}\n)","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"EXT_T","local":"org.springframework.jms.core.IkasanJmsTemplate.convertAndSend(Destination,Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"METHOD_DECLARATION","change":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"CLASS_S","local":"ikasaneip.component.endpoint.jms-spring.src.main.org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"CAST_EXPRESSION","change":"(FlowEvent)message","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"IF_STATEMENT","change":"message instanceof FlowEvent","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"INSTANCEOF_EXPRESSION","change":"message instanceof FlowEvent","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"JAVADOC","change":"/** \n * Extract the payload based on event coming in.\n * @param message\n * @return\n */\n","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"METHOD_INVOCATION","change":"((FlowEvent)message).getPayload()","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"MODIFIER","change":"protected","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"PARENTHESIZED_EXPRESSION","change":"((FlowEvent)message)","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"RETURN_STATEMENT","change":"return message;\n","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"RETURN_STATEMENT","change":"return ((FlowEvent)message).getPayload();\n","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"SIMPLE_TYPE","change":"FlowEvent","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"SIMPLE_TYPE","change":"Object","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Object message","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":false,"scope":"SOURCE","local":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"METHOD_DECLARATION","change":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"CLASS_T","local":"ikasaneip.component.endpoint.jms-spring.src.main.org.springframework.jms.core.IkasanJmsTemplate"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"CAST_EXPRESSION","change":"(FlowEvent)message","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"IF_STATEMENT","change":"message instanceof FlowEvent","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"INSTANCEOF_EXPRESSION","change":"message instanceof FlowEvent","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"JAVADOC","change":"/** \n * Extract the payload based on event coming in.\n * @param message\n * @return\n */\n","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"METHOD_INVOCATION","change":"((FlowEvent)message).getPayload()","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"MODIFIER","change":"protected","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"PARENTHESIZED_EXPRESSION","change":"((FlowEvent)message)","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"RETURN_STATEMENT","change":"return message;\n","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"RETURN_STATEMENT","change":"return ((FlowEvent)message).getPayload();\n","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"SIMPLE_TYPE","change":"FlowEvent","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"SIMPLE_TYPE","change":"Object","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Object message","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"TARGET","local":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"ANONYMOUS_CLASS_DECLARATION","change":"{\n  public Message createMessage(  Session session) throws JMSException {\n    Message msg\u003dgetRequiredMessageConverter().toMessage(getPayload(message),session);\n    if (postProcessor !\u003d null) {\n      postProcessor.invoke(message,msg);\n    }\n    return msg;\n  }\n}\n","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"EXT_T","local":"org.springframework.jms.core.IkasanJmsTemplate.convertAndSend(Destination,Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"CLASS_INSTANCE_CREATION","change":"new MessageCreator(){\n  public Message createMessage(  Session session) throws JMSException {\n    Message msg\u003dgetRequiredMessageConverter().toMessage(getPayload(message),session);\n    if (postProcessor !\u003d null) {\n      postProcessor.invoke(message,msg);\n    }\n    return msg;\n  }\n}\n","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"EXT_T","local":"org.springframework.jms.core.IkasanJmsTemplate.convertAndSend(Destination,Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"EXPRESSION_STATEMENT","change":"send(destination,new MessageCreator(){\n  public Message createMessage(  Session session) throws JMSException {\n    Message msg\u003dgetRequiredMessageConverter().toMessage(getPayload(message),session);\n    if (postProcessor !\u003d null) {\n      postProcessor.invoke(message,msg);\n    }\n    return msg;\n  }\n}\n)","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"EXT_T","local":"org.springframework.jms.core.IkasanJmsTemplate.convertAndSend(Destination,Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"METHOD_INVOCATION","change":"send(destination,new MessageCreator(){\n  public Message createMessage(  Session session) throws JMSException {\n    Message msg\u003dgetRequiredMessageConverter().toMessage(getPayload(message),session);\n    if (postProcessor !\u003d null) {\n      postProcessor.invoke(message,msg);\n    }\n    return msg;\n  }\n}\n)","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"EXT_T","local":"org.springframework.jms.core.IkasanJmsTemplate.convertAndSend(Destination,Object)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"METHOD_INVOCATION","change":"getRequiredMessageConverter().toMessage(getPayload(message),session)","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"EXT_T","local":"org.springframework.jms.core.IkasanJmsTemplate.createMessage(Session)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"METHOD_INVOCATION","change":"getPayload(message)","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"EXT_T","local":"org.springframework.jms.core.IkasanJmsTemplate.createMessage(Session)"}
{"project":"ikasanEIP_ikasan","commit":"e11663c20b0c15f3815ab4a613f2944d425492b5","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Message [msg\u003dgetRequiredMessageConverter().toMessage(getPayload(message),session)]","source":"org.ikasan.component.endpoint.jms.spring.producer.JmsTemplateProducer.getPayload(Object)","target":"org.springframework.jms.core.IkasanJmsTemplate.getPayload(Object)","added":true,"scope":"EXT_T","local":"org.springframework.jms.core.IkasanJmsTemplate.createMessage(Session)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"METHOD_INVOCATION","change":"TestUtil.extractTimelineFromMediaSource(new ClippingMediaSource(mediaSource,startMs,endMs))","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.source.ClippingMediaSourceTest.getClippedTimeline(Timeline,long,long)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"RETURN_STATEMENT","change":"return TestUtil.extractTimelineFromMediaSource(new ClippingMediaSource(mediaSource,startMs,endMs));\n","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.source.ClippingMediaSourceTest.getClippedTimeline(Timeline,long,long)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"METHOD_INVOCATION","change":"TimelineAsserts.extractTimelineFromMediaSource(new ClippingMediaSource(mediaSource,startMs,endMs))","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.source.ClippingMediaSourceTest.getClippedTimeline(Timeline,long,long)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"RETURN_STATEMENT","change":"return TimelineAsserts.extractTimelineFromMediaSource(new ClippingMediaSource(mediaSource,startMs,endMs));\n","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.source.ClippingMediaSourceTest.getClippedTimeline(Timeline,long,long)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"METHOD_INVOCATION","change":"TestUtil.extractTimelineFromMediaSource(new ConcatenatingMediaSource(isRepeatOneAtomic,mediaSources))","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.source.ConcatenatingMediaSourceTest.getConcatenatedTimeline(boolean,Timeline...)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"RETURN_STATEMENT","change":"return TestUtil.extractTimelineFromMediaSource(new ConcatenatingMediaSource(isRepeatOneAtomic,mediaSources));\n","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.source.ConcatenatingMediaSourceTest.getConcatenatedTimeline(boolean,Timeline...)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"METHOD_INVOCATION","change":"TimelineAsserts.extractTimelineFromMediaSource(new ConcatenatingMediaSource(isRepeatOneAtomic,mediaSources))","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.source.ConcatenatingMediaSourceTest.getConcatenatedTimeline(boolean,Timeline...)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"RETURN_STATEMENT","change":"return TimelineAsserts.extractTimelineFromMediaSource(new ConcatenatingMediaSource(isRepeatOneAtomic,mediaSources));\n","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.source.ConcatenatingMediaSourceTest.getConcatenatedTimeline(boolean,Timeline...)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"ASSIGNMENT","change":"multiWindowTimeline \u003d TestUtil.extractTimelineFromMediaSource(new FakeMediaSource(new FakeTimeline(new TimelineWindowDefinition(1,111),new TimelineWindowDefinition(1,222),new TimelineWindowDefinition(1,333)),null))","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.source.LoopingMediaSourceTest.LoopingMediaSourceTest()"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"EXPRESSION_STATEMENT","change":"multiWindowTimeline\u003dTestUtil.extractTimelineFromMediaSource(new FakeMediaSource(new FakeTimeline(new TimelineWindowDefinition(1,111),new TimelineWindowDefinition(1,222),new TimelineWindowDefinition(1,333)),null))","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.source.LoopingMediaSourceTest.LoopingMediaSourceTest()"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"METHOD_INVOCATION","change":"TestUtil.extractTimelineFromMediaSource(new FakeMediaSource(new FakeTimeline(new TimelineWindowDefinition(1,111),new TimelineWindowDefinition(1,222),new TimelineWindowDefinition(1,333)),null))","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.source.LoopingMediaSourceTest.LoopingMediaSourceTest()"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"ASSIGNMENT","change":"multiWindowTimeline \u003d TimelineAsserts.extractTimelineFromMediaSource(new FakeMediaSource(new FakeTimeline(new TimelineWindowDefinition(1,111),new TimelineWindowDefinition(1,222),new TimelineWindowDefinition(1,333)),null))","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.source.LoopingMediaSourceTest.LoopingMediaSourceTest()"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"EXPRESSION_STATEMENT","change":"multiWindowTimeline\u003dTimelineAsserts.extractTimelineFromMediaSource(new FakeMediaSource(new FakeTimeline(new TimelineWindowDefinition(1,111),new TimelineWindowDefinition(1,222),new TimelineWindowDefinition(1,333)),null))","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.source.LoopingMediaSourceTest.LoopingMediaSourceTest()"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"METHOD_INVOCATION","change":"TimelineAsserts.extractTimelineFromMediaSource(new FakeMediaSource(new FakeTimeline(new TimelineWindowDefinition(1,111),new TimelineWindowDefinition(1,222),new TimelineWindowDefinition(1,333)),null))","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.source.LoopingMediaSourceTest.LoopingMediaSourceTest()"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"METHOD_INVOCATION","change":"TestUtil.extractTimelineFromMediaSource(new LoopingMediaSource(mediaSource,loopCount))","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.source.LoopingMediaSourceTest.getLoopingTimeline(Timeline,int)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"RETURN_STATEMENT","change":"return TestUtil.extractTimelineFromMediaSource(new LoopingMediaSource(mediaSource,loopCount));\n","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.source.LoopingMediaSourceTest.getLoopingTimeline(Timeline,int)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"METHOD_INVOCATION","change":"TimelineAsserts.extractTimelineFromMediaSource(new LoopingMediaSource(mediaSource,loopCount))","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.source.LoopingMediaSourceTest.getLoopingTimeline(Timeline,int)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"RETURN_STATEMENT","change":"return TimelineAsserts.extractTimelineFromMediaSource(new LoopingMediaSource(mediaSource,loopCount));\n","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.source.LoopingMediaSourceTest.getLoopingTimeline(Timeline,int)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"METHOD_DECLARATION","change":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"CLASS_T","local":"testutils.src.main.com.google.android.exoplayer2.testutil.TestUtil"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"FIELD_DECLARATION","change":"private Timeline timeline;\n","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"JAVADOC","change":"/** \n * Extracts the timeline from a media source.\n */\n","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"MODIFIER","change":"private","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"MODIFIER","change":"static","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"MODIFIER","change":"public","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"SIMPLE_TYPE","change":"Timeline","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"SIMPLE_TYPE","change":"Listener","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"SIMPLE_TYPE","change":"MediaSource","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"SINGLE_VARIABLE_DECLARATION","change":"MediaSource mediaSource","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"TYPE_DECLARATION","change":"TimelineListener","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"TYPE_DECLARATION_STATEMENT","change":"class TimelineListener implements Listener {\n  private Timeline timeline;\n  @Override public synchronized void onSourceInfoRefreshed(  Timeline timeline,  Object manifest){\n    this.timeline\u003dtimeline;\n    this.notify();\n  }\n}\n|class TimelineListener implements Listener {\n  private Timeline timeline;\n  @Override public synchronized void onSourceInfoRefreshed(  Timeline timeline,  Object manifest){\n    this.timeline\u003dtimeline;\n    this.notify();\n  }\n}\n|null","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"timeline","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"METHOD_DECLARATION","change":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"CLASS_S","local":"testutils.src.main.com.google.android.exoplayer2.testutil.TimelineAsserts"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"FIELD_DECLARATION","change":"private Timeline timeline;\n","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"JAVADOC","change":"/** \n * Extracts the timeline from a media source.\n */\n","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"MODIFIER","change":"private","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"MODIFIER","change":"static","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"MODIFIER","change":"public","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"SIMPLE_TYPE","change":"Timeline","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"SIMPLE_TYPE","change":"Listener","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"SIMPLE_TYPE","change":"MediaSource","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"SINGLE_VARIABLE_DECLARATION","change":"MediaSource mediaSource","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"TYPE_DECLARATION","change":"TimelineListener","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"TYPE_DECLARATION_STATEMENT","change":"class TimelineListener implements Listener {\n  private Timeline timeline;\n  @Override public void onSourceInfoRefreshed(  Timeline timeline,  Object manifest){\n    this.timeline\u003dtimeline;\n  }\n}\n|class TimelineListener implements Listener {\n  private Timeline timeline;\n  @Override public void onSourceInfoRefreshed(  Timeline timeline,  Object manifest){\n    this.timeline\u003dtimeline;\n  }\n}\n|null","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"960315c4d5647df949a9f942a01a886800845674","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"timeline","source":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)","target":"com.google.android.exoplayer2.testutil.TestUtil.extractTimelineFromMediaSource(MediaSource)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TimelineAsserts.extractTimelineFromMediaSource(MediaSource)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"METHOD_DECLARATION","change":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"CLASS_S","local":"library.core.src.main.com.google.android.exoplayer2.mediacodec.MediaCodecRenderer"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"INFIX_EXPRESSION","change":"\"OMX.Exynos.AVC.Decoder\".equals(name) || \"OMX.Exynos.AVC.Decoder.secure\".equals(name)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003c\u003d 19","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003c\u003d 19 \u0026\u0026 Util.MODEL.equals(\"ODROID-XU3\")","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003c\u003d 19 \u0026\u0026 Util.MODEL.equals(\"ODROID-XU3\") \u0026\u0026 (\"OMX.Exynos.AVC.Decoder\".equals(name) || \"OMX.Exynos.AVC.Decoder.secure\".equals(name))","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"JAVADOC","change":"/** \n * Returns whether the decoder is known to fail when adapting, despite advertising itself as an adaptive decoder. \u003cp\u003e If true is returned then we explicitly disable adaptation for the decoder.\n * @param name The decoder name.\n * @return True if the decoder is known to fail when adapting.\n */\n","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"METHOD_INVOCATION","change":"\"OMX.Exynos.AVC.Decoder.secure\".equals(name)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"METHOD_INVOCATION","change":"\"OMX.Exynos.AVC.Decoder\".equals(name)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"METHOD_INVOCATION","change":"Util.MODEL.equals(\"ODROID-XU3\")","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"MODIFIER","change":"static","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"MODIFIER","change":"private","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"NUMBER_LITERAL","change":"19","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"PARENTHESIZED_EXPRESSION","change":"(\"OMX.Exynos.AVC.Decoder\".equals(name) || \"OMX.Exynos.AVC.Decoder.secure\".equals(name))","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"QUALIFIED_NAME","change":"Util.MODEL","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"QUALIFIED_NAME","change":"Util.SDK_INT","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"RETURN_STATEMENT","change":"return Util.SDK_INT \u003c\u003d 19 \u0026\u0026 Util.MODEL.equals(\"ODROID-XU3\") \u0026\u0026 (\"OMX.Exynos.AVC.Decoder\".equals(name) || \"OMX.Exynos.AVC.Decoder.secure\".equals(name));\n","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"SIMPLE_TYPE","change":"String","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String name","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"STRING_LITERAL","change":"OMX.Exynos.AVC.Decoder.secure","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"STRING_LITERAL","change":"OMX.Exynos.AVC.Decoder","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"STRING_LITERAL","change":"ODROID-XU3","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"ASSIGNMENT","change":"codecIsAdaptive \u003d decoderInfo.adaptive \u0026\u0026 !codecNeedsDisableAdaptationWorkaround(codecName)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SUR_S","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec()"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"EXPRESSION_STATEMENT","change":"codecIsAdaptive\u003ddecoderInfo.adaptive \u0026\u0026 !codecNeedsDisableAdaptationWorkaround(codecName)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SUR_S","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec()"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"INFIX_EXPRESSION","change":"decoderInfo.adaptive \u0026\u0026 !codecNeedsDisableAdaptationWorkaround(codecName)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SUR_S","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec()"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"METHOD_INVOCATION","change":"codecNeedsDisableAdaptationWorkaround(codecName)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SUR_S","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec()"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"PREFIX_EXPRESSION","change":"!codecNeedsDisableAdaptationWorkaround(codecName)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SUR_S","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec()"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"METHOD_DECLARATION","change":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"CLASS_T","local":"library.core.src.main.com.google.android.exoplayer2.mediacodec.MediaCodecUtil"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"INFIX_EXPRESSION","change":"\"OMX.Exynos.AVC.Decoder\".equals(name) || \"OMX.Exynos.AVC.Decoder.secure\".equals(name)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"INFIX_EXPRESSION","change":"Util.MODEL.equals(\"ODROID-XU3\") || Util.MODEL.equals(\"Nexus 10\")","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003c\u003d 22","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003c\u003d 22 \u0026\u0026 (Util.MODEL.equals(\"ODROID-XU3\") || Util.MODEL.equals(\"Nexus 10\"))","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003c\u003d 22 \u0026\u0026 (Util.MODEL.equals(\"ODROID-XU3\") || Util.MODEL.equals(\"Nexus 10\")) \u0026\u0026 (\"OMX.Exynos.AVC.Decoder\".equals(name) || \"OMX.Exynos.AVC.Decoder.secure\".equals(name))","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"JAVADOC","change":"/** \n * Returns whether the decoder is known to fail when adapting, despite advertising itself as an adaptive decoder.\n * @param name The decoder name.\n * @return True if the decoder is known to fail when adapting.\n */\n","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"METHOD_INVOCATION","change":"\"OMX.Exynos.AVC.Decoder.secure\".equals(name)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"METHOD_INVOCATION","change":"\"OMX.Exynos.AVC.Decoder\".equals(name)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"METHOD_INVOCATION","change":"Util.MODEL.equals(\"Nexus 10\")","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"METHOD_INVOCATION","change":"Util.MODEL.equals(\"ODROID-XU3\")","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"MODIFIER","change":"static","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"MODIFIER","change":"private","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"NUMBER_LITERAL","change":"22","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"PARENTHESIZED_EXPRESSION","change":"(\"OMX.Exynos.AVC.Decoder\".equals(name) || \"OMX.Exynos.AVC.Decoder.secure\".equals(name))","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"PARENTHESIZED_EXPRESSION","change":"(Util.MODEL.equals(\"ODROID-XU3\") || Util.MODEL.equals(\"Nexus 10\"))","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"QUALIFIED_NAME","change":"Util.MODEL","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"QUALIFIED_NAME","change":"Util.SDK_INT","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"RETURN_STATEMENT","change":"return Util.SDK_INT \u003c\u003d 22 \u0026\u0026 (Util.MODEL.equals(\"ODROID-XU3\") || Util.MODEL.equals(\"Nexus 10\")) \u0026\u0026 (\"OMX.Exynos.AVC.Decoder\".equals(name) || \"OMX.Exynos.AVC.Decoder.secure\".equals(name));\n","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"SIMPLE_TYPE","change":"String","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String name","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"STRING_LITERAL","change":"OMX.Exynos.AVC.Decoder.secure","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"STRING_LITERAL","change":"OMX.Exynos.AVC.Decoder","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"STRING_LITERAL","change":"Nexus 10","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"STRING_LITERAL","change":"ODROID-XU3","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"ENHANCED_FOR_STATEMENT","change":"for (String supportedType : codecInfo.getSupportedTypes()) {\n  if (supportedType.equalsIgnoreCase(mimeType)) {\n    try {\n      CodecCapabilities capabilities\u003dcodecInfo.getCapabilitiesForType(supportedType);\n      boolean secure\u003dmediaCodecList.isSecurePlaybackSupported(mimeType,capabilities);\n      boolean forceDisableAdaptive\u003dcodecNeedsDisableAdaptationWorkaround(codecName);\n      if ((secureDecodersExplicit \u0026\u0026 key.secure \u003d\u003d secure) || (!secureDecodersExplicit \u0026\u0026 !key.secure)) {\n        decoderInfos.add(MediaCodecInfo.newInstance(codecName,mimeType,capabilities,forceDisableAdaptive));\n      }\n else       if (!secureDecodersExplicit \u0026\u0026 secure) {\n        decoderInfos.add(MediaCodecInfo.newInstance(codecName + \".secure\",mimeType,capabilities,forceDisableAdaptive));\n        return decoderInfos;\n      }\n    }\n catch (    Exception e) {\n      if (Util.SDK_INT \u003c\u003d 23 \u0026\u0026 !decoderInfos.isEmpty()) {\n        Log.e(TAG,\"Skipping codec \" + codecName + \" (failed to query capabilities)\");\n      }\n else {\n        Log.e(TAG,\"Failed to query codec \" + codecName + \" (\"+ supportedType+ \")\");\n        throw e;\n      }\n    }\n  }\n}\n","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfosInternal(CodecKey,MediaCodecListCompat)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"FOR_STATEMENT","change":"for (int i\u003d0; i \u003c numberOfCodecs; i++) {\n  android.media.MediaCodecInfo codecInfo\u003dmediaCodecList.getCodecInfoAt(i);\n  String codecName\u003dcodecInfo.getName();\n  if (isCodecUsableDecoder(codecInfo,codecName,secureDecodersExplicit)) {\n    for (    String supportedType : codecInfo.getSupportedTypes()) {\n      if (supportedType.equalsIgnoreCase(mimeType)) {\n        try {\n          CodecCapabilities capabilities\u003dcodecInfo.getCapabilitiesForType(supportedType);\n          boolean secure\u003dmediaCodecList.isSecurePlaybackSupported(mimeType,capabilities);\n          boolean forceDisableAdaptive\u003dcodecNeedsDisableAdaptationWorkaround(codecName);\n          if ((secureDecodersExplicit \u0026\u0026 key.secure \u003d\u003d secure) || (!secureDecodersExplicit \u0026\u0026 !key.secure)) {\n            decoderInfos.add(MediaCodecInfo.newInstance(codecName,mimeType,capabilities,forceDisableAdaptive));\n          }\n else           if (!secureDecodersExplicit \u0026\u0026 secure) {\n            decoderInfos.add(MediaCodecInfo.newInstance(codecName + \".secure\",mimeType,capabilities,forceDisableAdaptive));\n            return decoderInfos;\n          }\n        }\n catch (        Exception e) {\n          if (Util.SDK_INT \u003c\u003d 23 \u0026\u0026 !decoderInfos.isEmpty()) {\n            Log.e(TAG,\"Skipping codec \" + codecName + \" (failed to query capabilities)\");\n          }\n else {\n            Log.e(TAG,\"Failed to query codec \" + codecName + \" (\"+ supportedType+ \")\");\n            throw e;\n          }\n        }\n      }\n    }\n  }\n}\n","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfosInternal(CodecKey,MediaCodecListCompat)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"METHOD_INVOCATION","change":"codecNeedsDisableAdaptationWorkaround(codecName)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfosInternal(CodecKey,MediaCodecListCompat)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"TRY_STATEMENT","change":"try {\n  CodecCapabilities capabilities\u003dcodecInfo.getCapabilitiesForType(supportedType);\n  boolean secure\u003dmediaCodecList.isSecurePlaybackSupported(mimeType,capabilities);\n  boolean forceDisableAdaptive\u003dcodecNeedsDisableAdaptationWorkaround(codecName);\n  if ((secureDecodersExplicit \u0026\u0026 key.secure \u003d\u003d secure) || (!secureDecodersExplicit \u0026\u0026 !key.secure)) {\n    decoderInfos.add(MediaCodecInfo.newInstance(codecName,mimeType,capabilities,forceDisableAdaptive));\n  }\n else   if (!secureDecodersExplicit \u0026\u0026 secure) {\n    decoderInfos.add(MediaCodecInfo.newInstance(codecName + \".secure\",mimeType,capabilities,forceDisableAdaptive));\n    return decoderInfos;\n  }\n}\n catch (Exception e) {\n  if (Util.SDK_INT \u003c\u003d 23 \u0026\u0026 !decoderInfos.isEmpty()) {\n    Log.e(TAG,\"Skipping codec \" + codecName + \" (failed to query capabilities)\");\n  }\n else {\n    Log.e(TAG,\"Failed to query codec \" + codecName + \" (\"+ supportedType+ \")\");\n    throw e;\n  }\n}\n","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfosInternal(CodecKey,MediaCodecListCompat)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"TRY_STATEMENT","change":"try {\n  List\u003cMediaCodecInfo\u003e decoderInfos\u003dnew ArrayList\u003c\u003e();\n  String mimeType\u003dkey.mimeType;\n  int numberOfCodecs\u003dmediaCodecList.getCodecCount();\n  boolean secureDecodersExplicit\u003dmediaCodecList.secureDecodersExplicit();\n  for (int i\u003d0; i \u003c numberOfCodecs; i++) {\n    android.media.MediaCodecInfo codecInfo\u003dmediaCodecList.getCodecInfoAt(i);\n    String codecName\u003dcodecInfo.getName();\n    if (isCodecUsableDecoder(codecInfo,codecName,secureDecodersExplicit)) {\n      for (      String supportedType : codecInfo.getSupportedTypes()) {\n        if (supportedType.equalsIgnoreCase(mimeType)) {\n          try {\n            CodecCapabilities capabilities\u003dcodecInfo.getCapabilitiesForType(supportedType);\n            boolean secure\u003dmediaCodecList.isSecurePlaybackSupported(mimeType,capabilities);\n            boolean forceDisableAdaptive\u003dcodecNeedsDisableAdaptationWorkaround(codecName);\n            if ((secureDecodersExplicit \u0026\u0026 key.secure \u003d\u003d secure) || (!secureDecodersExplicit \u0026\u0026 !key.secure)) {\n              decoderInfos.add(MediaCodecInfo.newInstance(codecName,mimeType,capabilities,forceDisableAdaptive));\n            }\n else             if (!secureDecodersExplicit \u0026\u0026 secure) {\n              decoderInfos.add(MediaCodecInfo.newInstance(codecName + \".secure\",mimeType,capabilities,forceDisableAdaptive));\n              return decoderInfos;\n            }\n          }\n catch (          Exception e) {\n            if (Util.SDK_INT \u003c\u003d 23 \u0026\u0026 !decoderInfos.isEmpty()) {\n              Log.e(TAG,\"Skipping codec \" + codecName + \" (failed to query capabilities)\");\n            }\n else {\n              Log.e(TAG,\"Failed to query codec \" + codecName + \" (\"+ supportedType+ \")\");\n              throw e;\n            }\n          }\n        }\n      }\n    }\n  }\n  return decoderInfos;\n}\n catch (Exception e) {\n  throw new DecoderQueryException(e);\n}\n","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfosInternal(CodecKey,MediaCodecListCompat)"}
{"project":"google_ExoPlayer","commit":"c36793ab360a4a6edae97948520ede52427d6b73","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"boolean [forceDisableAdaptive\u003dcodecNeedsDisableAdaptationWorkaround(codecName)]","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfosInternal(CodecKey,MediaCodecListCompat)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"METHOD_DECLARATION","change":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"CLASS_S","local":"library.core.src.main.com.google.android.exoplayer2.mediacodec.MediaCodecRenderer"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"INFIX_EXPRESSION","change":"\"OMX.Exynos.AVC.Decoder\".equals(name) || \"OMX.Exynos.AVC.Decoder.secure\".equals(name)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003c\u003d 19","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003c\u003d 19 \u0026\u0026 Util.MODEL.equals(\"ODROID-XU3\")","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003c\u003d 19 \u0026\u0026 Util.MODEL.equals(\"ODROID-XU3\") \u0026\u0026 (\"OMX.Exynos.AVC.Decoder\".equals(name) || \"OMX.Exynos.AVC.Decoder.secure\".equals(name))","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"JAVADOC","change":"/** \n * Returns whether the decoder is known to fail when adapting, despite advertising itself as an adaptive decoder. \u003cp\u003e If true is returned then we explicitly disable adaptation for the decoder.\n * @param name The decoder name.\n * @return True if the decoder is known to fail when adapting.\n */\n","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"METHOD_INVOCATION","change":"\"OMX.Exynos.AVC.Decoder.secure\".equals(name)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"METHOD_INVOCATION","change":"\"OMX.Exynos.AVC.Decoder\".equals(name)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"METHOD_INVOCATION","change":"Util.MODEL.equals(\"ODROID-XU3\")","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"MODIFIER","change":"static","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"MODIFIER","change":"private","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"NUMBER_LITERAL","change":"19","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"PARENTHESIZED_EXPRESSION","change":"(\"OMX.Exynos.AVC.Decoder\".equals(name) || \"OMX.Exynos.AVC.Decoder.secure\".equals(name))","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"QUALIFIED_NAME","change":"Util.MODEL","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"QUALIFIED_NAME","change":"Util.SDK_INT","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"RETURN_STATEMENT","change":"return Util.SDK_INT \u003c\u003d 19 \u0026\u0026 Util.MODEL.equals(\"ODROID-XU3\") \u0026\u0026 (\"OMX.Exynos.AVC.Decoder\".equals(name) || \"OMX.Exynos.AVC.Decoder.secure\".equals(name));\n","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"SIMPLE_TYPE","change":"String","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String name","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"STRING_LITERAL","change":"OMX.Exynos.AVC.Decoder.secure","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"STRING_LITERAL","change":"OMX.Exynos.AVC.Decoder","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"STRING_LITERAL","change":"ODROID-XU3","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"ASSIGNMENT","change":"codecIsAdaptive \u003d decoderInfo.adaptive \u0026\u0026 !codecNeedsDisableAdaptationWorkaround(codecName)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SUR_S","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec()"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"EXPRESSION_STATEMENT","change":"codecIsAdaptive\u003ddecoderInfo.adaptive \u0026\u0026 !codecNeedsDisableAdaptationWorkaround(codecName)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SUR_S","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec()"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"INFIX_EXPRESSION","change":"decoderInfo.adaptive \u0026\u0026 !codecNeedsDisableAdaptationWorkaround(codecName)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SUR_S","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec()"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"METHOD_INVOCATION","change":"codecNeedsDisableAdaptationWorkaround(codecName)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SUR_S","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec()"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"PREFIX_EXPRESSION","change":"!codecNeedsDisableAdaptationWorkaround(codecName)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":false,"scope":"SUR_S","local":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec()"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"METHOD_DECLARATION","change":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"CLASS_T","local":"library.core.src.main.com.google.android.exoplayer2.mediacodec.MediaCodecUtil"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"INFIX_EXPRESSION","change":"\"OMX.Exynos.AVC.Decoder\".equals(name) || \"OMX.Exynos.AVC.Decoder.secure\".equals(name)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"INFIX_EXPRESSION","change":"Util.MODEL.equals(\"ODROID-XU3\") || Util.MODEL.equals(\"Nexus 10\")","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003c\u003d 22","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003c\u003d 22 \u0026\u0026 (Util.MODEL.equals(\"ODROID-XU3\") || Util.MODEL.equals(\"Nexus 10\"))","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003c\u003d 22 \u0026\u0026 (Util.MODEL.equals(\"ODROID-XU3\") || Util.MODEL.equals(\"Nexus 10\")) \u0026\u0026 (\"OMX.Exynos.AVC.Decoder\".equals(name) || \"OMX.Exynos.AVC.Decoder.secure\".equals(name))","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"JAVADOC","change":"/** \n * Returns whether the decoder is known to fail when adapting, despite advertising itself as an adaptive decoder.\n * @param name The decoder name.\n * @return True if the decoder is known to fail when adapting.\n */\n","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"METHOD_INVOCATION","change":"\"OMX.Exynos.AVC.Decoder.secure\".equals(name)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"METHOD_INVOCATION","change":"\"OMX.Exynos.AVC.Decoder\".equals(name)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"METHOD_INVOCATION","change":"Util.MODEL.equals(\"Nexus 10\")","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"METHOD_INVOCATION","change":"Util.MODEL.equals(\"ODROID-XU3\")","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"MODIFIER","change":"static","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"MODIFIER","change":"private","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"NUMBER_LITERAL","change":"22","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"PARENTHESIZED_EXPRESSION","change":"(\"OMX.Exynos.AVC.Decoder\".equals(name) || \"OMX.Exynos.AVC.Decoder.secure\".equals(name))","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"PARENTHESIZED_EXPRESSION","change":"(Util.MODEL.equals(\"ODROID-XU3\") || Util.MODEL.equals(\"Nexus 10\"))","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"QUALIFIED_NAME","change":"Util.MODEL","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"QUALIFIED_NAME","change":"Util.SDK_INT","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"RETURN_STATEMENT","change":"return Util.SDK_INT \u003c\u003d 22 \u0026\u0026 (Util.MODEL.equals(\"ODROID-XU3\") || Util.MODEL.equals(\"Nexus 10\")) \u0026\u0026 (\"OMX.Exynos.AVC.Decoder\".equals(name) || \"OMX.Exynos.AVC.Decoder.secure\".equals(name));\n","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"SIMPLE_TYPE","change":"String","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String name","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"STRING_LITERAL","change":"OMX.Exynos.AVC.Decoder.secure","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"STRING_LITERAL","change":"OMX.Exynos.AVC.Decoder","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"STRING_LITERAL","change":"Nexus 10","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"STRING_LITERAL","change":"ODROID-XU3","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"ENHANCED_FOR_STATEMENT","change":"for (String supportedType : codecInfo.getSupportedTypes()) {\n  if (supportedType.equalsIgnoreCase(mimeType)) {\n    try {\n      CodecCapabilities capabilities\u003dcodecInfo.getCapabilitiesForType(supportedType);\n      boolean secure\u003dmediaCodecList.isSecurePlaybackSupported(mimeType,capabilities);\n      boolean forceDisableAdaptive\u003dcodecNeedsDisableAdaptationWorkaround(codecName);\n      if ((secureDecodersExplicit \u0026\u0026 key.secure \u003d\u003d secure) || (!secureDecodersExplicit \u0026\u0026 !key.secure)) {\n        decoderInfos.add(MediaCodecInfo.newInstance(codecName,mimeType,capabilities,forceDisableAdaptive));\n      }\n else       if (!secureDecodersExplicit \u0026\u0026 secure) {\n        decoderInfos.add(MediaCodecInfo.newInstance(codecName + \".secure\",mimeType,capabilities,forceDisableAdaptive));\n        return decoderInfos;\n      }\n    }\n catch (    Exception e) {\n      if (Util.SDK_INT \u003c\u003d 23 \u0026\u0026 !decoderInfos.isEmpty()) {\n        Log.e(TAG,\"Skipping codec \" + codecName + \" (failed to query capabilities)\");\n      }\n else {\n        Log.e(TAG,\"Failed to query codec \" + codecName + \" (\"+ supportedType+ \")\");\n        throw e;\n      }\n    }\n  }\n}\n","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfosInternal(CodecKey,MediaCodecListCompat)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"FOR_STATEMENT","change":"for (int i\u003d0; i \u003c numberOfCodecs; i++) {\n  android.media.MediaCodecInfo codecInfo\u003dmediaCodecList.getCodecInfoAt(i);\n  String codecName\u003dcodecInfo.getName();\n  if (isCodecUsableDecoder(codecInfo,codecName,secureDecodersExplicit)) {\n    for (    String supportedType : codecInfo.getSupportedTypes()) {\n      if (supportedType.equalsIgnoreCase(mimeType)) {\n        try {\n          CodecCapabilities capabilities\u003dcodecInfo.getCapabilitiesForType(supportedType);\n          boolean secure\u003dmediaCodecList.isSecurePlaybackSupported(mimeType,capabilities);\n          boolean forceDisableAdaptive\u003dcodecNeedsDisableAdaptationWorkaround(codecName);\n          if ((secureDecodersExplicit \u0026\u0026 key.secure \u003d\u003d secure) || (!secureDecodersExplicit \u0026\u0026 !key.secure)) {\n            decoderInfos.add(MediaCodecInfo.newInstance(codecName,mimeType,capabilities,forceDisableAdaptive));\n          }\n else           if (!secureDecodersExplicit \u0026\u0026 secure) {\n            decoderInfos.add(MediaCodecInfo.newInstance(codecName + \".secure\",mimeType,capabilities,forceDisableAdaptive));\n            return decoderInfos;\n          }\n        }\n catch (        Exception e) {\n          if (Util.SDK_INT \u003c\u003d 23 \u0026\u0026 !decoderInfos.isEmpty()) {\n            Log.e(TAG,\"Skipping codec \" + codecName + \" (failed to query capabilities)\");\n          }\n else {\n            Log.e(TAG,\"Failed to query codec \" + codecName + \" (\"+ supportedType+ \")\");\n            throw e;\n          }\n        }\n      }\n    }\n  }\n}\n","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfosInternal(CodecKey,MediaCodecListCompat)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"METHOD_INVOCATION","change":"codecNeedsDisableAdaptationWorkaround(codecName)","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfosInternal(CodecKey,MediaCodecListCompat)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"TRY_STATEMENT","change":"try {\n  CodecCapabilities capabilities\u003dcodecInfo.getCapabilitiesForType(supportedType);\n  boolean secure\u003dmediaCodecList.isSecurePlaybackSupported(mimeType,capabilities);\n  boolean forceDisableAdaptive\u003dcodecNeedsDisableAdaptationWorkaround(codecName);\n  if ((secureDecodersExplicit \u0026\u0026 key.secure \u003d\u003d secure) || (!secureDecodersExplicit \u0026\u0026 !key.secure)) {\n    decoderInfos.add(MediaCodecInfo.newInstance(codecName,mimeType,capabilities,forceDisableAdaptive));\n  }\n else   if (!secureDecodersExplicit \u0026\u0026 secure) {\n    decoderInfos.add(MediaCodecInfo.newInstance(codecName + \".secure\",mimeType,capabilities,forceDisableAdaptive));\n    return decoderInfos;\n  }\n}\n catch (Exception e) {\n  if (Util.SDK_INT \u003c\u003d 23 \u0026\u0026 !decoderInfos.isEmpty()) {\n    Log.e(TAG,\"Skipping codec \" + codecName + \" (failed to query capabilities)\");\n  }\n else {\n    Log.e(TAG,\"Failed to query codec \" + codecName + \" (\"+ supportedType+ \")\");\n    throw e;\n  }\n}\n","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfosInternal(CodecKey,MediaCodecListCompat)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"TRY_STATEMENT","change":"try {\n  List\u003cMediaCodecInfo\u003e decoderInfos\u003dnew ArrayList\u003c\u003e();\n  String mimeType\u003dkey.mimeType;\n  int numberOfCodecs\u003dmediaCodecList.getCodecCount();\n  boolean secureDecodersExplicit\u003dmediaCodecList.secureDecodersExplicit();\n  for (int i\u003d0; i \u003c numberOfCodecs; i++) {\n    android.media.MediaCodecInfo codecInfo\u003dmediaCodecList.getCodecInfoAt(i);\n    String codecName\u003dcodecInfo.getName();\n    if (isCodecUsableDecoder(codecInfo,codecName,secureDecodersExplicit)) {\n      for (      String supportedType : codecInfo.getSupportedTypes()) {\n        if (supportedType.equalsIgnoreCase(mimeType)) {\n          try {\n            CodecCapabilities capabilities\u003dcodecInfo.getCapabilitiesForType(supportedType);\n            boolean secure\u003dmediaCodecList.isSecurePlaybackSupported(mimeType,capabilities);\n            boolean forceDisableAdaptive\u003dcodecNeedsDisableAdaptationWorkaround(codecName);\n            if ((secureDecodersExplicit \u0026\u0026 key.secure \u003d\u003d secure) || (!secureDecodersExplicit \u0026\u0026 !key.secure)) {\n              decoderInfos.add(MediaCodecInfo.newInstance(codecName,mimeType,capabilities,forceDisableAdaptive));\n            }\n else             if (!secureDecodersExplicit \u0026\u0026 secure) {\n              decoderInfos.add(MediaCodecInfo.newInstance(codecName + \".secure\",mimeType,capabilities,forceDisableAdaptive));\n              return decoderInfos;\n            }\n          }\n catch (          Exception e) {\n            if (Util.SDK_INT \u003c\u003d 23 \u0026\u0026 !decoderInfos.isEmpty()) {\n              Log.e(TAG,\"Skipping codec \" + codecName + \" (failed to query capabilities)\");\n            }\n else {\n              Log.e(TAG,\"Failed to query codec \" + codecName + \" (\"+ supportedType+ \")\");\n              throw e;\n            }\n          }\n        }\n      }\n    }\n  }\n  return decoderInfos;\n}\n catch (Exception e) {\n  throw new DecoderQueryException(e);\n}\n","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfosInternal(CodecKey,MediaCodecListCompat)"}
{"project":"google_ExoPlayer","commit":"ea21af2ce9e60a064602f8a78c2394e90b1c208f","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"boolean [forceDisableAdaptive\u003dcodecNeedsDisableAdaptationWorkaround(codecName)]","source":"com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDisableAdaptationWorkaround(String)","target":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.codecNeedsDisableAdaptationWorkaround(String)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfosInternal(CodecKey,MediaCodecListCompat)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"EXPRESSION_STATEMENT","change":"Util.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.upstream.cache.CacheDataSourceTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"Util.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.upstream.cache.CacheDataSourceTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"EXPRESSION_STATEMENT","change":"TestUtil.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.upstream.cache.CacheDataSourceTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"TestUtil.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.upstream.cache.CacheDataSourceTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"EXPRESSION_STATEMENT","change":"Util.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.upstream.cache.CachedContentIndexTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"Util.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.upstream.cache.CachedContentIndexTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"EXPRESSION_STATEMENT","change":"TestUtil.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.upstream.cache.CachedContentIndexTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"TestUtil.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.upstream.cache.CachedContentIndexTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"EXPRESSION_STATEMENT","change":"Util.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.upstream.cache.CachedRegionTrackerTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"Util.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.upstream.cache.CachedRegionTrackerTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"EXPRESSION_STATEMENT","change":"TestUtil.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.upstream.cache.CachedRegionTrackerTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"TestUtil.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.upstream.cache.CachedRegionTrackerTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"EXPRESSION_STATEMENT","change":"Util.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.upstream.cache.SimpleCacheSpanTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"Util.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.upstream.cache.SimpleCacheSpanTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"EXPRESSION_STATEMENT","change":"TestUtil.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.upstream.cache.SimpleCacheSpanTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"TestUtil.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.upstream.cache.SimpleCacheSpanTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"EXPRESSION_STATEMENT","change":"Util.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.upstream.cache.SimpleCacheTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"Util.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.upstream.cache.SimpleCacheTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"EXPRESSION_STATEMENT","change":"TestUtil.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.upstream.cache.SimpleCacheTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"TestUtil.recursiveDelete(cacheDir)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.upstream.cache.SimpleCacheTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"EXPRESSION_STATEMENT","change":"Util.recursiveDelete(tempFolder)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.util.AtomicFileTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"Util.recursiveDelete(tempFolder)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer2.util.AtomicFileTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"EXPRESSION_STATEMENT","change":"TestUtil.recursiveDelete(tempFolder)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.util.AtomicFileTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"TestUtil.recursiveDelete(tempFolder)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.util.AtomicFileTest.tearDown()"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_DECLARATION","change":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"CLASS_T","local":"library.src.main.com.google.android.exoplayer2.util.Util"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"ENHANCED_FOR_STATEMENT","change":"for (File child : fileOrDirectory.listFiles()) {\n  recursiveDelete(child);\n}\n","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"EXPRESSION_STATEMENT","change":"fileOrDirectory.delete()","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"EXPRESSION_STATEMENT","change":"recursiveDelete(child)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"IF_STATEMENT","change":"fileOrDirectory.isDirectory()","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"JAVADOC","change":"/** \n * Recursively deletes a directory and its content. \n */\n","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"fileOrDirectory.delete()","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"recursiveDelete(child)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"fileOrDirectory.listFiles()","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"fileOrDirectory.isDirectory()","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"MODIFIER","change":"static","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"MODIFIER","change":"public","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"PRIMITIVE_TYPE","change":"void","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"SIMPLE_TYPE","change":"File","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"SINGLE_VARIABLE_DECLARATION","change":"File child","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"SINGLE_VARIABLE_DECLARATION","change":"File fileOrDirectory","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_DECLARATION","change":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"CLASS_S","local":"testutils.src.main.com.google.android.exoplayer2.testutil.TestUtil"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"ENHANCED_FOR_STATEMENT","change":"for (File child : fileOrDirectory.listFiles()) {\n  recursiveDelete(child);\n}\n","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"EXPRESSION_STATEMENT","change":"fileOrDirectory.delete()","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"EXPRESSION_STATEMENT","change":"recursiveDelete(child)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"IF_STATEMENT","change":"fileOrDirectory.isDirectory()","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"fileOrDirectory.delete()","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"recursiveDelete(child)","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"fileOrDirectory.listFiles()","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"METHOD_INVOCATION","change":"fileOrDirectory.isDirectory()","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"MODIFIER","change":"static","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"MODIFIER","change":"public","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"PRIMITIVE_TYPE","change":"void","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"SIMPLE_TYPE","change":"File","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"SINGLE_VARIABLE_DECLARATION","change":"File child","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"f092c4446f5f2d2c81a904070ab773857e99fa88","changeType":"SINGLE_VARIABLE_DECLARATION","change":"File fileOrDirectory","source":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)","target":"com.google.android.exoplayer2.util.Util.recursiveDelete(File)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.testutil.TestUtil.recursiveDelete(File)"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"METHOD_INVOCATION","change":"id3Buffer.readSynchSafeInt()","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer.metadata.Id3Parser.parseId3Header(BitArray)"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [extendedHeaderSize\u003did3Buffer.readSynchSafeInt()]","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer.metadata.Id3Parser.parseId3Header(BitArray)"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [id3Size\u003did3Buffer.readSynchSafeInt()]","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer.metadata.Id3Parser.parseId3Header(BitArray)"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"METHOD_INVOCATION","change":"id3Buffer.readSynchSafeInt()","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer.metadata.Id3Parser.parseId3Header(ParsableByteArray)"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [extendedHeaderSize\u003did3Buffer.readSynchSafeInt()]","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer.metadata.Id3Parser.parseId3Header(ParsableByteArray)"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [id3Size\u003did3Buffer.readSynchSafeInt()]","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer.metadata.Id3Parser.parseId3Header(ParsableByteArray)"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"METHOD_INVOCATION","change":"id3Data.readSynchSafeInt()","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer.metadata.Id3Parser.parse(byte[],int)"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [frameSize\u003did3Data.readSynchSafeInt()]","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer.metadata.Id3Parser.parse(byte[],int)"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"WHILE_STATEMENT","change":"while (id3Size \u003e 0) {\n  int frameId0\u003did3Data.readUnsignedByte();\n  int frameId1\u003did3Data.readUnsignedByte();\n  int frameId2\u003did3Data.readUnsignedByte();\n  int frameId3\u003did3Data.readUnsignedByte();\n  int frameSize\u003did3Data.readSynchSafeInt();\n  if (frameSize \u003c\u003d 1) {\n    break;\n  }\n  id3Data.skip(2);\n  if (frameId0 \u003d\u003d \u0027T\u0027 \u0026\u0026 frameId1 \u003d\u003d \u0027X\u0027 \u0026\u0026 frameId2 \u003d\u003d \u0027X\u0027 \u0026\u0026 frameId3 \u003d\u003d \u0027X\u0027) {\n    int encoding\u003did3Data.readUnsignedByte();\n    String charset\u003dgetCharsetName(encoding);\n    byte[] frame\u003dnew byte[frameSize - 1];\n    id3Data.readBytes(frame,0,frameSize - 1);\n    int firstZeroIndex\u003dindexOf(frame,0,(byte)0);\n    String description\u003dnew String(frame,0,firstZeroIndex,charset);\n    int valueStartIndex\u003dindexOfNot(frame,firstZeroIndex,(byte)0);\n    int valueEndIndex\u003dindexOf(frame,valueStartIndex,(byte)0);\n    String value\u003dnew String(frame,valueStartIndex,valueEndIndex - valueStartIndex,charset);\n    metadata.put(TxxxMetadata.TYPE,new TxxxMetadata(description,value));\n  }\n else {\n    String type\u003dString.format(\"%c%c%c%c\",frameId0,frameId1,frameId2,frameId3);\n    byte[] frame\u003dnew byte[frameSize];\n    id3Data.readBytes(frame,0,frameSize);\n    metadata.put(type,frame);\n  }\n  id3Size-\u003dframeSize + 10;\n}\n","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer.metadata.Id3Parser.parse(byte[],int)"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"METHOD_INVOCATION","change":"id3Buffer.readSynchSafeInt()","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer.metadata.Id3Parser.parse(byte[],int)"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [frameSize\u003did3Buffer.readSynchSafeInt()]","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer.metadata.Id3Parser.parse(byte[],int)"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"WHILE_STATEMENT","change":"while (id3Size \u003e 0) {\n  int frameId0\u003did3Buffer.readUnsignedByte();\n  int frameId1\u003did3Buffer.readUnsignedByte();\n  int frameId2\u003did3Buffer.readUnsignedByte();\n  int frameId3\u003did3Buffer.readUnsignedByte();\n  int frameSize\u003did3Buffer.readSynchSafeInt();\n  if (frameSize \u003c\u003d 1) {\n    break;\n  }\n  id3Buffer.skipBytes(2);\n  if (frameId0 \u003d\u003d \u0027T\u0027 \u0026\u0026 frameId1 \u003d\u003d \u0027X\u0027 \u0026\u0026 frameId2 \u003d\u003d \u0027X\u0027 \u0026\u0026 frameId3 \u003d\u003d \u0027X\u0027) {\n    int encoding\u003did3Buffer.readUnsignedByte();\n    String charset\u003dgetCharsetName(encoding);\n    byte[] frame\u003dnew byte[frameSize - 1];\n    id3Buffer.readBytes(frame,0,frameSize - 1);\n    int firstZeroIndex\u003dindexOf(frame,0,(byte)0);\n    String description\u003dnew String(frame,0,firstZeroIndex,charset);\n    int valueStartIndex\u003dindexOfNot(frame,firstZeroIndex,(byte)0);\n    int valueEndIndex\u003dindexOf(frame,valueStartIndex,(byte)0);\n    String value\u003dnew String(frame,valueStartIndex,valueEndIndex - valueStartIndex,charset);\n    metadata.put(TxxxMetadata.TYPE,new TxxxMetadata(description,value));\n  }\n else {\n    String type\u003dString.format(\"%c%c%c%c\",frameId0,frameId1,frameId2,frameId3);\n    byte[] frame\u003dnew byte[frameSize];\n    id3Buffer.readBytes(frame,0,frameSize);\n    metadata.put(type,frame);\n  }\n  id3Size-\u003dframeSize + 10;\n}\n","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer.metadata.Id3Parser.parse(byte[],int)"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"METHOD_DECLARATION","change":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"CLASS_S","local":"library.src.main.com.google.android.exoplayer.util.BitArray"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"INFIX_EXPRESSION","change":"b3 \u003c\u003c 7","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"INFIX_EXPRESSION","change":"b2 \u003c\u003c 14","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"INFIX_EXPRESSION","change":"b1 \u003c\u003c 21","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"INFIX_EXPRESSION","change":"(b1 \u003c\u003c 21) | (b2 \u003c\u003c 14) | (b3 \u003c\u003c 7)| b4","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"JAVADOC","change":"/** \n * Reads a Synchsafe integer. Synchsafe integers are integers that keep the highest bit of every byte zeroed. A 32 bit synchsafe integer can store 28 bits of information.\n * @return The value of the parsed Synchsafe integer.\n */\n","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"METHOD_INVOCATION","change":"readUnsignedByte()","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"MODIFIER","change":"public","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"NUMBER_LITERAL","change":"7","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"NUMBER_LITERAL","change":"14","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"NUMBER_LITERAL","change":"21","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"PARENTHESIZED_EXPRESSION","change":"(b3 \u003c\u003c 7)","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"PARENTHESIZED_EXPRESSION","change":"(b2 \u003c\u003c 14)","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"PARENTHESIZED_EXPRESSION","change":"(b1 \u003c\u003c 21)","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"PRIMITIVE_TYPE","change":"int","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"RETURN_STATEMENT","change":"return (b1 \u003c\u003c 21) | (b2 \u003c\u003c 14) | (b3 \u003c\u003c 7)| b4;\n","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"b4","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"b3","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"b2","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"b1","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [b4\u003dreadUnsignedByte()]","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [b3\u003dreadUnsignedByte()]","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [b2\u003dreadUnsignedByte()]","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [b1\u003dreadUnsignedByte()]","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"METHOD_DECLARATION","change":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"CLASS_T","local":"library.src.main.com.google.android.exoplayer.util.ParsableByteArray"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"INFIX_EXPRESSION","change":"b3 \u003c\u003c 7","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"INFIX_EXPRESSION","change":"b2 \u003c\u003c 14","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"INFIX_EXPRESSION","change":"b1 \u003c\u003c 21","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"INFIX_EXPRESSION","change":"(b1 \u003c\u003c 21) | (b2 \u003c\u003c 14) | (b3 \u003c\u003c 7)| b4","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"JAVADOC","change":"/** \n * Reads a Synchsafe integer. \u003cp\u003e Synchsafe integers keep the highest bit of every byte zeroed. A 32 bit synchsafe integer can store 28 bits of information.\n * @return The parsed value.\n */\n","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"METHOD_INVOCATION","change":"readUnsignedByte()","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"MODIFIER","change":"public","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"NUMBER_LITERAL","change":"7","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"NUMBER_LITERAL","change":"14","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"NUMBER_LITERAL","change":"21","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"PARENTHESIZED_EXPRESSION","change":"(b3 \u003c\u003c 7)","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"PARENTHESIZED_EXPRESSION","change":"(b2 \u003c\u003c 14)","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"PARENTHESIZED_EXPRESSION","change":"(b1 \u003c\u003c 21)","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"PRIMITIVE_TYPE","change":"int","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"RETURN_STATEMENT","change":"return (b1 \u003c\u003c 21) | (b2 \u003c\u003c 14) | (b3 \u003c\u003c 7)| b4;\n","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"b4","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"b3","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"b2","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"b1","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [b4\u003dreadUnsignedByte()]","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [b3\u003dreadUnsignedByte()]","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [b2\u003dreadUnsignedByte()]","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"7c66b6ed3b953adbe518203027d0ccba94e7cbc8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [b1\u003dreadUnsignedByte()]","source":"com.google.android.exoplayer.util.BitArray.readSynchSafeInt()","target":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.ParsableByteArray.readSynchSafeInt()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"METHOD_DECLARATION","change":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"CLASS_T","local":"library.core.src.main.com.google.android.exoplayer2.video.DummySurface"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"INFIX_EXPRESSION","change":"Util.MODEL.startsWith(\"SM-G950\") || Util.MODEL.startsWith(\"SM-G955\")","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003d\u003d 24","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003d\u003d 24 \u0026\u0026 (Util.MODEL.startsWith(\"SM-G950\") || Util.MODEL.startsWith(\"SM-G955\"))","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003d\u003d 24 \u0026\u0026 (Util.MODEL.startsWith(\"SM-G950\") || Util.MODEL.startsWith(\"SM-G955\")) \u0026\u0026 !hasVrModeHighPerformanceSystemFeatureV24(context.getPackageManager())","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"JAVADOC","change":"/** \n * Returns whether the device is known to advertise secure surface textures but not implement them correctly.\n * @param context Any {@link Context}.\n */\n","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"METHOD_INVOCATION","change":"context.getPackageManager()","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"METHOD_INVOCATION","change":"hasVrModeHighPerformanceSystemFeatureV24(context.getPackageManager())","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"METHOD_INVOCATION","change":"Util.MODEL.startsWith(\"SM-G955\")","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"METHOD_INVOCATION","change":"Util.MODEL.startsWith(\"SM-G950\")","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"MODIFIER","change":"static","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"MODIFIER","change":"private","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"NUMBER_LITERAL","change":"24","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"PARENTHESIZED_EXPRESSION","change":"(Util.MODEL.startsWith(\"SM-G950\") || Util.MODEL.startsWith(\"SM-G955\"))","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"PREFIX_EXPRESSION","change":"!hasVrModeHighPerformanceSystemFeatureV24(context.getPackageManager())","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"QUALIFIED_NAME","change":"Util.MODEL","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"QUALIFIED_NAME","change":"Util.SDK_INT","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"RETURN_STATEMENT","change":"return Util.SDK_INT \u003d\u003d 24 \u0026\u0026 (Util.MODEL.startsWith(\"SM-G950\") || Util.MODEL.startsWith(\"SM-G955\")) \u0026\u0026 !hasVrModeHighPerformanceSystemFeatureV24(context.getPackageManager());\n","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"SIMPLE_TYPE","change":"Context","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Context context","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"STRING_LITERAL","change":"SM-G955","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"STRING_LITERAL","change":"SM-G950","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"ASSIGNMENT","change":"secureSupported \u003d extensions !\u003d null \u0026\u0026 extensions.contains(\"EGL_EXT_protected_content\") \u0026\u0026 !deviceNeedsSecureDummySurfaceWorkaround(context)","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"SUR_T","local":"com.google.android.exoplayer2.video.DummySurface.isSecureSupported(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"EXPRESSION_STATEMENT","change":"secureSupported\u003dextensions !\u003d null \u0026\u0026 extensions.contains(\"EGL_EXT_protected_content\") \u0026\u0026 !deviceNeedsSecureDummySurfaceWorkaround(context)","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"SUR_T","local":"com.google.android.exoplayer2.video.DummySurface.isSecureSupported(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"INFIX_EXPRESSION","change":"extensions !\u003d null \u0026\u0026 extensions.contains(\"EGL_EXT_protected_content\") \u0026\u0026 !deviceNeedsSecureDummySurfaceWorkaround(context)","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"SUR_T","local":"com.google.android.exoplayer2.video.DummySurface.isSecureSupported(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"METHOD_INVOCATION","change":"deviceNeedsSecureDummySurfaceWorkaround(context)","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"SUR_T","local":"com.google.android.exoplayer2.video.DummySurface.isSecureSupported(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"PREFIX_EXPRESSION","change":"!deviceNeedsSecureDummySurfaceWorkaround(context)","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":true,"scope":"SUR_T","local":"com.google.android.exoplayer2.video.DummySurface.isSecureSupported(Context)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"METHOD_DECLARATION","change":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"CLASS_S","local":"library.core.src.main.com.google.android.exoplayer2.video.MediaCodecVideoRenderer"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"INFIX_EXPRESSION","change":"Util.MODEL.startsWith(\"SM-G950\") || Util.MODEL.startsWith(\"SM-G955\")","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003d\u003d 24","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003d\u003d 24 \u0026\u0026 (Util.MODEL.startsWith(\"SM-G950\") || Util.MODEL.startsWith(\"SM-G955\"))","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"JAVADOC","change":"/** \n * Returns whether the device is known to fail outputting from a secure decoder to a secure surface texture. \u003cp\u003e If true is returned then use of  {@link DummySurface} is disabled for secure playbacks.\n */\n","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"METHOD_INVOCATION","change":"Util.MODEL.startsWith(\"SM-G955\")","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"METHOD_INVOCATION","change":"Util.MODEL.startsWith(\"SM-G950\")","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"MODIFIER","change":"static","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"MODIFIER","change":"private","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"NUMBER_LITERAL","change":"24","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"PARENTHESIZED_EXPRESSION","change":"(Util.MODEL.startsWith(\"SM-G950\") || Util.MODEL.startsWith(\"SM-G955\"))","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"QUALIFIED_NAME","change":"Util.MODEL","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"QUALIFIED_NAME","change":"Util.SDK_INT","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"RETURN_STATEMENT","change":"return Util.SDK_INT \u003d\u003d 24 \u0026\u0026 (Util.MODEL.startsWith(\"SM-G950\") || Util.MODEL.startsWith(\"SM-G955\"));\n","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"STRING_LITERAL","change":"SM-G955","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"STRING_LITERAL","change":"SM-G950","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"INFIX_EXPRESSION","change":"Util.SDK_INT \u003e\u003d 23 \u0026\u0026 !tunneling \u0026\u0026 (!codecIsSecure || (DummySurface.SECURE_SUPPORTED \u0026\u0026 !deviceNeedsSecureDummySurfaceWorkaround()))","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.shouldUseDummySurface(boolean)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"INFIX_EXPRESSION","change":"DummySurface.SECURE_SUPPORTED \u0026\u0026 !deviceNeedsSecureDummySurfaceWorkaround()","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.shouldUseDummySurface(boolean)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"INFIX_EXPRESSION","change":"!codecIsSecure || (DummySurface.SECURE_SUPPORTED \u0026\u0026 !deviceNeedsSecureDummySurfaceWorkaround())","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.shouldUseDummySurface(boolean)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"METHOD_INVOCATION","change":"deviceNeedsSecureDummySurfaceWorkaround()","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.shouldUseDummySurface(boolean)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"PARENTHESIZED_EXPRESSION","change":"(!codecIsSecure || (DummySurface.SECURE_SUPPORTED \u0026\u0026 !deviceNeedsSecureDummySurfaceWorkaround()))","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.shouldUseDummySurface(boolean)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"PARENTHESIZED_EXPRESSION","change":"(DummySurface.SECURE_SUPPORTED \u0026\u0026 !deviceNeedsSecureDummySurfaceWorkaround())","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.shouldUseDummySurface(boolean)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"PREFIX_EXPRESSION","change":"!deviceNeedsSecureDummySurfaceWorkaround()","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.shouldUseDummySurface(boolean)"}
{"project":"google_ExoPlayer","commit":"f3e9166a4eabeb7b2ec8cffedf7c4914a91f48d5","changeType":"RETURN_STATEMENT","change":"return Util.SDK_INT \u003e\u003d 23 \u0026\u0026 !tunneling \u0026\u0026 (!codecIsSecure || (DummySurface.SECURE_SUPPORTED \u0026\u0026 !deviceNeedsSecureDummySurfaceWorkaround()));\n","source":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.deviceNeedsSecureDummySurfaceWorkaround()","target":"com.google.android.exoplayer2.video.DummySurface.deviceNeedsSecureDummySurfaceWorkaround(Context)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer2.video.MediaCodecVideoRenderer.shouldUseDummySurface(boolean)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"METHOD_DECLARATION","change":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"CLASS_S","local":"demo.src.main.com.google.android.exoplayer.demo.DemoUtil"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"ASSIGNMENT","change":"versionName \u003d \"?\"","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"ASSIGNMENT","change":"versionName \u003d info.versionName","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"CATCH_CLAUSE","change":"catch (NameNotFoundException e) {\n  versionName\u003d\"?\";\n}\n","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"EXPRESSION_STATEMENT","change":"versionName\u003d\"?\"","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"EXPRESSION_STATEMENT","change":"versionName\u003dinfo.versionName","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"INFIX_EXPRESSION","change":"\"ExoPlayerDemo/\" + versionName + \" (Linux;Android \"+ Build.VERSION.RELEASE+ \") \"+ \"ExoPlayerLib/\"+ ExoPlayerLibraryInfo.VERSION","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"METHOD_INVOCATION","change":"context.getPackageManager()","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"METHOD_INVOCATION","change":"context.getPackageManager().getPackageInfo(packageName,0)","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"METHOD_INVOCATION","change":"context.getPackageName()","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"MODIFIER","change":"static","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"MODIFIER","change":"public","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"NUMBER_LITERAL","change":"0","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"QUALIFIED_NAME","change":"ExoPlayerLibraryInfo.VERSION","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"QUALIFIED_NAME","change":"Build.VERSION","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"QUALIFIED_NAME","change":"Build.VERSION.RELEASE","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"QUALIFIED_NAME","change":"info.versionName","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"RETURN_STATEMENT","change":"return \"ExoPlayerDemo/\" + versionName + \" (Linux;Android \"+ Build.VERSION.RELEASE+ \") \"+ \"ExoPlayerLib/\"+ ExoPlayerLibraryInfo.VERSION;\n","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"SIMPLE_TYPE","change":"NameNotFoundException","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"SIMPLE_TYPE","change":"PackageInfo","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"SIMPLE_TYPE","change":"String","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"SIMPLE_TYPE","change":"Context","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"NameNotFoundException e","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Context context","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"STRING_LITERAL","change":"ExoPlayerLib/","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"STRING_LITERAL","change":") ","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"STRING_LITERAL","change":" (Linux;Android ","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"STRING_LITERAL","change":"ExoPlayerDemo/","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"STRING_LITERAL","change":"?","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"TRY_STATEMENT","change":"try {\n  String packageName\u003dcontext.getPackageName();\n  PackageInfo info\u003dcontext.getPackageManager().getPackageInfo(packageName,0);\n  versionName\u003dinfo.versionName;\n}\n catch (NameNotFoundException e) {\n  versionName\u003d\"?\";\n}\n","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"info","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"packageName","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"versionName","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"PackageInfo [info\u003dcontext.getPackageManager().getPackageInfo(packageName,0)]","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [packageName\u003dcontext.getPackageName()]","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [versionName]","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"SOURCE","local":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"METHOD_INVOCATION","change":"Util.getUserAgent(this,\"ExoPlayerDemo\")","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer.demo.PlayerActivity.getRendererBuilder()"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [userAgent\u003dUtil.getUserAgent(this,\"ExoPlayerDemo\")]","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"EXT_T","local":"com.google.android.exoplayer.demo.PlayerActivity.getRendererBuilder()"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"METHOD_INVOCATION","change":"DemoUtil.getUserAgent(this)","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer.demo.PlayerActivity.getRendererBuilder()"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [userAgent\u003dDemoUtil.getUserAgent(this)]","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":false,"scope":"EXT_S","local":"com.google.android.exoplayer.demo.PlayerActivity.getRendererBuilder()"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"METHOD_DECLARATION","change":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"CLASS_T","local":"library.src.main.com.google.android.exoplayer.util.Util"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"ASSIGNMENT","change":"versionName \u003d \"?\"","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"ASSIGNMENT","change":"versionName \u003d info.versionName","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"CATCH_CLAUSE","change":"catch (NameNotFoundException e) {\n  versionName\u003d\"?\";\n}\n","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"EXPRESSION_STATEMENT","change":"versionName\u003d\"?\"","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"EXPRESSION_STATEMENT","change":"versionName\u003dinfo.versionName","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"INFIX_EXPRESSION","change":"applicationName + \"/\" + versionName+ \" (Linux;Android \"+ Build.VERSION.RELEASE+ \") \"+ \"ExoPlayerLib/\"+ ExoPlayerLibraryInfo.VERSION","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"JAVADOC","change":"/** \n * Returns a user agent string based on the given application name and the library version.\n * @param context A valid context of the calling application.\n * @param applicationName String that will be prefix\u0027ed to the generated user agent.\n * @return A user agent string generated using the applicationName and the library version.\n */\n","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"METHOD_INVOCATION","change":"context.getPackageManager()","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"METHOD_INVOCATION","change":"context.getPackageManager().getPackageInfo(packageName,0)","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"METHOD_INVOCATION","change":"context.getPackageName()","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"MODIFIER","change":"static","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"MODIFIER","change":"public","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"NUMBER_LITERAL","change":"0","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"QUALIFIED_NAME","change":"ExoPlayerLibraryInfo.VERSION","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"QUALIFIED_NAME","change":"Build.VERSION","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"QUALIFIED_NAME","change":"Build.VERSION.RELEASE","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"QUALIFIED_NAME","change":"info.versionName","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"RETURN_STATEMENT","change":"return applicationName + \"/\" + versionName+ \" (Linux;Android \"+ Build.VERSION.RELEASE+ \") \"+ \"ExoPlayerLib/\"+ ExoPlayerLibraryInfo.VERSION;\n","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"SIMPLE_TYPE","change":"NameNotFoundException","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"SIMPLE_TYPE","change":"PackageInfo","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"SIMPLE_TYPE","change":"String","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"SIMPLE_TYPE","change":"Context","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"NameNotFoundException e","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String applicationName","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Context context","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"STRING_LITERAL","change":"ExoPlayerLib/","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"STRING_LITERAL","change":") ","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"STRING_LITERAL","change":" (Linux;Android ","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"STRING_LITERAL","change":"/","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"STRING_LITERAL","change":"?","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"TRY_STATEMENT","change":"try {\n  String packageName\u003dcontext.getPackageName();\n  PackageInfo info\u003dcontext.getPackageManager().getPackageInfo(packageName,0);\n  versionName\u003dinfo.versionName;\n}\n catch (NameNotFoundException e) {\n  versionName\u003d\"?\";\n}\n","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"info","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"packageName","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"versionName","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"PackageInfo [info\u003dcontext.getPackageManager().getPackageInfo(packageName,0)]","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [packageName\u003dcontext.getPackageName()]","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"google_ExoPlayer","commit":"1d528b80eaa85449a02f800f507e13e4e5186ea8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [versionName]","source":"com.google.android.exoplayer.demo.DemoUtil.getUserAgent(Context)","target":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)","added":true,"scope":"TARGET","local":"com.google.android.exoplayer.util.Util.getUserAgent(Context,String)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"METHOD_DECLARATION","change":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"CLASS_T","local":"animated-base.src.main.com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"ANONYMOUS_CLASS_DECLARATION","change":"{\n  @Override public boolean supportsImageType(  CloseableImage image){\n    return true;\n  }\n  @Nullable @Override public Drawable createDrawable(  CloseableImage image){\n    return animatedDrawableFactory.create(image);\n  }\n}\n","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"TARGET","local":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"CLASS_INSTANCE_CREATION","change":"new DrawableFactory(){\n  @Override public boolean supportsImageType(  CloseableImage image){\n    return true;\n  }\n  @Nullable @Override public Drawable createDrawable(  CloseableImage image){\n    return animatedDrawableFactory.create(image);\n  }\n}\n","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"TARGET","local":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"IF_STATEMENT","change":"animatedDrawableFactory \u003d\u003d null","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"TARGET","local":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"INFIX_EXPRESSION","change":"animatedDrawableFactory \u003d\u003d null","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"TARGET","local":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"MARKER_ANNOTATION","change":"@Nullable","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"TARGET","local":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"MODIFIER","change":"final","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"TARGET","local":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"MODIFIER","change":"static","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"TARGET","local":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"MODIFIER","change":"public","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"TARGET","local":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"NULL_LITERAL","change":"null","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"TARGET","local":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"RETURN_STATEMENT","change":"return new DrawableFactory(){\n  @Override public boolean supportsImageType(  CloseableImage image){\n    return true;\n  }\n  @Nullable @Override public Drawable createDrawable(  CloseableImage image){\n    return animatedDrawableFactory.create(image);\n  }\n}\n;\n","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"TARGET","local":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"RETURN_STATEMENT","change":"return null;\n","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"TARGET","local":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"SIMPLE_TYPE","change":"DrawableFactory","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"TARGET","local":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"SIMPLE_TYPE","change":"AnimatedDrawableFactory","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"TARGET","local":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"SINGLE_VARIABLE_DECLARATION","change":"final @Nullable AnimatedDrawableFactory animatedDrawableFactory","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"TARGET","local":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"METHOD_INVOCATION","change":"wrapAnimatedDrawableFactory(mAnimatedDrawableFactory)","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"SUR_T","local":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.getAnimatedDrawableFactory(Context)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"RETURN_STATEMENT","change":"return wrapAnimatedDrawableFactory(mAnimatedDrawableFactory);\n","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":true,"scope":"SUR_T","local":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.getAnimatedDrawableFactory(Context)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"METHOD_INVOCATION","change":"PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(animatedDrawableFactory)","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"EXT_S","local":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier.createAnimatedDrawableFactory(Context,ImagePipelineFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"RETURN_STATEMENT","change":"return PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(animatedDrawableFactory);\n","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"EXT_S","local":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier.createAnimatedDrawableFactory(Context,ImagePipelineFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"METHOD_DECLARATION","change":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"CLASS_S","local":"drawee-backends.drawee-pipeline.src.main.com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"ANONYMOUS_CLASS_DECLARATION","change":"{\n  @Override public boolean supportsImageType(  CloseableImage image){\n    return true;\n  }\n  @Nullable @Override public Drawable createDrawable(  CloseableImage image){\n    return animatedDrawableFactory.create(image);\n  }\n}\n","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"SOURCE","local":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"CLASS_INSTANCE_CREATION","change":"new DrawableFactory(){\n  @Override public boolean supportsImageType(  CloseableImage image){\n    return true;\n  }\n  @Nullable @Override public Drawable createDrawable(  CloseableImage image){\n    return animatedDrawableFactory.create(image);\n  }\n}\n","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"SOURCE","local":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"IF_STATEMENT","change":"animatedDrawableFactory \u003d\u003d null","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"SOURCE","local":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"INFIX_EXPRESSION","change":"animatedDrawableFactory \u003d\u003d null","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"SOURCE","local":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"MARKER_ANNOTATION","change":"@Nullable","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"SOURCE","local":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"MODIFIER","change":"final","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"SOURCE","local":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"MODIFIER","change":"static","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"SOURCE","local":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"MODIFIER","change":"public","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"SOURCE","local":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"NULL_LITERAL","change":"null","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"SOURCE","local":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"RETURN_STATEMENT","change":"return new DrawableFactory(){\n  @Override public boolean supportsImageType(  CloseableImage image){\n    return true;\n  }\n  @Nullable @Override public Drawable createDrawable(  CloseableImage image){\n    return animatedDrawableFactory.create(image);\n  }\n}\n;\n","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"SOURCE","local":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"RETURN_STATEMENT","change":"return null;\n","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"SOURCE","local":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"SIMPLE_TYPE","change":"DrawableFactory","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"SOURCE","local":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"SIMPLE_TYPE","change":"AnimatedDrawableFactory","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"SOURCE","local":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"555322f7ea0f05fcac01288311d446a6cd4976d2","changeType":"SINGLE_VARIABLE_DECLARATION","change":"final @Nullable AnimatedDrawableFactory animatedDrawableFactory","source":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","target":"com.facebook.imagepipeline.animated.factory.AnimatedFactoryImpl.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)","added":false,"scope":"SOURCE","local":"com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory.wrapAnimatedDrawableFactory(AnimatedDrawableFactory)"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"METHOD_DECLARATION","change":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"CLASS_S","local":"samples.comparison.src.androidTest.com.facebook.samples.comparison.test.ScrollTest"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"CLASS_INSTANCE_CREATION","change":"new Point()","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"EXPRESSION_STATEMENT","change":"display.getSize(size)","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"IF_STATEMENT","change":"Build.VERSION.SDK_INT \u003c Build.VERSION_CODES.HONEYCOMB_MR2","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"INFIX_EXPRESSION","change":"Build.VERSION.SDK_INT \u003c Build.VERSION_CODES.HONEYCOMB_MR2","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"JAVADOC","change":"/** \n * Determines display\u0027s height.\n */\n","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"METHOD_INVOCATION","change":"display.getSize(size)","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"METHOD_INVOCATION","change":"display.getHeight()","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"METHOD_INVOCATION","change":"mActivity.getWindowManager()","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"METHOD_INVOCATION","change":"mActivity.getWindowManager().getDefaultDisplay()","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"MODIFIER","change":"final","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"MODIFIER","change":"private","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"PRIMITIVE_TYPE","change":"int","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"QUALIFIED_NAME","change":"size.y","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"QUALIFIED_NAME","change":"Build.VERSION_CODES","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"QUALIFIED_NAME","change":"Build.VERSION_CODES.HONEYCOMB_MR2","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"QUALIFIED_NAME","change":"Build.VERSION","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"QUALIFIED_NAME","change":"Build.VERSION.SDK_INT","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"RETURN_STATEMENT","change":"return size.y;\n","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"RETURN_STATEMENT","change":"return display.getHeight();\n","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"SIMPLE_TYPE","change":"Point","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"SIMPLE_TYPE","change":"Display","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"size","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"display","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Point [size\u003dnew Point()]","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Display [display\u003dmActivity.getWindowManager().getDefaultDisplay()]","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SOURCE","local":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"METHOD_INVOCATION","change":"mActivity.getDisplayHeight()","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"SUR_T","local":"com.facebook.samples.comparison.test.ScrollTest.scrollMultipleTimes(int)"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [height\u003dmActivity.getDisplayHeight()]","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"SUR_T","local":"com.facebook.samples.comparison.test.ScrollTest.scrollMultipleTimes(int)"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"METHOD_INVOCATION","change":"getDisplayHeight()","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SUR_S","local":"com.facebook.samples.comparison.test.ScrollTest.scrollMultipleTimes(int)"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [height\u003dgetDisplayHeight()]","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":false,"scope":"SUR_S","local":"com.facebook.samples.comparison.test.ScrollTest.scrollMultipleTimes(int)"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"METHOD_DECLARATION","change":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"CLASS_T","local":"samples.comparison.src.main.com.facebook.samples.comparison.MainActivity"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"CLASS_INSTANCE_CREATION","change":"new Point()","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"EXPRESSION_STATEMENT","change":"display.getSize(size)","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"IF_STATEMENT","change":"Build.VERSION.SDK_INT \u003c Build.VERSION_CODES.HONEYCOMB_MR2","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"INFIX_EXPRESSION","change":"Build.VERSION.SDK_INT \u003c Build.VERSION_CODES.HONEYCOMB_MR2","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"JAVADOC","change":"/** \n * Determines display\u0027s height.\n */\n","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"METHOD_INVOCATION","change":"display.getSize(size)","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"METHOD_INVOCATION","change":"display.getHeight()","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"METHOD_INVOCATION","change":"getWindowManager()","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"METHOD_INVOCATION","change":"getWindowManager().getDefaultDisplay()","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"MODIFIER","change":"final","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"MODIFIER","change":"public","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"PRIMITIVE_TYPE","change":"int","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"QUALIFIED_NAME","change":"size.y","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"QUALIFIED_NAME","change":"Build.VERSION_CODES","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"QUALIFIED_NAME","change":"Build.VERSION_CODES.HONEYCOMB_MR2","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"QUALIFIED_NAME","change":"Build.VERSION","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"QUALIFIED_NAME","change":"Build.VERSION.SDK_INT","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"RETURN_STATEMENT","change":"return size.y;\n","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"RETURN_STATEMENT","change":"return display.getHeight();\n","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"SIMPLE_TYPE","change":"Point","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"SIMPLE_TYPE","change":"Display","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"size","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"display","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Point [size\u003dnew Point()]","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"9689960148faf8f91108e05d500417313787fc4e","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Display [display\u003dgetWindowManager().getDefaultDisplay()]","source":"com.facebook.samples.comparison.test.ScrollTest.getDisplayHeight()","target":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()","added":true,"scope":"TARGET","local":"com.facebook.samples.comparison.MainActivity.getDisplayHeight()"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_DECLARATION","change":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"CLASS_T","local":"fbcore.src.main.com.facebook.common.util.UriUtil"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"ASSIGNMENT","change":"result \u003d srcUri.getPath()","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"ASSIGNMENT","change":"result \u003d cursor.getString(idx)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"ASSIGNMENT","change":"cursor \u003d contentResolver.query(srcUri,null,null,null,null)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"EXPRESSION_STATEMENT","change":"result\u003dsrcUri.getPath()","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"EXPRESSION_STATEMENT","change":"cursor.close()","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"EXPRESSION_STATEMENT","change":"result\u003dcursor.getString(idx)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"EXPRESSION_STATEMENT","change":"cursor.moveToFirst()","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"EXPRESSION_STATEMENT","change":"cursor\u003dcontentResolver.query(srcUri,null,null,null,null)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"IF_STATEMENT","change":"isLocalFileUri(srcUri)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"IF_STATEMENT","change":"cursor !\u003d null","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"IF_STATEMENT","change":"isLocalContentUri(srcUri)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"INFIX_EXPRESSION","change":"cursor !\u003d null","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"JAVADOC","change":"/** \n * Get the path of a file from the Uri.\n * @param contentResolver the content resolver which will query for the source file\n * @param srcUri The source uri\n * @return The Path for the file or null if doesn\u0027t exists\n */\n","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"MARKER_ANNOTATION","change":"@Nullable","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"srcUri.getPath()","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"isLocalFileUri(srcUri)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"cursor.close()","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"cursor.getString(idx)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"cursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"cursor.moveToFirst()","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"contentResolver.query(srcUri,null,null,null,null)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"isLocalContentUri(srcUri)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"MODIFIER","change":"final","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"MODIFIER","change":"static","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"MODIFIER","change":"public","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"NULL_LITERAL","change":"null","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"PRIMITIVE_TYPE","change":"int","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"QUALIFIED_NAME","change":"MediaStore.Images","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"QUALIFIED_NAME","change":"MediaStore.Images.ImageColumns","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"QUALIFIED_NAME","change":"MediaStore.Images.ImageColumns.DATA","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"RETURN_STATEMENT","change":"return result;\n","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"SIMPLE_TYPE","change":"Cursor","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"SIMPLE_TYPE","change":"String","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"SIMPLE_TYPE","change":"Uri","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"SIMPLE_TYPE","change":"ContentResolver","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"SINGLE_VARIABLE_DECLARATION","change":"final Uri srcUri","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ContentResolver contentResolver","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"TRY_STATEMENT","change":"try {\n  cursor\u003dcontentResolver.query(srcUri,null,null,null,null);\n  if (cursor !\u003d null) {\n    cursor.moveToFirst();\n    int idx\u003dcursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA);\n    result\u003dcursor.getString(idx);\n  }\n}\n  finally {\n  if (cursor !\u003d null) {\n    cursor.close();\n  }\n}\n","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"idx","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"cursor","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"result","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [idx\u003dcursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA)]","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Cursor [cursor\u003dnull]","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [result\u003dnull]","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"TARGET","local":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_DECLARATION","change":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"CLASS_S","local":"imagepipeline.src.main.com.facebook.imagepipeline.producers.LocalExifThumbnailProducer"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"ASSIGNMENT","change":"result \u003d srcUri.getPath()","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"ASSIGNMENT","change":"result \u003d cursor.getString(idx)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"ASSIGNMENT","change":"cursor \u003d mContentResolver.query(srcUri,null,null,null,null)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"EXPRESSION_STATEMENT","change":"result\u003dsrcUri.getPath()","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"EXPRESSION_STATEMENT","change":"cursor.close()","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"EXPRESSION_STATEMENT","change":"result\u003dcursor.getString(idx)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"EXPRESSION_STATEMENT","change":"cursor.moveToFirst()","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"EXPRESSION_STATEMENT","change":"cursor\u003dmContentResolver.query(srcUri,null,null,null,null)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"IF_STATEMENT","change":"UriUtil.isLocalFileUri(srcUri)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"IF_STATEMENT","change":"cursor !\u003d null","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"IF_STATEMENT","change":"UriUtil.isLocalContentUri(srcUri)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"INFIX_EXPRESSION","change":"cursor !\u003d null","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"JAVADOC","change":"/** \n * Get the path of a file from the Uri\n * @param srcUri The source uri\n * @return The Path for the file or null if doesn\u0027t exists\n */\n","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"srcUri.getPath()","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"UriUtil.isLocalFileUri(srcUri)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"cursor.close()","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"cursor.getString(idx)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"cursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"cursor.moveToFirst()","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"mContentResolver.query(srcUri,null,null,null,null)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"UriUtil.isLocalContentUri(srcUri)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"MODIFIER","change":"final","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"MODIFIER","change":"private","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"NULL_LITERAL","change":"null","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"PRIMITIVE_TYPE","change":"int","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"QUALIFIED_NAME","change":"MediaStore.Images","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"QUALIFIED_NAME","change":"MediaStore.Images.ImageColumns","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"QUALIFIED_NAME","change":"MediaStore.Images.ImageColumns.DATA","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"RETURN_STATEMENT","change":"return result;\n","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"SIMPLE_TYPE","change":"Cursor","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"SIMPLE_TYPE","change":"String","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"SIMPLE_TYPE","change":"Uri","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"SINGLE_VARIABLE_DECLARATION","change":"final Uri srcUri","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"TRY_STATEMENT","change":"try {\n  cursor\u003dmContentResolver.query(srcUri,null,null,null,null);\n  if (cursor !\u003d null) {\n    cursor.moveToFirst();\n    int idx\u003dcursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA);\n    result\u003dcursor.getString(idx);\n  }\n}\n  finally {\n  if (cursor !\u003d null) {\n    cursor.close();\n  }\n}\n","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"idx","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"cursor","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"result","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [idx\u003dcursor.getColumnIndex(MediaStore.Images.ImageColumns.DATA)]","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Cursor [cursor\u003dnull]","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [result\u003dnull]","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"SOURCE","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"UriUtil.getRealPathFromUri(mContentResolver,uri)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"EXT_T","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getExifInterface(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [realPath\u003dUriUtil.getRealPathFromUri(mContentResolver,uri)]","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":true,"scope":"EXT_T","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getExifInterface(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"METHOD_INVOCATION","change":"getRealPathFromUri(uri)","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"EXT_S","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getExifInterface(Uri)"}
{"project":"facebook_fresco","commit":"06dec30178247e3382d53e4fe015b4eff4fa5757","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [realPath\u003dgetRealPathFromUri(uri)]","source":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getRealPathFromUri(Uri)","target":"com.facebook.common.util.UriUtil.getRealPathFromUri(ContentResolver,Uri)","added":false,"scope":"EXT_S","local":"com.facebook.imagepipeline.producers.LocalExifThumbnailProducer.getExifInterface(Uri)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_DECLARATION","change":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"CLASS_S","local":"hikaricp-java6.src.main.com.zaxxer.hikari.pool.HikariPool"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"CLASS_INSTANCE_CREATION","change":"new DriverDataSource(configuration.getJdbcUrl(),configuration.getDataSourceProperties(),username,password)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"EXPRESSION_STATEMENT","change":"PropertyBeanSetter.setTargetFromProperties(dataSource,configuration.getDataSourceProperties())","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"IF_STATEMENT","change":"configuration.getJdbcUrl() !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"IF_STATEMENT","change":"configuration.getDataSource() \u003d\u003d null \u0026\u0026 dsClassName !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"INFIX_EXPRESSION","change":"configuration.getJdbcUrl() !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"INFIX_EXPRESSION","change":"dsClassName !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"INFIX_EXPRESSION","change":"configuration.getDataSource() \u003d\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"INFIX_EXPRESSION","change":"configuration.getDataSource() \u003d\u003d null \u0026\u0026 dsClassName !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"JAVADOC","change":"/** \n * Create/initialize the underlying DataSource.\n * @return the DataSource\n */\n","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"configuration.getDataSource()","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"configuration.getDataSourceProperties()","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"configuration.getJdbcUrl()","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"PropertyBeanSetter.setTargetFromProperties(dataSource,configuration.getDataSourceProperties())","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"createInstance(dsClassName,DataSource.class)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"configuration.getDataSourceClassName()","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"MODIFIER","change":"private","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"NULL_LITERAL","change":"null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"RETURN_STATEMENT","change":"return configuration.getDataSource();\n","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"RETURN_STATEMENT","change":"return new DriverDataSource(configuration.getJdbcUrl(),configuration.getDataSourceProperties(),username,password);\n","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"RETURN_STATEMENT","change":"return dataSource;\n","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SIMPLE_TYPE","change":"DriverDataSource","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SIMPLE_TYPE","change":"DataSource","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SIMPLE_TYPE","change":"String","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"TYPE_LITERAL","change":"DataSource","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"dataSource","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"dsClassName","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"DataSource [dataSource\u003dcreateInstance(dsClassName,DataSource.class)]","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [dsClassName\u003dconfiguration.getDataSourceClassName()]","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"ASSIGNMENT","change":"this.dataSource \u003d PoolUtilities.initializeDataSource(configuration.getDataSourceClassName(),configuration.getDataSource(),configuration.getDataSourceProperties(),configuration.getJdbcUrl(),username,password)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"SUR_T","local":"com.zaxxer.hikari.pool.HikariPool.HikariPool(HikariConfig,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"EXPRESSION_STATEMENT","change":"this.dataSource\u003dPoolUtilities.initializeDataSource(configuration.getDataSourceClassName(),configuration.getDataSource(),configuration.getDataSourceProperties(),configuration.getJdbcUrl(),username,password)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"SUR_T","local":"com.zaxxer.hikari.pool.HikariPool.HikariPool(HikariConfig,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"PoolUtilities.initializeDataSource(configuration.getDataSourceClassName(),configuration.getDataSource(),configuration.getDataSourceProperties(),configuration.getJdbcUrl(),username,password)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"SUR_T","local":"com.zaxxer.hikari.pool.HikariPool.HikariPool(HikariConfig,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"ASSIGNMENT","change":"this.dataSource \u003d initializeDataSource()","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SUR_S","local":"com.zaxxer.hikari.pool.HikariPool.HikariPool(HikariConfig,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"EXPRESSION_STATEMENT","change":"this.dataSource\u003dinitializeDataSource()","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SUR_S","local":"com.zaxxer.hikari.pool.HikariPool.HikariPool(HikariConfig,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"initializeDataSource()","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SUR_S","local":"com.zaxxer.hikari.pool.HikariPool.HikariPool(HikariConfig,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_DECLARATION","change":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"CLASS_T","local":"hikaricp-java6.src.main.com.zaxxer.hikari.util.PoolUtilities"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"ASSIGNMENT","change":"dataSource \u003d createInstance(dsClassName,DataSource.class)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"CLASS_INSTANCE_CREATION","change":"new DriverDataSource(jdbcUrl,dataSourceProperties,username,password)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"EXPRESSION_STATEMENT","change":"PropertyBeanSetter.setTargetFromProperties(dataSource,dataSourceProperties)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"EXPRESSION_STATEMENT","change":"dataSource\u003dcreateInstance(dsClassName,DataSource.class)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"IF_STATEMENT","change":"jdbcUrl !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"IF_STATEMENT","change":"dataSource \u003d\u003d null \u0026\u0026 dsClassName !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"INFIX_EXPRESSION","change":"jdbcUrl !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"INFIX_EXPRESSION","change":"dsClassName !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"INFIX_EXPRESSION","change":"dataSource \u003d\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"INFIX_EXPRESSION","change":"dataSource \u003d\u003d null \u0026\u0026 dsClassName !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"JAVADOC","change":"/** \n * Create/initialize the underlying DataSource.\n * @return the DataSource\n */\n","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"PropertyBeanSetter.setTargetFromProperties(dataSource,dataSourceProperties)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"createInstance(dsClassName,DataSource.class)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"MODIFIER","change":"static","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"MODIFIER","change":"public","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"NULL_LITERAL","change":"null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"RETURN_STATEMENT","change":"return dataSource;\n","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"RETURN_STATEMENT","change":"return new DriverDataSource(jdbcUrl,dataSourceProperties,username,password);\n","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SIMPLE_TYPE","change":"DriverDataSource","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SIMPLE_TYPE","change":"DataSource","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SIMPLE_TYPE","change":"String","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SIMPLE_TYPE","change":"Properties","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String password","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String username","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String jdbcUrl","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Properties dataSourceProperties","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SINGLE_VARIABLE_DECLARATION","change":"DataSource dataSource","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String dsClassName","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"TYPE_LITERAL","change":"DataSource","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_DECLARATION","change":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"CLASS_S","local":"hikaricp.src.main.com.zaxxer.hikari.pool.HikariPool"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"CLASS_INSTANCE_CREATION","change":"new DriverDataSource(configuration.getJdbcUrl(),configuration.getDataSourceProperties(),username,password)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"EXPRESSION_STATEMENT","change":"PropertyBeanSetter.setTargetFromProperties(dataSource,configuration.getDataSourceProperties())","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"IF_STATEMENT","change":"configuration.getJdbcUrl() !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"IF_STATEMENT","change":"configuration.getDataSource() \u003d\u003d null \u0026\u0026 dsClassName !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"INFIX_EXPRESSION","change":"configuration.getJdbcUrl() !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"INFIX_EXPRESSION","change":"dsClassName !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"INFIX_EXPRESSION","change":"configuration.getDataSource() \u003d\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"INFIX_EXPRESSION","change":"configuration.getDataSource() \u003d\u003d null \u0026\u0026 dsClassName !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"JAVADOC","change":"/** \n * Create/initialize the underlying DataSource.\n * @return the DataSource\n */\n","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"configuration.getDataSource()","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"configuration.getDataSourceProperties()","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"configuration.getJdbcUrl()","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"PropertyBeanSetter.setTargetFromProperties(dataSource,configuration.getDataSourceProperties())","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"createInstance(dsClassName,DataSource.class)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"configuration.getDataSourceClassName()","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"MODIFIER","change":"private","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"NULL_LITERAL","change":"null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"RETURN_STATEMENT","change":"return configuration.getDataSource();\n","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"RETURN_STATEMENT","change":"return new DriverDataSource(configuration.getJdbcUrl(),configuration.getDataSourceProperties(),username,password);\n","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"RETURN_STATEMENT","change":"return dataSource;\n","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SIMPLE_TYPE","change":"DriverDataSource","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SIMPLE_TYPE","change":"DataSource","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SIMPLE_TYPE","change":"String","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"TYPE_LITERAL","change":"DataSource","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"dataSource","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"dsClassName","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"DataSource [dataSource\u003dcreateInstance(dsClassName,DataSource.class)]","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [dsClassName\u003dconfiguration.getDataSourceClassName()]","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"SOURCE","local":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"ASSIGNMENT","change":"this.dataSource \u003d PoolUtilities.initializeDataSource(configuration.getDataSourceClassName(),configuration.getDataSource(),configuration.getDataSourceProperties(),configuration.getJdbcUrl(),username,password)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"EXT_T","local":"com.zaxxer.hikari.pool.HikariPool.HikariPool(HikariConfig,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"EXPRESSION_STATEMENT","change":"this.dataSource\u003dPoolUtilities.initializeDataSource(configuration.getDataSourceClassName(),configuration.getDataSource(),configuration.getDataSourceProperties(),configuration.getJdbcUrl(),username,password)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"EXT_T","local":"com.zaxxer.hikari.pool.HikariPool.HikariPool(HikariConfig,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"PoolUtilities.initializeDataSource(configuration.getDataSourceClassName(),configuration.getDataSource(),configuration.getDataSourceProperties(),configuration.getJdbcUrl(),username,password)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"EXT_T","local":"com.zaxxer.hikari.pool.HikariPool.HikariPool(HikariConfig,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"ASSIGNMENT","change":"this.dataSource \u003d initializeDataSource()","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"EXT_S","local":"com.zaxxer.hikari.pool.HikariPool.HikariPool(HikariConfig,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"EXPRESSION_STATEMENT","change":"this.dataSource\u003dinitializeDataSource()","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"EXT_S","local":"com.zaxxer.hikari.pool.HikariPool.HikariPool(HikariConfig,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"initializeDataSource()","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":false,"scope":"EXT_S","local":"com.zaxxer.hikari.pool.HikariPool.HikariPool(HikariConfig,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_DECLARATION","change":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"CLASS_T","local":"hikaricp.src.main.com.zaxxer.hikari.util.PoolUtilities"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"ASSIGNMENT","change":"dataSource \u003d createInstance(dsClassName,DataSource.class)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"CLASS_INSTANCE_CREATION","change":"new DriverDataSource(jdbcUrl,dataSourceProperties,username,password)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"EXPRESSION_STATEMENT","change":"PropertyBeanSetter.setTargetFromProperties(dataSource,dataSourceProperties)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"EXPRESSION_STATEMENT","change":"dataSource\u003dcreateInstance(dsClassName,DataSource.class)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"IF_STATEMENT","change":"jdbcUrl !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"IF_STATEMENT","change":"dataSource \u003d\u003d null \u0026\u0026 dsClassName !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"INFIX_EXPRESSION","change":"jdbcUrl !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"INFIX_EXPRESSION","change":"dsClassName !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"INFIX_EXPRESSION","change":"dataSource \u003d\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"INFIX_EXPRESSION","change":"dataSource \u003d\u003d null \u0026\u0026 dsClassName !\u003d null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"JAVADOC","change":"/** \n * Create/initialize the underlying DataSource.\n * @return the DataSource\n */\n","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"PropertyBeanSetter.setTargetFromProperties(dataSource,dataSourceProperties)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"METHOD_INVOCATION","change":"createInstance(dsClassName,DataSource.class)","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"MODIFIER","change":"static","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"MODIFIER","change":"public","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"NULL_LITERAL","change":"null","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"RETURN_STATEMENT","change":"return dataSource;\n","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"RETURN_STATEMENT","change":"return new DriverDataSource(jdbcUrl,dataSourceProperties,username,password);\n","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SIMPLE_TYPE","change":"DriverDataSource","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SIMPLE_TYPE","change":"DataSource","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SIMPLE_TYPE","change":"String","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SIMPLE_TYPE","change":"Properties","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String password","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String username","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String jdbcUrl","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Properties dataSourceProperties","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SINGLE_VARIABLE_DECLARATION","change":"DataSource dataSource","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String dsClassName","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"brettwooldridge_HikariCP","commit":"1143d557d4341972ebe1c8c0b631720d378fd139","changeType":"TYPE_LITERAL","change":"DataSource","source":"com.zaxxer.hikari.pool.HikariPool.initializeDataSource()","target":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)","added":true,"scope":"TARGET","local":"com.zaxxer.hikari.util.PoolUtilities.initializeDataSource(String,DataSource,Properties,String,String,String)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_DECLARATION","change":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"CLASS_T","local":"java.org.apache.coyote.ajp.AbstractAjpProcessor"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"ASSIGNMENT","change":"error \u003d true","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"ASSIGNMENT","change":"cping \u003d false","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"ASSIGNMENT","change":"keptAlive \u003d true","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"ASSIGNMENT","change":"cping \u003d true","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"ASSIGNMENT","change":"error \u003d false","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"ASSIGNMENT","change":"this.socketWrapper \u003d socket","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"BOOLEAN_LITERAL","change":"false","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"BOOLEAN_LITERAL","change":"true","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"BREAK_STATEMENT","change":"break;\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"CATCH_CLAUSE","change":"catch (Throwable t) {\n  ExceptionUtils.handleThrowable(t);\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"CATCH_CLAUSE","change":"catch (Throwable t) {\n  ExceptionUtils.handleThrowable(t);\n  getLog().error(sm.getString(\"ajpprocessor.request.process\"),t);\n  response.setStatus(500);\n  getAdapter().log(request,response,0);\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"CATCH_CLAUSE","change":"catch (InterruptedIOException e) {\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"CATCH_CLAUSE","change":"catch (Throwable t) {\n  ExceptionUtils.handleThrowable(t);\n  getLog().debug(sm.getString(\"ajpprocessor.request.prepare\"),t);\n  response.setStatus(400);\n  getAdapter().log(request,response,0);\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"CATCH_CLAUSE","change":"catch (Throwable t) {\n  ExceptionUtils.handleThrowable(t);\n  getLog().debug(sm.getString(\"ajpprocessor.header.error\"),t);\n  response.setStatus(400);\n  getAdapter().log(request,response,0);\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"CATCH_CLAUSE","change":"catch (IOException e) {\n  error\u003dtrue;\n  break;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"CATCH_CLAUSE","change":"catch (IOException e) {\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"CONTINUE_STATEMENT","change":"continue;\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"rp.setStage(org.apache.coyote.Constants.STAGE_ENDED)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"recycle(false)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"setTimeout(socketWrapper,keepAliveTimeout)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"request.updateCounters()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"response.setStatus(500)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"error\u003dtrue","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"ExceptionUtils.handleThrowable(t)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"finish()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"getAdapter().log(request,response,0)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"getLog().error(sm.getString(\"ajpprocessor.request.process\"),t)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"getAdapter().service(request,response)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"cping\u003dfalse","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"response.setStatus(503)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"response.setStatus(400)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"getLog().debug(sm.getString(\"ajpprocessor.request.prepare\"),t)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"prepareRequest()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"rp.setStage(org.apache.coyote.Constants.STAGE_PREPARE)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"getLog().debug(sm.getString(\"ajpprocessor.header.error\"),t)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"request.setStartTime(System.currentTimeMillis())","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"keptAlive\u003dtrue","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"getLog().debug(\"Unexpected message: \" + type)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"output(pongMessageArray,0,pongMessageArray.length)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"cping\u003dtrue","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"recycle(true)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"setTimeout(socketWrapper,soTimeout)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"error\u003dfalse","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"setupSocket(socket)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"this.socketWrapper\u003dsocket","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"rp.setStage(org.apache.coyote.Constants.STAGE_PARSE)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"FIELD_ACCESS","change":"this.socketWrapper","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"isAsync()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"!error \u0026\u0026 !endpoint.isPaused()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"keepAliveTimeout \u003e 0","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"error","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"!finished","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"isAsync() \u0026\u0026 !error","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"!error","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"!error \u0026\u0026 !cping \u0026\u0026 endpoint.isPaused()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"getLog().isDebugEnabled()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"type !\u003d Constants.JK_AJP13_FORWARD_REQUEST","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"endpoint.isPaused()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"type \u003d\u003d Constants.JK_AJP13_CPING_REQUEST","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"!readMessage(requestHeaderMessage,!keptAlive)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"INFIX_EXPRESSION","change":"!error \u0026\u0026 !endpoint.isPaused()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"INFIX_EXPRESSION","change":"keepAliveTimeout \u003e 0","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"INFIX_EXPRESSION","change":"isAsync() \u0026\u0026 !error","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"INFIX_EXPRESSION","change":"!error \u0026\u0026 !cping \u0026\u0026 endpoint.isPaused()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"INFIX_EXPRESSION","change":"\"Unexpected message: \" + type","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"INFIX_EXPRESSION","change":"type !\u003d Constants.JK_AJP13_FORWARD_REQUEST","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"INFIX_EXPRESSION","change":"type \u003d\u003d Constants.JK_AJP13_CPING_REQUEST","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"JAVADOC","change":"/** \n * Process pipelined HTTP requests using the specified input and output streams.\n * @throws IOException error during an I/O operation\n */\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"MARKER_ANNOTATION","change":"@Override","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"isAsync()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"endpoint.isPaused()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"rp.setStage(org.apache.coyote.Constants.STAGE_ENDED)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"recycle(false)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"setTimeout(socketWrapper,keepAliveTimeout)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"request.updateCounters()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"response.setStatus(500)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"ExceptionUtils.handleThrowable(t)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"finish()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"getAdapter()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"getAdapter().log(request,response,0)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"sm.getString(\"ajpprocessor.request.process\")","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"getLog()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"getLog().error(sm.getString(\"ajpprocessor.request.process\"),t)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"getAdapter().service(request,response)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"response.setStatus(503)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"response.setStatus(400)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"sm.getString(\"ajpprocessor.request.prepare\")","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"getLog().debug(sm.getString(\"ajpprocessor.request.prepare\"),t)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"prepareRequest()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"rp.setStage(org.apache.coyote.Constants.STAGE_PREPARE)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"sm.getString(\"ajpprocessor.header.error\")","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"getLog().debug(sm.getString(\"ajpprocessor.header.error\"),t)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"System.currentTimeMillis()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"request.setStartTime(System.currentTimeMillis())","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"getLog().debug(\"Unexpected message: \" + type)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"getLog().isDebugEnabled()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"output(pongMessageArray,0,pongMessageArray.length)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"recycle(true)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"requestHeaderMessage.getByte()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"setTimeout(socketWrapper,soTimeout)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"readMessage(requestHeaderMessage,!keptAlive)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"endpoint.getSoTimeout()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"setupSocket(socket)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"rp.setStage(org.apache.coyote.Constants.STAGE_PARSE)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"request.getRequestProcessor()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"MODIFIER","change":"public","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"NUMBER_LITERAL","change":"500","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"NUMBER_LITERAL","change":"503","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"NUMBER_LITERAL","change":"400","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PARAMETERIZED_TYPE","change":"SocketWrapper\u003cS\u003e","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PREFIX_EXPRESSION","change":"!endpoint.isPaused()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PREFIX_EXPRESSION","change":"!error","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PREFIX_EXPRESSION","change":"!finished","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PREFIX_EXPRESSION","change":"!cping","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PREFIX_EXPRESSION","change":"!keptAlive","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PREFIX_EXPRESSION","change":"!readMessage(requestHeaderMessage,!keptAlive)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"SocketState.CLOSED","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"SocketState.OPEN","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"SocketState.LONG","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"org.apache","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"org.apache.coyote","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"org.apache.coyote.Constants","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"org.apache.coyote.Constants.STAGE_ENDED","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"org.apache.coyote.Constants.STAGE_KEEPALIVE","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"org.apache.coyote.Constants.STAGE_SERVICE","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"org.apache.coyote.Constants.STAGE_PREPARE","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"Constants.JK_AJP13_FORWARD_REQUEST","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"pongMessageArray.length","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"Constants.JK_AJP13_CPING_REQUEST","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"org.apache.coyote.Constants.STAGE_PARSE","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"RETURN_STATEMENT","change":"return SocketState.CLOSED;\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"RETURN_STATEMENT","change":"return SocketState.OPEN;\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"RETURN_STATEMENT","change":"return SocketState.LONG;\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SIMPLE_TYPE","change":"Throwable","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SIMPLE_TYPE","change":"InterruptedIOException","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SIMPLE_TYPE","change":"IOException","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SIMPLE_TYPE","change":"RequestInfo","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SIMPLE_TYPE","change":"S","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SIMPLE_TYPE","change":"SocketWrapper","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SIMPLE_TYPE","change":"SocketState","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Throwable t","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"InterruptedIOException e","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"IOException e","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"SocketWrapper\u003cS\u003e socket","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"STRING_LITERAL","change":"ajpprocessor.request.process","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"STRING_LITERAL","change":"ajpprocessor.request.prepare","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"STRING_LITERAL","change":"ajpprocessor.header.error","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"STRING_LITERAL","change":"Unexpected message: ","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"THIS_EXPRESSION","change":"this","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"TRY_STATEMENT","change":"try {\n  finish();\n}\n catch (Throwable t) {\n  ExceptionUtils.handleThrowable(t);\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"TRY_STATEMENT","change":"try {\n  rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE);\n  getAdapter().service(request,response);\n}\n catch (InterruptedIOException e) {\n  error\u003dtrue;\n}\ncatch (Throwable t) {\n  ExceptionUtils.handleThrowable(t);\n  getLog().error(sm.getString(\"ajpprocessor.request.process\"),t);\n  response.setStatus(500);\n  getAdapter().log(request,response,0);\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"TRY_STATEMENT","change":"try {\n  prepareRequest();\n}\n catch (Throwable t) {\n  ExceptionUtils.handleThrowable(t);\n  getLog().debug(sm.getString(\"ajpprocessor.request.prepare\"),t);\n  response.setStatus(400);\n  getAdapter().log(request,response,0);\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"TRY_STATEMENT","change":"try {\n  output(pongMessageArray,0,pongMessageArray.length);\n}\n catch (IOException e) {\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"TRY_STATEMENT","change":"try {\n  if (!readMessage(requestHeaderMessage,!keptAlive)) {\n    break;\n  }\n  if (keepAliveTimeout \u003e 0) {\n    setTimeout(socketWrapper,soTimeout);\n  }\n  int type\u003drequestHeaderMessage.getByte();\n  if (type \u003d\u003d Constants.JK_AJP13_CPING_REQUEST) {\n    if (endpoint.isPaused()) {\n      recycle(true);\n      break;\n    }\n    cping\u003dtrue;\n    try {\n      output(pongMessageArray,0,pongMessageArray.length);\n    }\n catch (    IOException e) {\n      error\u003dtrue;\n    }\n    recycle(false);\n    continue;\n  }\n else   if (type !\u003d Constants.JK_AJP13_FORWARD_REQUEST) {\n    if (getLog().isDebugEnabled()) {\n      getLog().debug(\"Unexpected message: \" + type);\n    }\n    error\u003dtrue;\n    break;\n  }\n  keptAlive\u003dtrue;\n  request.setStartTime(System.currentTimeMillis());\n}\n catch (IOException e) {\n  error\u003dtrue;\n  break;\n}\ncatch (Throwable t) {\n  ExceptionUtils.handleThrowable(t);\n  getLog().debug(sm.getString(\"ajpprocessor.header.error\"),t);\n  response.setStatus(400);\n  getAdapter().log(request,response,0);\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"type","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"keptAlive","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"cping","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"soTimeout","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"rp","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [type\u003drequestHeaderMessage.getByte()]","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"boolean [keptAlive\u003dfalse]","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"boolean [cping\u003dfalse]","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [soTimeout\u003dendpoint.getSoTimeout()]","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"RequestInfo [rp\u003drequest.getRequestProcessor()]","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"WHILE_STATEMENT","change":"while (!error \u0026\u0026 !endpoint.isPaused()) {\n  try {\n    if (!readMessage(requestHeaderMessage,!keptAlive)) {\n      break;\n    }\n    if (keepAliveTimeout \u003e 0) {\n      setTimeout(socketWrapper,soTimeout);\n    }\n    int type\u003drequestHeaderMessage.getByte();\n    if (type \u003d\u003d Constants.JK_AJP13_CPING_REQUEST) {\n      if (endpoint.isPaused()) {\n        recycle(true);\n        break;\n      }\n      cping\u003dtrue;\n      try {\n        output(pongMessageArray,0,pongMessageArray.length);\n      }\n catch (      IOException e) {\n        error\u003dtrue;\n      }\n      recycle(false);\n      continue;\n    }\n else     if (type !\u003d Constants.JK_AJP13_FORWARD_REQUEST) {\n      if (getLog().isDebugEnabled()) {\n        getLog().debug(\"Unexpected message: \" + type);\n      }\n      error\u003dtrue;\n      break;\n    }\n    keptAlive\u003dtrue;\n    request.setStartTime(System.currentTimeMillis());\n  }\n catch (  IOException e) {\n    error\u003dtrue;\n    break;\n  }\ncatch (  Throwable t) {\n    ExceptionUtils.handleThrowable(t);\n    getLog().debug(sm.getString(\"ajpprocessor.header.error\"),t);\n    response.setStatus(400);\n    getAdapter().log(request,response,0);\n    error\u003dtrue;\n  }\n  if (!error) {\n    rp.setStage(org.apache.coyote.Constants.STAGE_PREPARE);\n    try {\n      prepareRequest();\n    }\n catch (    Throwable t) {\n      ExceptionUtils.handleThrowable(t);\n      getLog().debug(sm.getString(\"ajpprocessor.request.prepare\"),t);\n      response.setStatus(400);\n      getAdapter().log(request,response,0);\n      error\u003dtrue;\n    }\n  }\n  if (!error \u0026\u0026 !cping \u0026\u0026 endpoint.isPaused()) {\n    response.setStatus(503);\n    getAdapter().log(request,response,0);\n    error\u003dtrue;\n  }\n  cping\u003dfalse;\n  if (!error) {\n    try {\n      rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE);\n      getAdapter().service(request,response);\n    }\n catch (    InterruptedIOException e) {\n      error\u003dtrue;\n    }\ncatch (    Throwable t) {\n      ExceptionUtils.handleThrowable(t);\n      getLog().error(sm.getString(\"ajpprocessor.request.process\"),t);\n      response.setStatus(500);\n      getAdapter().log(request,response,0);\n      error\u003dtrue;\n    }\n  }\n  if (isAsync() \u0026\u0026 !error) {\n    break;\n  }\n  if (!finished) {\n    try {\n      finish();\n    }\n catch (    Throwable t) {\n      ExceptionUtils.handleThrowable(t);\n      error\u003dtrue;\n    }\n  }\n  if (error) {\n    response.setStatus(500);\n  }\n  request.updateCounters();\n  rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE);\n  if (keepAliveTimeout \u003e 0) {\n    setTimeout(socketWrapper,keepAliveTimeout);\n  }\n  recycle(false);\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_DECLARATION","change":"org.apache.coyote.ajp.AjpAprProcessor.process(SocketWrapper)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"EXT_S","local":"java.org.apache.coyote.ajp.AjpAprProcessor"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_DECLARATION","change":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"CLASS_S","local":"java.org.apache.coyote.ajp.AjpNioProcessor"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"ASSIGNMENT","change":"error \u003d true","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"ASSIGNMENT","change":"cping \u003d false","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"ASSIGNMENT","change":"keptAlive \u003d true","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"ASSIGNMENT","change":"cping \u003d true","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"ASSIGNMENT","change":"error \u003d false","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"ASSIGNMENT","change":"this.socketWrapper \u003d socket","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"BOOLEAN_LITERAL","change":"false","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"BOOLEAN_LITERAL","change":"true","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"BREAK_STATEMENT","change":"break;\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"CATCH_CLAUSE","change":"catch (Throwable t) {\n  ExceptionUtils.handleThrowable(t);\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"CATCH_CLAUSE","change":"catch (Throwable t) {\n  ExceptionUtils.handleThrowable(t);\n  log.error(sm.getString(\"ajpprocessor.request.process\"),t);\n  response.setStatus(500);\n  getAdapter().log(request,response,0);\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"CATCH_CLAUSE","change":"catch (InterruptedIOException e) {\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"CATCH_CLAUSE","change":"catch (Throwable t) {\n  ExceptionUtils.handleThrowable(t);\n  log.debug(sm.getString(\"ajpprocessor.request.prepare\"),t);\n  response.setStatus(400);\n  getAdapter().log(request,response,0);\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"CATCH_CLAUSE","change":"catch (Throwable t) {\n  ExceptionUtils.handleThrowable(t);\n  log.debug(sm.getString(\"ajpprocessor.header.error\"),t);\n  response.setStatus(400);\n  getAdapter().log(request,response,0);\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"CATCH_CLAUSE","change":"catch (IOException e) {\n  error\u003dtrue;\n  break;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"CATCH_CLAUSE","change":"catch (IOException e) {\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"CONTINUE_STATEMENT","change":"continue;\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"rp.setStage(org.apache.coyote.Constants.STAGE_ENDED)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"recycle(false)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"setTimeout(socketWrapper,keepAliveTimeout)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"request.updateCounters()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"response.setStatus(500)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"error\u003dtrue","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"ExceptionUtils.handleThrowable(t)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"finish()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"getAdapter().log(request,response,0)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"log.error(sm.getString(\"ajpprocessor.request.process\"),t)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"getAdapter().service(request,response)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"cping\u003dfalse","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"response.setStatus(503)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"response.setStatus(400)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"log.debug(sm.getString(\"ajpprocessor.request.prepare\"),t)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"prepareRequest()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"rp.setStage(org.apache.coyote.Constants.STAGE_PREPARE)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"log.debug(sm.getString(\"ajpprocessor.header.error\"),t)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"request.setStartTime(System.currentTimeMillis())","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"keptAlive\u003dtrue","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"log.debug(\"Unexpected message: \" + type)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"output(pongMessageArray,0,pongMessageArray.length)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"cping\u003dtrue","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"recycle(true)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"setTimeout(socketWrapper,soTimeout)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"error\u003dfalse","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"this.socketWrapper\u003dsocket","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"EXPRESSION_STATEMENT","change":"rp.setStage(org.apache.coyote.Constants.STAGE_PARSE)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"FIELD_ACCESS","change":"this.socketWrapper","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"isAsync()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"!error \u0026\u0026 !endpoint.isPaused()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"keepAliveTimeout \u003e 0","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"error","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"!finished","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"isAsync() \u0026\u0026 !error","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"!error","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"!error \u0026\u0026 !cping \u0026\u0026 endpoint.isPaused()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"log.isDebugEnabled()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"type !\u003d Constants.JK_AJP13_FORWARD_REQUEST","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"endpoint.isPaused()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"type \u003d\u003d Constants.JK_AJP13_CPING_REQUEST","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"IF_STATEMENT","change":"!readMessage(requestHeaderMessage,!keptAlive)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"INFIX_EXPRESSION","change":"!error \u0026\u0026 !endpoint.isPaused()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"INFIX_EXPRESSION","change":"keepAliveTimeout \u003e 0","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"INFIX_EXPRESSION","change":"isAsync() \u0026\u0026 !error","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"INFIX_EXPRESSION","change":"!error \u0026\u0026 !cping \u0026\u0026 endpoint.isPaused()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"INFIX_EXPRESSION","change":"\"Unexpected message: \" + type","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"INFIX_EXPRESSION","change":"type !\u003d Constants.JK_AJP13_FORWARD_REQUEST","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"INFIX_EXPRESSION","change":"type \u003d\u003d Constants.JK_AJP13_CPING_REQUEST","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"JAVADOC","change":"/** \n * Process pipelined HTTP requests using the specified input and output streams.\n * @throws IOException error during an I/O operation\n */\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"MARKER_ANNOTATION","change":"@Override","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"isAsync()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"endpoint.isPaused()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"rp.setStage(org.apache.coyote.Constants.STAGE_ENDED)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"recycle(false)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"setTimeout(socketWrapper,keepAliveTimeout)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"request.updateCounters()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"response.setStatus(500)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"ExceptionUtils.handleThrowable(t)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"finish()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"getAdapter()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"getAdapter().log(request,response,0)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"sm.getString(\"ajpprocessor.request.process\")","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"log.error(sm.getString(\"ajpprocessor.request.process\"),t)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"getAdapter().service(request,response)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"response.setStatus(503)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"response.setStatus(400)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"sm.getString(\"ajpprocessor.request.prepare\")","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"log.debug(sm.getString(\"ajpprocessor.request.prepare\"),t)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"prepareRequest()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"rp.setStage(org.apache.coyote.Constants.STAGE_PREPARE)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"sm.getString(\"ajpprocessor.header.error\")","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"log.debug(sm.getString(\"ajpprocessor.header.error\"),t)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"System.currentTimeMillis()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"request.setStartTime(System.currentTimeMillis())","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"log.debug(\"Unexpected message: \" + type)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"log.isDebugEnabled()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"output(pongMessageArray,0,pongMessageArray.length)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"recycle(true)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"requestHeaderMessage.getByte()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"setTimeout(socketWrapper,soTimeout)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"readMessage(requestHeaderMessage,!keptAlive)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"endpoint.getSoTimeout()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"rp.setStage(org.apache.coyote.Constants.STAGE_PARSE)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_INVOCATION","change":"request.getRequestProcessor()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"MODIFIER","change":"public","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"NUMBER_LITERAL","change":"500","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"NUMBER_LITERAL","change":"503","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"NUMBER_LITERAL","change":"400","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PARAMETERIZED_TYPE","change":"SocketWrapper\u003cNioChannel\u003e","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PREFIX_EXPRESSION","change":"!endpoint.isPaused()","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PREFIX_EXPRESSION","change":"!error","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PREFIX_EXPRESSION","change":"!finished","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PREFIX_EXPRESSION","change":"!cping","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PREFIX_EXPRESSION","change":"!keptAlive","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PREFIX_EXPRESSION","change":"!readMessage(requestHeaderMessage,!keptAlive)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"SocketState.CLOSED","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"SocketState.OPEN","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"SocketState.LONG","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"org.apache","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"org.apache.coyote","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"org.apache.coyote.Constants","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"org.apache.coyote.Constants.STAGE_ENDED","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"org.apache.coyote.Constants.STAGE_KEEPALIVE","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"org.apache.coyote.Constants.STAGE_SERVICE","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"org.apache.coyote.Constants.STAGE_PREPARE","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"Constants.JK_AJP13_FORWARD_REQUEST","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"pongMessageArray.length","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"Constants.JK_AJP13_CPING_REQUEST","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"QUALIFIED_NAME","change":"org.apache.coyote.Constants.STAGE_PARSE","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"RETURN_STATEMENT","change":"return SocketState.CLOSED;\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"RETURN_STATEMENT","change":"return SocketState.OPEN;\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"RETURN_STATEMENT","change":"return SocketState.LONG;\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SIMPLE_TYPE","change":"Throwable","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SIMPLE_TYPE","change":"InterruptedIOException","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SIMPLE_TYPE","change":"IOException","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SIMPLE_TYPE","change":"RequestInfo","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SIMPLE_TYPE","change":"NioChannel","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SIMPLE_TYPE","change":"SocketWrapper","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SIMPLE_TYPE","change":"SocketState","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Throwable t","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"InterruptedIOException e","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"IOException e","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"SocketWrapper\u003cNioChannel\u003e socket","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"STRING_LITERAL","change":"ajpprocessor.request.process","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"STRING_LITERAL","change":"ajpprocessor.request.prepare","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"STRING_LITERAL","change":"ajpprocessor.header.error","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"STRING_LITERAL","change":"Unexpected message: ","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"THIS_EXPRESSION","change":"this","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"TRY_STATEMENT","change":"try {\n  finish();\n}\n catch (Throwable t) {\n  ExceptionUtils.handleThrowable(t);\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"TRY_STATEMENT","change":"try {\n  rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE);\n  getAdapter().service(request,response);\n}\n catch (InterruptedIOException e) {\n  error\u003dtrue;\n}\ncatch (Throwable t) {\n  ExceptionUtils.handleThrowable(t);\n  log.error(sm.getString(\"ajpprocessor.request.process\"),t);\n  response.setStatus(500);\n  getAdapter().log(request,response,0);\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"TRY_STATEMENT","change":"try {\n  prepareRequest();\n}\n catch (Throwable t) {\n  ExceptionUtils.handleThrowable(t);\n  log.debug(sm.getString(\"ajpprocessor.request.prepare\"),t);\n  response.setStatus(400);\n  getAdapter().log(request,response,0);\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"TRY_STATEMENT","change":"try {\n  output(pongMessageArray,0,pongMessageArray.length);\n}\n catch (IOException e) {\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"TRY_STATEMENT","change":"try {\n  if (!readMessage(requestHeaderMessage,!keptAlive)) {\n    break;\n  }\n  if (keepAliveTimeout \u003e 0) {\n    setTimeout(socketWrapper,soTimeout);\n  }\n  int type\u003drequestHeaderMessage.getByte();\n  if (type \u003d\u003d Constants.JK_AJP13_CPING_REQUEST) {\n    if (endpoint.isPaused()) {\n      recycle(true);\n      break;\n    }\n    cping\u003dtrue;\n    try {\n      output(pongMessageArray,0,pongMessageArray.length);\n    }\n catch (    IOException e) {\n      error\u003dtrue;\n    }\n    recycle(false);\n    continue;\n  }\n else   if (type !\u003d Constants.JK_AJP13_FORWARD_REQUEST) {\n    if (log.isDebugEnabled()) {\n      log.debug(\"Unexpected message: \" + type);\n    }\n    error\u003dtrue;\n    break;\n  }\n  keptAlive\u003dtrue;\n  request.setStartTime(System.currentTimeMillis());\n}\n catch (IOException e) {\n  error\u003dtrue;\n  break;\n}\ncatch (Throwable t) {\n  ExceptionUtils.handleThrowable(t);\n  log.debug(sm.getString(\"ajpprocessor.header.error\"),t);\n  response.setStatus(400);\n  getAdapter().log(request,response,0);\n  error\u003dtrue;\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"type","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"keptAlive","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"cping","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"soTimeout","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"rp","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [type\u003drequestHeaderMessage.getByte()]","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"boolean [keptAlive\u003dfalse]","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"boolean [cping\u003dfalse]","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [soTimeout\u003dendpoint.getSoTimeout()]","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"RequestInfo [rp\u003drequest.getRequestProcessor()]","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"WHILE_STATEMENT","change":"while (!error \u0026\u0026 !endpoint.isPaused()) {\n  try {\n    if (!readMessage(requestHeaderMessage,!keptAlive)) {\n      break;\n    }\n    if (keepAliveTimeout \u003e 0) {\n      setTimeout(socketWrapper,soTimeout);\n    }\n    int type\u003drequestHeaderMessage.getByte();\n    if (type \u003d\u003d Constants.JK_AJP13_CPING_REQUEST) {\n      if (endpoint.isPaused()) {\n        recycle(true);\n        break;\n      }\n      cping\u003dtrue;\n      try {\n        output(pongMessageArray,0,pongMessageArray.length);\n      }\n catch (      IOException e) {\n        error\u003dtrue;\n      }\n      recycle(false);\n      continue;\n    }\n else     if (type !\u003d Constants.JK_AJP13_FORWARD_REQUEST) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Unexpected message: \" + type);\n      }\n      error\u003dtrue;\n      break;\n    }\n    keptAlive\u003dtrue;\n    request.setStartTime(System.currentTimeMillis());\n  }\n catch (  IOException e) {\n    error\u003dtrue;\n    break;\n  }\ncatch (  Throwable t) {\n    ExceptionUtils.handleThrowable(t);\n    log.debug(sm.getString(\"ajpprocessor.header.error\"),t);\n    response.setStatus(400);\n    getAdapter().log(request,response,0);\n    error\u003dtrue;\n  }\n  if (!error) {\n    rp.setStage(org.apache.coyote.Constants.STAGE_PREPARE);\n    try {\n      prepareRequest();\n    }\n catch (    Throwable t) {\n      ExceptionUtils.handleThrowable(t);\n      log.debug(sm.getString(\"ajpprocessor.request.prepare\"),t);\n      response.setStatus(400);\n      getAdapter().log(request,response,0);\n      error\u003dtrue;\n    }\n  }\n  if (!error \u0026\u0026 !cping \u0026\u0026 endpoint.isPaused()) {\n    response.setStatus(503);\n    getAdapter().log(request,response,0);\n    error\u003dtrue;\n  }\n  cping\u003dfalse;\n  if (!error) {\n    try {\n      rp.setStage(org.apache.coyote.Constants.STAGE_SERVICE);\n      getAdapter().service(request,response);\n    }\n catch (    InterruptedIOException e) {\n      error\u003dtrue;\n    }\ncatch (    Throwable t) {\n      ExceptionUtils.handleThrowable(t);\n      log.error(sm.getString(\"ajpprocessor.request.process\"),t);\n      response.setStatus(500);\n      getAdapter().log(request,response,0);\n      error\u003dtrue;\n    }\n  }\n  if (isAsync() \u0026\u0026 !error) {\n    break;\n  }\n  if (!finished) {\n    try {\n      finish();\n    }\n catch (    Throwable t) {\n      ExceptionUtils.handleThrowable(t);\n      error\u003dtrue;\n    }\n  }\n  if (error) {\n    response.setStatus(500);\n  }\n  request.updateCounters();\n  rp.setStage(org.apache.coyote.Constants.STAGE_KEEPALIVE);\n  if (keepAliveTimeout \u003e 0) {\n    setTimeout(socketWrapper,keepAliveTimeout);\n  }\n  recycle(false);\n}\n","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"SOURCE","local":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)"}
{"project":"apache_tomcat","commit":"2d7d3c45e9c8a26959310f955f553d53776e55f8","changeType":"METHOD_DECLARATION","change":"org.apache.coyote.ajp.AjpProcessor.process(SocketWrapper)","source":"org.apache.coyote.ajp.AjpNioProcessor.process(SocketWrapper)","target":"org.apache.coyote.ajp.AbstractAjpProcessor.process(SocketWrapper)","added":false,"scope":"EXT_S","local":"java.org.apache.coyote.ajp.AjpProcessor"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.Service.getMapper()","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":true,"scope":"EXT_T","local":"java.org.apache.catalina.Service"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.connector.Connector.getMapper()","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":false,"scope":"CLASS_S","local":"java.org.apache.catalina.connector.Connector"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"JAVADOC","change":"/** \n * Return the mapper.\n */\n","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":false,"scope":"SOURCE","local":"org.apache.catalina.connector.Connector.getMapper()"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"MODIFIER","change":"public","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":false,"scope":"SOURCE","local":"org.apache.catalina.connector.Connector.getMapper()"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"PARENTHESIZED_EXPRESSION","change":"(mapper)","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":false,"scope":"SOURCE","local":"org.apache.catalina.connector.Connector.getMapper()"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"RETURN_STATEMENT","change":"return (mapper);\n","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":false,"scope":"SOURCE","local":"org.apache.catalina.connector.Connector.getMapper()"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"SIMPLE_TYPE","change":"Mapper","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":false,"scope":"SOURCE","local":"org.apache.catalina.connector.Connector.getMapper()"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"EXPRESSION_STATEMENT","change":"connector.getService().getMapper().map(serverName,decodedURI,version,request.getMappingData())","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":true,"scope":"EXT_T","local":"org.apache.catalina.connector.CoyoteAdapter.postParseRequest(org.apache.coyote.Request,Request,org.apache.coyote.Response,Response)"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"METHOD_INVOCATION","change":"connector.getService().getMapper()","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":true,"scope":"EXT_T","local":"org.apache.catalina.connector.CoyoteAdapter.postParseRequest(org.apache.coyote.Request,Request,org.apache.coyote.Response,Response)"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"METHOD_INVOCATION","change":"connector.getService().getMapper().map(serverName,decodedURI,version,request.getMappingData())","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":true,"scope":"EXT_T","local":"org.apache.catalina.connector.CoyoteAdapter.postParseRequest(org.apache.coyote.Request,Request,org.apache.coyote.Response,Response)"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"WHILE_STATEMENT","change":"while (mapRequired) {\n  if (version !\u003d null) {\n    mapRequired\u003dfalse;\n  }\n  connector.getService().getMapper().map(serverName,decodedURI,version,request.getMappingData());\n  request.setContext((Context)request.getMappingData().context);\n  request.setWrapper((Wrapper)request.getMappingData().wrapper);\n  if (request.getMappingData().contexts \u003d\u003d null) {\n    mapRequired\u003dfalse;\n  }\n  if (request.getContext() \u003d\u003d null) {\n    res.setStatus(404);\n    res.setMessage(\"Not found\");\n    Host host\u003drequest.getHost();\n    if (host !\u003d null) {\n      host.logAccess(request,response,0,true);\n    }\n    return false;\n  }\n  String sessionID\u003dnull;\n  if (request.getServletContext().getEffectiveSessionTrackingModes().contains(SessionTrackingMode.URL)) {\n    sessionID\u003drequest.getPathParameter(SessionConfig.getSessionUriParamName(request.getContext()));\n    if (sessionID !\u003d null) {\n      request.setRequestedSessionId(sessionID);\n      request.setRequestedSessionURL(true);\n    }\n  }\n  parseSessionCookiesId(req,request);\n  parseSessionSslId(request);\n  sessionID\u003drequest.getRequestedSessionId();\n  if (mapRequired) {\n    if (sessionID \u003d\u003d null) {\n      mapRequired\u003dfalse;\n    }\n else {\n      Object[] objs\u003drequest.getMappingData().contexts;\n      for (int i\u003d(objs.length); i \u003e 0; i--) {\n        Context ctxt\u003d(Context)objs[i - 1];\n        if (ctxt.getManager().findSession(sessionID) !\u003d null) {\n          if (ctxt.equals(request.getMappingData().context)) {\n            mapRequired\u003dfalse;\n          }\n else {\n            version\u003dctxt.getWebappVersion();\n            request.getMappingData().recycle();\n            break;\n          }\n        }\n      }\n      if (version \u003d\u003d null) {\n        mapRequired\u003dfalse;\n      }\n    }\n  }\n  if (!mapRequired \u0026\u0026 request.getContext().getPaused()) {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException e) {\n    }\n    request.getMappingData().recycle();\n    mapRequired\u003dtrue;\n  }\n}\n","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":true,"scope":"EXT_T","local":"org.apache.catalina.connector.CoyoteAdapter.postParseRequest(org.apache.coyote.Request,Request,org.apache.coyote.Response,Response)"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"EXPRESSION_STATEMENT","change":"connector.getMapper().map(serverName,decodedURI,version,request.getMappingData())","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":false,"scope":"EXT_S","local":"org.apache.catalina.connector.CoyoteAdapter.postParseRequest(org.apache.coyote.Request,Request,org.apache.coyote.Response,Response)"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"METHOD_INVOCATION","change":"connector.getMapper()","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":false,"scope":"EXT_S","local":"org.apache.catalina.connector.CoyoteAdapter.postParseRequest(org.apache.coyote.Request,Request,org.apache.coyote.Response,Response)"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"METHOD_INVOCATION","change":"connector.getMapper().map(serverName,decodedURI,version,request.getMappingData())","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":false,"scope":"EXT_S","local":"org.apache.catalina.connector.CoyoteAdapter.postParseRequest(org.apache.coyote.Request,Request,org.apache.coyote.Response,Response)"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"WHILE_STATEMENT","change":"while (mapRequired) {\n  if (version !\u003d null) {\n    mapRequired\u003dfalse;\n  }\n  connector.getMapper().map(serverName,decodedURI,version,request.getMappingData());\n  request.setContext((Context)request.getMappingData().context);\n  request.setWrapper((Wrapper)request.getMappingData().wrapper);\n  if (request.getMappingData().contexts \u003d\u003d null) {\n    mapRequired\u003dfalse;\n  }\n  if (request.getContext() \u003d\u003d null) {\n    res.setStatus(404);\n    res.setMessage(\"Not found\");\n    Host host\u003drequest.getHost();\n    if (host !\u003d null) {\n      host.logAccess(request,response,0,true);\n    }\n    return false;\n  }\n  String sessionID\u003dnull;\n  if (request.getServletContext().getEffectiveSessionTrackingModes().contains(SessionTrackingMode.URL)) {\n    sessionID\u003drequest.getPathParameter(SessionConfig.getSessionUriParamName(request.getContext()));\n    if (sessionID !\u003d null) {\n      request.setRequestedSessionId(sessionID);\n      request.setRequestedSessionURL(true);\n    }\n  }\n  parseSessionCookiesId(req,request);\n  parseSessionSslId(request);\n  sessionID\u003drequest.getRequestedSessionId();\n  if (mapRequired) {\n    if (sessionID \u003d\u003d null) {\n      mapRequired\u003dfalse;\n    }\n else {\n      Object[] objs\u003drequest.getMappingData().contexts;\n      for (int i\u003d(objs.length); i \u003e 0; i--) {\n        Context ctxt\u003d(Context)objs[i - 1];\n        if (ctxt.getManager().findSession(sessionID) !\u003d null) {\n          if (ctxt.equals(request.getMappingData().context)) {\n            mapRequired\u003dfalse;\n          }\n else {\n            version\u003dctxt.getWebappVersion();\n            request.getMappingData().recycle();\n            break;\n          }\n        }\n      }\n      if (version \u003d\u003d null) {\n        mapRequired\u003dfalse;\n      }\n    }\n  }\n  if (!mapRequired \u0026\u0026 request.getContext().getPaused()) {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException e) {\n    }\n    request.getMappingData().recycle();\n    mapRequired\u003dtrue;\n  }\n}\n","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":false,"scope":"EXT_S","local":"org.apache.catalina.connector.CoyoteAdapter.postParseRequest(org.apache.coyote.Request,Request,org.apache.coyote.Response,Response)"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.core.StandardService.getMapper()","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":true,"scope":"CLASS_T","local":"java.org.apache.catalina.core.StandardService"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"MARKER_ANNOTATION","change":"@Override","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardService.getMapper()"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"MODIFIER","change":"public","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardService.getMapper()"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"RETURN_STATEMENT","change":"return mapper;\n","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardService.getMapper()"}
{"project":"apache_tomcat","commit":"9108f90462368e88ced5cd0773182e634d81a694","changeType":"SIMPLE_TYPE","change":"Mapper","source":"org.apache.catalina.connector.Connector.getMapper()","target":"org.apache.catalina.core.StandardService.getMapper()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardService.getMapper()"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.Context.setAllowCasualMultipartParsing(boolean)","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":true,"scope":"EXT_T","local":"java.org.apache.catalina.Context"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":false,"scope":"CLASS_S","local":"java.org.apache.catalina.connector.Connector"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"ASSIGNMENT","change":"this.allowCasualMultipartParsing \u003d allowCasualMultipartParsing","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":false,"scope":"SOURCE","local":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"EXPRESSION_STATEMENT","change":"this.allowCasualMultipartParsing\u003dallowCasualMultipartParsing","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":false,"scope":"SOURCE","local":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"FIELD_ACCESS","change":"this.allowCasualMultipartParsing","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":false,"scope":"SOURCE","local":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"JAVADOC","change":"/** \n * Set to \u003ccode\u003etrue\u003c/code\u003e to allow requests mapped to servlets that do not explicitly declare @MultipartConfig or have \u0026lt;multipart-config\u0026gt; specified in web.xml to parse multipart/form-data requests.\n * @param allowCasualMultipartParsing \u003ccode\u003etrue\u003c/code\u003e to allow suchcasual parsing, \u003ccode\u003efalse\u003c/code\u003e otherwise.\n */\n","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":false,"scope":"SOURCE","local":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"MODIFIER","change":"public","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":false,"scope":"SOURCE","local":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":false,"scope":"SOURCE","local":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":false,"scope":"SOURCE","local":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"SINGLE_VARIABLE_DECLARATION","change":"boolean allowCasualMultipartParsing","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":false,"scope":"SOURCE","local":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"THIS_EXPRESSION","change":"this","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":false,"scope":"SOURCE","local":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":true,"scope":"CLASS_T","local":"java.org.apache.catalina.core.StandardContext"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"ASSIGNMENT","change":"this.allowCasualMultipartParsing \u003d allowCasualMultipartParsing","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"EXPRESSION_STATEMENT","change":"this.allowCasualMultipartParsing\u003dallowCasualMultipartParsing","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"FIELD_ACCESS","change":"this.allowCasualMultipartParsing","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"JAVADOC","change":"/** \n * Set to \u003ccode\u003etrue\u003c/code\u003e to allow requests mapped to servlets that do not explicitly declare @MultipartConfig or have \u0026lt;multipart-config\u0026gt; specified in web.xml to parse multipart/form-data requests.\n * @param allowCasualMultipartParsing \u003ccode\u003etrue\u003c/code\u003e to allow suchcasual parsing, \u003ccode\u003efalse\u003c/code\u003e otherwise.\n */\n","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"MARKER_ANNOTATION","change":"@Override","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"MODIFIER","change":"public","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"SINGLE_VARIABLE_DECLARATION","change":"boolean allowCasualMultipartParsing","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"THIS_EXPRESSION","change":"this","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"EXPRESSION_STATEMENT","change":"tomcat.getConnector().setAllowCasualMultipartParsing(allowCasualMultipart)","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":false,"scope":"EXT_S","local":"org.apache.catalina.connector.TestRequest.doRequest(String,boolean,boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"METHOD_INVOCATION","change":"tomcat.getConnector().setAllowCasualMultipartParsing(allowCasualMultipart)","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":false,"scope":"EXT_S","local":"org.apache.catalina.connector.TestRequest.doRequest(String,boolean,boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"EXPRESSION_STATEMENT","change":"context.setAllowCasualMultipartParsing(allowCasualMultipart)","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":true,"scope":"EXT_T","local":"org.apache.catalina.core.TestStandardContext.doRequest(String,boolean,boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"METHOD_INVOCATION","change":"context.setAllowCasualMultipartParsing(allowCasualMultipart)","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":true,"scope":"EXT_T","local":"org.apache.catalina.core.TestStandardContext.doRequest(String,boolean,boolean)"}
{"project":"apache_tomcat","commit":"f69c17895d03835cbb87ee804379c600c39e9598","changeType":"TRY_STATEMENT","change":"try {\n  init();\n  context.setAllowCasualMultipartParsing(allowCasualMultipart);\n  connect();\n  String[] request;\n  if (makeMultipartRequest) {\n    String boundary\u003d\"--simpleboundary\";\n    String content\u003d\"--\" + boundary + CRLF+ \"Content-Disposition: form-data; name\u003d\\\"name\\\"\"+ CRLF+ CRLF+ \"value\"+ CRLF+ \"--\"+ boundary+ \"--\"+ CRLF;\n    if (null !\u003d content)     content\u003dnew String(content.getBytes(\"UTF-8\"),\"ASCII\");\n    request\u003dnew String[]{\"POST http://localhost:\" + getPort() + uri+ \" HTTP/1.1\"+ CRLF+ \"Host: localhost\"+ CRLF+ \"Connection: close\"+ CRLF+ \"Content-Type: multipart/form-data; boundary\u003d\"+ boundary+ CRLF+ \"Content-Length: \"+ content.length()+ CRLF+ CRLF+ content+ CRLF};\n  }\n else {\n    request\u003dnew String[]{\"GET http://localhost:\" + getPort() + uri+ \" HTTP/1.1\"+ CRLF+ \"Host: localhost\"+ CRLF+ \"Connection: close\"+ CRLF+ CRLF};\n  }\n  setRequest(request);\n  processRequest();\n  disconnect();\n}\n catch (Exception e) {\n  return e;\n}\n","source":"org.apache.catalina.connector.Connector.setAllowCasualMultipartParsing(boolean)","target":"org.apache.catalina.core.StandardContext.setAllowCasualMultipartParsing(boolean)","added":true,"scope":"EXT_T","local":"org.apache.catalina.core.TestStandardContext.doRequest(String,boolean,boolean)"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.core.ApplicationContext.mergeParameters()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"CLASS_S","local":"java.org.apache.catalina.core.ApplicationContext"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"ARRAY_ACCESS","change":"params[i]","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"ARRAY_ACCESS","change":"names[i]","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"ASSIGNMENT","change":"parameters \u003d results","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"CLASS_INSTANCE_CREATION","change":"new ConcurrentHashMap\u003cString,String\u003e()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"DIMENSION","change":"[]","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"EXPRESSION_STATEMENT","change":"parameters\u003dresults","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"EXPRESSION_STATEMENT","change":"results.put(params[i].getName(),params[i].getValue())","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"EXPRESSION_STATEMENT","change":"results.put(names[i],context.findParameter(names[i]))","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"FOR_STATEMENT","change":"for (int i\u003d0; i \u003c params.length; i++) {\n  if (params[i].getOverride()) {\n    if (results.get(params[i].getName()) \u003d\u003d null)     results.put(params[i].getName(),params[i].getValue());\n  }\n else {\n    results.put(params[i].getName(),params[i].getValue());\n  }\n}\n","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"FOR_STATEMENT","change":"for (int i\u003d0; i \u003c names.length; i++) results.put(names[i],context.findParameter(names[i]));\n","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"IF_STATEMENT","change":"results.get(params[i].getName()) \u003d\u003d null","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"IF_STATEMENT","change":"params[i].getOverride()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"IF_STATEMENT","change":"parameters !\u003d null","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"INFIX_EXPRESSION","change":"results.get(params[i].getName()) \u003d\u003d null","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"INFIX_EXPRESSION","change":"i \u003c params.length","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"INFIX_EXPRESSION","change":"i \u003c names.length","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"INFIX_EXPRESSION","change":"parameters !\u003d null","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"JAVADOC","change":"/** \n * Merge the context initialization parameters specified in the application deployment descriptor with the application parameters described in the server configuration, respecting the \u003ccode\u003eoverride\u003c/code\u003e property of the application parameters appropriately.\n */\n","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"params[i].getValue()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"params[i].getName()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"results.put(params[i].getName(),params[i].getValue())","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"results.get(params[i].getName())","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"params[i].getOverride()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"context.findApplicationParameters()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"context.findParameter(names[i])","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"results.put(names[i],context.findParameter(names[i]))","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"context.findParameters()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"MODIFIER","change":"private","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"NULL_LITERAL","change":"null","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"PARAMETERIZED_TYPE","change":"ConcurrentHashMap\u003cString,String\u003e","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"PARAMETERIZED_TYPE","change":"Map\u003cString,String\u003e","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"POSTFIX_EXPRESSION","change":"i++","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"QUALIFIED_NAME","change":"params.length","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"QUALIFIED_NAME","change":"names.length","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"RETURN_STATEMENT","change":"return;\n","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"SIMPLE_TYPE","change":"ApplicationParameter","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"SIMPLE_TYPE","change":"ConcurrentHashMap","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"SIMPLE_TYPE","change":"Map","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"VARIABLE_DECLARATION_EXPRESSION","change":"int [i\u003d0]","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"i","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"params","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"names","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"results","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"ApplicationParameter [params[]\u003dcontext.findApplicationParameters()]","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [names[]\u003dcontext.findParameters()]","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Map\u003cString,String\u003e [results\u003dnew ConcurrentHashMap\u003cString,String\u003e()]","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ApplicationContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"EXPRESSION_STATEMENT","change":"mergeParameters()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SUR_S","local":"org.apache.catalina.core.ApplicationContext.getInitParameterNames()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"mergeParameters()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SUR_S","local":"org.apache.catalina.core.ApplicationContext.getInitParameterNames()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"EXPRESSION_STATEMENT","change":"mergeParameters()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SUR_S","local":"org.apache.catalina.core.ApplicationContext.getInitParameter(String)"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"mergeParameters()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SUR_S","local":"org.apache.catalina.core.ApplicationContext.getInitParameter(String)"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"EXPRESSION_STATEMENT","change":"mergeParameters()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SUR_S","local":"org.apache.catalina.core.ApplicationContext.setInitParameter(String,String)"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"mergeParameters()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":false,"scope":"SUR_S","local":"org.apache.catalina.core.ApplicationContext.setInitParameter(String,String)"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.core.StandardContext.mergeParameters()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"CLASS_T","local":"java.org.apache.catalina.core.StandardContext"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"ARRAY_ACCESS","change":"params[i]","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"ARRAY_ACCESS","change":"names[i]","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"DIMENSION","change":"[]","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"EXPRESSION_STATEMENT","change":"sc.setInitParameter(params[i].getName(),params[i].getValue())","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"EXPRESSION_STATEMENT","change":"sc.setInitParameter(names[i],findParameter(names[i]))","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"FOR_STATEMENT","change":"for (int i\u003d0; i \u003c params.length; i++) {\n  if (params[i].getOverride()) {\n    if (sc.getInitParameter(params[i].getName()) \u003d\u003d null) {\n      sc.setInitParameter(params[i].getName(),params[i].getValue());\n    }\n  }\n else {\n    sc.setInitParameter(params[i].getName(),params[i].getValue());\n  }\n}\n","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"FOR_STATEMENT","change":"for (int i\u003d0; i \u003c names.length; i++) {\n  sc.setInitParameter(names[i],findParameter(names[i]));\n}\n","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"IF_STATEMENT","change":"sc.getInitParameter(params[i].getName()) \u003d\u003d null","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"IF_STATEMENT","change":"params[i].getOverride()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"INFIX_EXPRESSION","change":"sc.getInitParameter(params[i].getName()) \u003d\u003d null","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"INFIX_EXPRESSION","change":"i \u003c params.length","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"INFIX_EXPRESSION","change":"i \u003c names.length","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"JAVADOC","change":"/** \n * Merge the context initialization parameters specified in the application deployment descriptor with the application parameters described in the server configuration, respecting the \u003ccode\u003eoverride\u003c/code\u003e property of the application parameters appropriately.\n */\n","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"params[i].getValue()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"params[i].getName()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"sc.setInitParameter(params[i].getName(),params[i].getValue())","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"sc.getInitParameter(params[i].getName())","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"params[i].getOverride()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"findApplicationParameters()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"findParameter(names[i])","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"sc.setInitParameter(names[i],findParameter(names[i]))","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"findParameters()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"getServletContext()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"MODIFIER","change":"private","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"NULL_LITERAL","change":"null","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"POSTFIX_EXPRESSION","change":"i++","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"QUALIFIED_NAME","change":"params.length","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"QUALIFIED_NAME","change":"names.length","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"SIMPLE_TYPE","change":"ApplicationParameter","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"SIMPLE_TYPE","change":"ServletContext","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"VARIABLE_DECLARATION_EXPRESSION","change":"int [i\u003d0]","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"i","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"params","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"names","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"sc","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"ApplicationParameter [params[]\u003dfindApplicationParameters()]","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [names[]\u003dfindParameters()]","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"ServletContext [sc\u003dgetServletContext()]","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.mergeParameters()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"EXPRESSION_STATEMENT","change":"mergeParameters()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"EXT_T","local":"org.apache.catalina.core.StandardContext.startInternal()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"METHOD_INVOCATION","change":"mergeParameters()","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"EXT_T","local":"org.apache.catalina.core.StandardContext.startInternal()"}
{"project":"apache_tomcat","commit":"2db864e01dfeede1c55de645d01ad69b247b59c1","changeType":"TRY_STATEMENT","change":"try {\n  if (ok) {\n    getServletContext().setAttribute(JarScanner.class.getName(),getJarScanner());\n  }\n  if (ok) {\n    postWelcomeFiles();\n  }\n  mergeParameters();\n  for (  Map.Entry\u003cServletContainerInitializer,Set\u003cClass\u003c?\u003e\u003e\u003e entry : initializers.entrySet()) {\n    try {\n      entry.getKey().onStartup(entry.getValue(),getServletContext());\n    }\n catch (    ServletException e) {\n      ok\u003dfalse;\n      break;\n    }\n  }\n  if (ok) {\n    if (!listenerStart()) {\n      log.error(\"Error listenerStart\");\n      ok\u003dfalse;\n    }\n  }\n  try {\n    if ((manager !\u003d null) \u0026\u0026 (manager instanceof Lifecycle)) {\n      ((Lifecycle)getManager()).start();\n    }\n    super.threadStart();\n  }\n catch (  Exception e) {\n    log.error(\"Error manager.start()\",e);\n    ok\u003dfalse;\n  }\n  if (ok) {\n    if (!filterStart()) {\n      log.error(\"Error filterStart\");\n      ok\u003dfalse;\n    }\n  }\n  if (ok) {\n    loadOnStartup(findChildren());\n  }\n}\n  finally {\n  unbindThread(oldCCL);\n}\n","source":"org.apache.catalina.core.ApplicationContext.mergeParameters()","target":"org.apache.catalina.core.StandardContext.mergeParameters()","added":true,"scope":"EXT_T","local":"org.apache.catalina.core.StandardContext.startInternal()"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.Server.setCatalinaBase(File)","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":true,"scope":"EXT_T","local":"java.org.apache.catalina.Server"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":false,"scope":"CLASS_S","local":"java.org.apache.catalina.core.ContainerBase"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"ASSIGNMENT","change":"this.catalinaBase \u003d catalinaBase","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"EXPRESSION_STATEMENT","change":"this.catalinaBase\u003dcatalinaBase","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"FIELD_ACCESS","change":"this.catalinaBase","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"MODIFIER","change":"public","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"SIMPLE_TYPE","change":"File","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"SINGLE_VARIABLE_DECLARATION","change":"File catalinaBase","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"THIS_EXPRESSION","change":"this","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":false,"scope":"SOURCE","local":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":true,"scope":"CLASS_T","local":"java.org.apache.catalina.core.StandardServer"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"ASSIGNMENT","change":"this.catalinaBase \u003d catalinaBase","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"EXPRESSION_STATEMENT","change":"this.catalinaBase\u003dcatalinaBase","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"FIELD_ACCESS","change":"this.catalinaBase","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"MARKER_ANNOTATION","change":"@Override","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"MODIFIER","change":"public","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"SIMPLE_TYPE","change":"File","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"SINGLE_VARIABLE_DECLARATION","change":"File catalinaBase","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"THIS_EXPRESSION","change":"this","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"EXPRESSION_STATEMENT","change":"engine.setCatalinaBase(new File(baseDir))","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":false,"scope":"EXT_S","local":"org.apache.catalina.mbeans.MBeanFactory.createStandardServiceEngine(String,String,String)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"METHOD_INVOCATION","change":"engine.setCatalinaBase(new File(baseDir))","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":false,"scope":"EXT_S","local":"org.apache.catalina.mbeans.MBeanFactory.createStandardServiceEngine(String,String,String)"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"EXPRESSION_STATEMENT","change":"server.setCatalinaBase(baseFile)","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":true,"scope":"EXT_T","local":"org.apache.catalina.startup.Tomcat.initBaseDir()"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"EXPRESSION_STATEMENT","change":"server.setCatalinaBase(homeFile)","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":true,"scope":"EXT_T","local":"org.apache.catalina.startup.Tomcat.initBaseDir()"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"METHOD_INVOCATION","change":"server.setCatalinaBase(baseFile)","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":true,"scope":"EXT_T","local":"org.apache.catalina.startup.Tomcat.initBaseDir()"}
{"project":"apache_tomcat","commit":"dfafe935fb136cce78d47936f812119476072094","changeType":"METHOD_INVOCATION","change":"server.setCatalinaBase(homeFile)","source":"org.apache.catalina.core.ContainerBase.setCatalinaBase(File)","target":"org.apache.catalina.core.StandardServer.setCatalinaBase(File)","added":true,"scope":"EXT_T","local":"org.apache.catalina.startup.Tomcat.initBaseDir()"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"METHOD_DECLARATION","change":"org.apache.coyote.http11.AbstractHttp11JsseProtocol.getSslProtocol()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":false,"scope":"EXT_S","local":"java.org.apache.coyote.http11.AbstractHttp11JsseProtocol"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"METHOD_INVOCATION","change":"getEndpoint().getSslProtocol()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.AbstractHttp11JsseProtocol.getSslProtocol()"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"RETURN_STATEMENT","change":"return getEndpoint().getSslProtocol();\n","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.AbstractHttp11JsseProtocol.getSslProtocol()"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":false,"scope":"CLASS_S","local":"java.org.apache.tomcat.util.net.AbstractEndpoint"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"MODIFIER","change":"public","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"RETURN_STATEMENT","change":"return sslProtocol;\n","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":true,"scope":"CLASS_T","local":"java.org.apache.tomcat.util.net.SSLHostConfig"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"MODIFIER","change":"public","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"RETURN_STATEMENT","change":"return sslProtocol;\n","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"CLASS_INSTANCE_CREATION","change":"new JSSESSLContext(sslHostConfig.getSslProtocol())","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.jsse.JSSESocketFactory.createSSLContext()"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"METHOD_INVOCATION","change":"sslHostConfig.getSslProtocol()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.jsse.JSSESocketFactory.createSSLContext()"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"RETURN_STATEMENT","change":"return new JSSESSLContext(sslHostConfig.getSslProtocol());\n","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.jsse.JSSESocketFactory.createSSLContext()"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"METHOD_INVOCATION","change":"endpoint.getSslProtocol()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.jsse.JSSESocketFactory.createSSLContext()"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [protocol\u003dendpoint.getSslProtocol()]","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.jsse.JSSESocketFactory.createSSLContext()"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"METHOD_INVOCATION","change":"endpoint.getSslProtocol()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.jsse.JSSESocketFactory.JSSESocketFactory(AbstractEndpoint,SSLHostConfig)"}
{"project":"apache_tomcat","commit":"99163fc9af7c0ce1c7cebbc5aa6e4342c0e64838","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [sslProtocol\u003dendpoint.getSslProtocol()]","source":"org.apache.tomcat.util.net.AbstractEndpoint.getSslProtocol()","target":"org.apache.tomcat.util.net.SSLHostConfig.getSslProtocol()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.jsse.JSSESocketFactory.JSSESocketFactory(AbstractEndpoint,SSLHostConfig)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"EXPRESSION_STATEMENT","change":"getEndpoint().setHandler(cHandler)","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"EXT_T","local":"org.apache.coyote.http11.Http11AprProtocol.Http11AprProtocol()"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"METHOD_INVOCATION","change":"getEndpoint().setHandler(cHandler)","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"EXT_T","local":"org.apache.coyote.http11.Http11AprProtocol.Http11AprProtocol()"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"EXPRESSION_STATEMENT","change":"((AprEndpoint)getEndpoint()).setHandler(cHandler)","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.Http11AprProtocol.Http11AprProtocol()"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"METHOD_INVOCATION","change":"((AprEndpoint)getEndpoint()).setHandler(cHandler)","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.Http11AprProtocol.Http11AprProtocol()"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"EXPRESSION_STATEMENT","change":"getEndpoint().setHandler(cHandler)","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"EXT_T","local":"org.apache.coyote.http11.Http11Nio2Protocol.Http11Nio2Protocol()"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"METHOD_INVOCATION","change":"getEndpoint().setHandler(cHandler)","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"EXT_T","local":"org.apache.coyote.http11.Http11Nio2Protocol.Http11Nio2Protocol()"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"EXPRESSION_STATEMENT","change":"((Nio2Endpoint)getEndpoint()).setHandler(cHandler)","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.Http11Nio2Protocol.Http11Nio2Protocol()"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"METHOD_INVOCATION","change":"((Nio2Endpoint)getEndpoint()).setHandler(cHandler)","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.Http11Nio2Protocol.Http11Nio2Protocol()"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"EXPRESSION_STATEMENT","change":"getEndpoint().setHandler(cHandler)","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"EXT_T","local":"org.apache.coyote.http11.Http11NioProtocol.Http11NioProtocol()"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"METHOD_INVOCATION","change":"getEndpoint().setHandler(cHandler)","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"EXT_T","local":"org.apache.coyote.http11.Http11NioProtocol.Http11NioProtocol()"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"EXPRESSION_STATEMENT","change":"((NioEndpoint)getEndpoint()).setHandler(cHandler)","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.Http11NioProtocol.Http11NioProtocol()"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"METHOD_INVOCATION","change":"((NioEndpoint)getEndpoint()).setHandler(cHandler)","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.Http11NioProtocol.Http11NioProtocol()"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"CLASS_T","local":"java.org.apache.tomcat.util.net.AbstractEndpoint"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"ASSIGNMENT","change":"this.handler \u003d handler","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"EXPRESSION_STATEMENT","change":"this.handler\u003dhandler","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"FIELD_ACCESS","change":"this.handler","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"MODIFIER","change":"public","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"PARAMETERIZED_TYPE","change":"Handler\u003cS\u003e","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"SIMPLE_TYPE","change":"S","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"SIMPLE_TYPE","change":"Handler","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Handler\u003cS\u003e handler","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"THIS_EXPRESSION","change":"this","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"CLASS_S","local":"java.org.apache.tomcat.util.net.AprEndpoint"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"ASSIGNMENT","change":"this.handler \u003d handler","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"EXPRESSION_STATEMENT","change":"this.handler\u003dhandler","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"FIELD_ACCESS","change":"this.handler","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"MODIFIER","change":"public","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"PARAMETERIZED_TYPE","change":"Handler\u003cLong\u003e","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"SIMPLE_TYPE","change":"Long","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"SIMPLE_TYPE","change":"Handler","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Handler\u003cLong\u003e handler","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"THIS_EXPRESSION","change":"this","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.net.Nio2Endpoint.setHandler(Handler)","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"EXT_S","local":"java.org.apache.tomcat.util.net.Nio2Endpoint"}
{"project":"apache_tomcat","commit":"61295ea1275d4731966e7f4d3307a5004fc3e681","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.net.NioEndpoint.setHandler(Handler)","source":"org.apache.tomcat.util.net.AprEndpoint.setHandler(Handler)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setHandler(Handler)","added":false,"scope":"EXT_S","local":"java.org.apache.tomcat.util.net.NioEndpoint"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"CLASS_T","local":"java.org.apache.tomcat.util.http.Cookies"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"ARRAY_ACCESS","change":"buffer[src]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"ARRAY_ACCESS","change":"buffer[dest]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"ARRAY_ACCESS","change":"buffer[src + 1]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"ARRAY_TYPE","change":"byte[]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"ASSIGNMENT","change":"buffer[dest] \u003d buffer[src]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"CHARACTER_LITERAL","change":"\u0027\"\u0027","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"CHARACTER_LITERAL","change":"\u0027\\\\\u0027","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"DIMENSION","change":"[]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"EXPRESSION_STATEMENT","change":"bc.setEnd(dest)","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"EXPRESSION_STATEMENT","change":"src++","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"EXPRESSION_STATEMENT","change":"dest++","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"EXPRESSION_STATEMENT","change":"buffer[dest]\u003dbuffer[src]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"IF_STATEMENT","change":"buffer[src] \u003d\u003d \u0027\\\\\u0027 \u0026\u0026 src \u003c end \u0026\u0026 buffer[src + 1] \u003d\u003d \u0027\"\u0027","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"IF_STATEMENT","change":"bc \u003d\u003d null || bc.getLength() \u003d\u003d 0 || bc.indexOf(\u0027\"\u0027,0) \u003d\u003d -1","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"src + 1","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"buffer[src + 1] \u003d\u003d \u0027\"\u0027","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"src \u003c end","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"buffer[src] \u003d\u003d \u0027\\\\\u0027","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"buffer[src] \u003d\u003d \u0027\\\\\u0027 \u0026\u0026 src \u003c end","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"buffer[src] \u003d\u003d \u0027\\\\\u0027 \u0026\u0026 src \u003c end \u0026\u0026 buffer[src + 1] \u003d\u003d \u0027\"\u0027","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"bc.indexOf(\u0027\"\u0027,0) \u003d\u003d -1","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"bc.getLength() \u003d\u003d 0","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"bc \u003d\u003d null","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"bc \u003d\u003d null || bc.getLength() \u003d\u003d 0","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"bc \u003d\u003d null || bc.getLength() \u003d\u003d 0 || bc.indexOf(\u0027\"\u0027,0) \u003d\u003d -1","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"JAVADOC","change":"/** \n * Unescapes any double quotes in the given cookie value.\n * @param bc The cookie value to modify\n */\n","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"METHOD_INVOCATION","change":"bc.setEnd(dest)","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"METHOD_INVOCATION","change":"bc.getBuffer()","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"METHOD_INVOCATION","change":"bc.getEnd()","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"METHOD_INVOCATION","change":"bc.getStart()","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"METHOD_INVOCATION","change":"bc.indexOf(\u0027\"\u0027,0)","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"METHOD_INVOCATION","change":"bc.getLength()","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"MODIFIER","change":"static","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"MODIFIER","change":"private","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"NULL_LITERAL","change":"null","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"NUMBER_LITERAL","change":"1","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"POSTFIX_EXPRESSION","change":"src++","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"POSTFIX_EXPRESSION","change":"dest++","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"PREFIX_EXPRESSION","change":"-1","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"PRIMITIVE_TYPE","change":"byte","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"RETURN_STATEMENT","change":"return;\n","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"SIMPLE_TYPE","change":"ByteChunk","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ByteChunk bc","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"buffer","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"dest","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"end","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"src","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"byte[] [buffer\u003dbc.getBuffer()]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [dest\u003dsrc]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [end\u003dbc.getEnd()]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [src\u003dbc.getStart()]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"WHILE_STATEMENT","change":"while (src \u003c end) {\n  if (buffer[src] \u003d\u003d \u0027\\\\\u0027 \u0026\u0026 src \u003c end \u0026\u0026 buffer[src + 1] \u003d\u003d \u0027\"\u0027) {\n    src++;\n  }\n  buffer[dest]\u003dbuffer[src];\n  dest++;\n  src++;\n}\n","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"EXPRESSION_STATEMENT","change":"unescapeDoubleQuotes(sc.getValue().getByteChunk())","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"SUR_T","local":"org.apache.tomcat.util.http.Cookies.processCookieHeader(byte[],int,int)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"METHOD_INVOCATION","change":"unescapeDoubleQuotes(sc.getValue().getByteChunk())","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"SUR_T","local":"org.apache.tomcat.util.http.Cookies.processCookieHeader(byte[],int,int)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"WHILE_STATEMENT","change":"while (pos \u003c end) {\n  isSpecial\u003dfalse;\n  isQuoted\u003dfalse;\n  while (pos \u003c end \u0026\u0026 (CookieSupport.isHttpSeparator((char)bytes[pos]) \u0026\u0026 !CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 || CookieSupport.isV0Separator((char)bytes[pos]) || isWhiteSpace(bytes[pos]))) {\n    pos++;\n  }\n  if (pos \u003e\u003d end)   return;\n  if (bytes[pos] \u003d\u003d \u0027$\u0027) {\n    isSpecial\u003dtrue;\n    pos++;\n  }\n  valueEnd\u003dvalueStart\u003dnameStart\u003dpos;\n  pos\u003dnameEnd\u003dgetTokenEndPosition(bytes,pos,end,version,true);\n  while (pos \u003c end \u0026\u0026 isWhiteSpace(bytes[pos])) {\n    pos++;\n  }\n  if (pos \u003c end \u0026\u0026 bytes[pos] \u003d\u003d \u0027\u003d\u0027) {\n    do {\n      pos++;\n    }\n while (pos \u003c end \u0026\u0026 isWhiteSpace(bytes[pos]));\n    if (pos \u003e\u003d end)     return;\nswitch (bytes[pos]) {\ncase \u0027\"\u0027:\n      isQuoted\u003dtrue;\n    valueStart\u003dpos + 1;\n  valueEnd\u003dgetQuotedValueEndPosition(bytes,valueStart,end);\npos\u003dvalueEnd;\nif (pos \u003e\u003d end) return;\nbreak;\ncase \u0027;\u0027:\ncase \u0027,\u0027:\nvalueStart\u003dvalueEnd\u003d-1;\nbreak;\ndefault :\nif (version \u003d\u003d 0 \u0026\u0026 !CookieSupport.isV0Separator((char)bytes[pos]) \u0026\u0026 CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 || !CookieSupport.isHttpSeparator((char)bytes[pos])) {\nvalueStart\u003dpos;\nvalueEnd\u003dgetTokenEndPosition(bytes,valueStart,end,version,false);\npos\u003dvalueEnd;\n}\n else {\nlog.info(\"Cookies: Invalid cookie. \" + \"Value not a token or quoted value\");\nwhile (pos \u003c end \u0026\u0026 bytes[pos] !\u003d \u0027;\u0027 \u0026\u0026 bytes[pos] !\u003d \u0027,\u0027) {\npos++;\n}\npos++;\nsc\u003dnull;\ncontinue;\n}\n}\n}\n else {\nvalueStart\u003dvalueEnd\u003d-1;\npos\u003dnameEnd;\n}\nwhile (pos \u003c end \u0026\u0026 isWhiteSpace(bytes[pos])) {\npos++;\n}\nwhile (pos \u003c end \u0026\u0026 bytes[pos] !\u003d \u0027;\u0027 \u0026\u0026 bytes[pos] !\u003d \u0027,\u0027) {\npos++;\n}\npos++;\nif (isSpecial) {\nisSpecial\u003dfalse;\nif (equals(\"Version\",bytes,nameStart,nameEnd) \u0026\u0026 sc \u003d\u003d null) {\nif (bytes[valueStart] \u003d\u003d \u00271\u0027 \u0026\u0026 valueEnd \u003d\u003d (valueStart + 1)) {\nversion\u003d1;\n}\n else {\n}\ncontinue;\n}\nif (sc \u003d\u003d null) {\ncontinue;\n}\nif (equals(\"Domain\",bytes,nameStart,nameEnd)) {\nsc.getDomain().setBytes(bytes,valueStart,valueEnd - valueStart);\ncontinue;\n}\nif (equals(\"Path\",bytes,nameStart,nameEnd)) {\nsc.getPath().setBytes(bytes,valueStart,valueEnd - valueStart);\ncontinue;\n}\nif (equals(\"Port\",bytes,nameStart,nameEnd)) {\ncontinue;\n}\nif (equals(\"CommentURL\",bytes,nameStart,nameEnd)) {\ncontinue;\n}\nlog.info(\"Cookies: Unknown Special Cookie\");\n}\n else {\nsc\u003daddCookie();\nsc.setVersion(version);\nsc.getName().setBytes(bytes,nameStart,nameEnd - nameStart);\nif (valueStart !\u003d -1) {\nsc.getValue().setBytes(bytes,valueStart,valueEnd - valueStart);\nif (isQuoted) {\nunescapeDoubleQuotes(sc.getValue().getByteChunk());\n}\n}\n else {\nsc.getValue().setString(\"\");\n}\ncontinue;\n}\n}\n","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":true,"scope":"SUR_T","local":"org.apache.tomcat.util.http.Cookies.processCookieHeader(byte[],int,int)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"EXPRESSION_STATEMENT","change":"ServerCookie.unescapeDoubleQuotes(sc.getValue().getByteChunk())","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SUR_S","local":"org.apache.tomcat.util.http.Cookies.processCookieHeader(byte[],int,int)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"METHOD_INVOCATION","change":"ServerCookie.unescapeDoubleQuotes(sc.getValue().getByteChunk())","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SUR_S","local":"org.apache.tomcat.util.http.Cookies.processCookieHeader(byte[],int,int)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"WHILE_STATEMENT","change":"while (pos \u003c end) {\n  isSpecial\u003dfalse;\n  isQuoted\u003dfalse;\n  while (pos \u003c end \u0026\u0026 (isSeparator(bytes[pos]) || isWhiteSpace(bytes[pos]))) {\n    pos++;\n  }\n  if (pos \u003e\u003d end)   return;\n  if (bytes[pos] \u003d\u003d \u0027$\u0027) {\n    isSpecial\u003dtrue;\n    pos++;\n  }\n  valueEnd\u003dvalueStart\u003dnameStart\u003dpos;\n  pos\u003dnameEnd\u003dgetTokenEndPosition(bytes,pos,end);\n  while (pos \u003c end \u0026\u0026 isWhiteSpace(bytes[pos])) {\n    pos++;\n  }\n  if (pos \u003c end \u0026\u0026 bytes[pos] \u003d\u003d \u0027\u003d\u0027) {\n    do {\n      pos++;\n    }\n while (pos \u003c end \u0026\u0026 isWhiteSpace(bytes[pos]));\n    if (pos \u003e\u003d end)     return;\nswitch (bytes[pos]) {\ncase \u0027\"\u0027:\n      isQuoted\u003dtrue;\n    valueStart\u003dpos + 1;\n  valueEnd\u003dgetQuotedValueEndPosition(bytes,valueStart,end);\npos\u003dvalueEnd;\nif (pos \u003e\u003d end) return;\nbreak;\ncase \u0027;\u0027:\ncase \u0027,\u0027:\nvalueStart\u003dvalueEnd\u003d-1;\nbreak;\ndefault :\nif (!isSeparator(bytes[pos])) {\nvalueStart\u003dpos;\nvalueEnd\u003dgetTokenEndPosition(bytes,valueStart,end);\npos\u003dvalueEnd;\n}\n else {\nlog.info(\"Cookies: Invalid cookie.\" + \"Value not a token or quoted value\");\nwhile (pos \u003c end \u0026\u0026 bytes[pos] !\u003d \u0027;\u0027 \u0026\u0026 bytes[pos] !\u003d \u0027,\u0027) {\npos++;\n}\npos++;\nsc\u003dnull;\ncontinue;\n}\n}\n}\n else {\nvalueStart\u003dvalueEnd\u003d-1;\npos\u003dnameEnd;\n}\nwhile (pos \u003c end \u0026\u0026 isWhiteSpace(bytes[pos])) {\npos++;\n}\nwhile (pos \u003c end \u0026\u0026 bytes[pos] !\u003d \u0027;\u0027 \u0026\u0026 bytes[pos] !\u003d \u0027,\u0027) {\npos++;\n}\npos++;\nif (isSpecial) {\nisSpecial\u003dfalse;\nif (equals(\"Version\",bytes,nameStart,nameEnd) \u0026\u0026 sc \u003d\u003d null) {\nif (bytes[valueStart] \u003d\u003d \u00271\u0027 \u0026\u0026 valueEnd \u003d\u003d (valueStart + 1)) {\nversion\u003d1;\n}\n else {\n}\ncontinue;\n}\nif (sc \u003d\u003d null) {\ncontinue;\n}\nif (equals(\"Domain\",bytes,nameStart,nameEnd)) {\nsc.getDomain().setBytes(bytes,valueStart,valueEnd - valueStart);\ncontinue;\n}\nif (equals(\"Path\",bytes,nameStart,nameEnd)) {\nsc.getPath().setBytes(bytes,valueStart,valueEnd - valueStart);\ncontinue;\n}\nif (equals(\"Port\",bytes,nameStart,nameEnd)) {\ncontinue;\n}\nlog.info(\"Cookies: Unknown Special Cookie\");\n}\n else {\nsc\u003daddCookie();\nsc.setVersion(version);\nsc.getName().setBytes(bytes,nameStart,nameEnd - nameStart);\nif (valueStart !\u003d -1) {\nsc.getValue().setBytes(bytes,valueStart,valueEnd - valueStart);\nif (isQuoted) {\nServerCookie.unescapeDoubleQuotes(sc.getValue().getByteChunk());\n}\n}\n else {\nsc.getValue().setString(\"\");\n}\ncontinue;\n}\n}\n","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SUR_S","local":"org.apache.tomcat.util.http.Cookies.processCookieHeader(byte[],int,int)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"CLASS_S","local":"java.org.apache.tomcat.util.http.ServerCookie"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"ARRAY_ACCESS","change":"buffer[src]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"ARRAY_ACCESS","change":"buffer[dest]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"ARRAY_ACCESS","change":"buffer[src + 1]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"ARRAY_TYPE","change":"byte[]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"ASSIGNMENT","change":"buffer[dest] \u003d buffer[src]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"CHARACTER_LITERAL","change":"\u0027\"\u0027","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"CHARACTER_LITERAL","change":"\u0027\\\\\u0027","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"DIMENSION","change":"[]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"EXPRESSION_STATEMENT","change":"bc.setEnd(dest)","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"EXPRESSION_STATEMENT","change":"src++","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"EXPRESSION_STATEMENT","change":"dest++","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"EXPRESSION_STATEMENT","change":"buffer[dest]\u003dbuffer[src]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"IF_STATEMENT","change":"buffer[src] \u003d\u003d \u0027\\\\\u0027 \u0026\u0026 src \u003c end \u0026\u0026 buffer[src + 1] \u003d\u003d \u0027\"\u0027","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"IF_STATEMENT","change":"bc \u003d\u003d null || bc.getLength() \u003d\u003d 0 || bc.indexOf(\u0027\"\u0027,0) \u003d\u003d -1","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"src + 1","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"buffer[src + 1] \u003d\u003d \u0027\"\u0027","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"src \u003c end","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"buffer[src] \u003d\u003d \u0027\\\\\u0027","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"buffer[src] \u003d\u003d \u0027\\\\\u0027 \u0026\u0026 src \u003c end","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"buffer[src] \u003d\u003d \u0027\\\\\u0027 \u0026\u0026 src \u003c end \u0026\u0026 buffer[src + 1] \u003d\u003d \u0027\"\u0027","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"bc.indexOf(\u0027\"\u0027,0) \u003d\u003d -1","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"bc.getLength() \u003d\u003d 0","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"bc \u003d\u003d null","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"bc \u003d\u003d null || bc.getLength() \u003d\u003d 0","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"INFIX_EXPRESSION","change":"bc \u003d\u003d null || bc.getLength() \u003d\u003d 0 || bc.indexOf(\u0027\"\u0027,0) \u003d\u003d -1","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"JAVADOC","change":"/** \n * Unescapes any double quotes in the given cookie value.\n * @param bc The cookie value to modify\n */\n","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"METHOD_INVOCATION","change":"bc.setEnd(dest)","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"METHOD_INVOCATION","change":"bc.getBuffer()","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"METHOD_INVOCATION","change":"bc.getEnd()","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"METHOD_INVOCATION","change":"bc.getStart()","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"METHOD_INVOCATION","change":"bc.indexOf(\u0027\"\u0027,0)","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"METHOD_INVOCATION","change":"bc.getLength()","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"MODIFIER","change":"static","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"MODIFIER","change":"public","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"NULL_LITERAL","change":"null","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"NUMBER_LITERAL","change":"1","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"POSTFIX_EXPRESSION","change":"src++","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"POSTFIX_EXPRESSION","change":"dest++","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"PREFIX_EXPRESSION","change":"-1","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"PRIMITIVE_TYPE","change":"byte","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"RETURN_STATEMENT","change":"return;\n","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"SIMPLE_TYPE","change":"ByteChunk","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ByteChunk bc","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"buffer","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"dest","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"end","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"src","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"byte[] [buffer\u003dbc.getBuffer()]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [dest\u003dsrc]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [end\u003dbc.getEnd()]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [src\u003dbc.getStart()]","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"b1cb6df47df10d45961a5914c1c9dccefc2e60c4","changeType":"WHILE_STATEMENT","change":"while (src \u003c end) {\n  if (buffer[src] \u003d\u003d \u0027\\\\\u0027 \u0026\u0026 src \u003c end \u0026\u0026 buffer[src + 1] \u003d\u003d \u0027\"\u0027) {\n    src++;\n  }\n  buffer[dest]\u003dbuffer[src];\n  dest++;\n  src++;\n}\n","source":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)","target":"org.apache.tomcat.util.http.Cookies.unescapeDoubleQuotes(ByteChunk)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.ServerCookie.unescapeDoubleQuotes(ByteChunk)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.Context.setResources(WebResourceRoot)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"java.org.apache.catalina.Context"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.Context.setResources(DirContext)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"EXT_S","local":"java.org.apache.catalina.Context"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"CLASS_T","local":"java.org.apache.catalina.core.StandardContext"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.core.StandardContext.setResources(DirContext)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"CLASS_T","local":"java.org.apache.catalina.core.StandardContext"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"ASSIGNMENT","change":"this.resources \u003d resources","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"ASSIGNMENT","change":"oldResources \u003d this.resources","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"CLASS_INSTANCE_CREATION","change":"new IllegalStateException(sm.getString(\"standardContext.resources.started\"))","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"writeLock.unlock()","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"support.firePropertyChange(\"resources\",oldResources,resources)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"resources.setContext(this)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"oldResources.setContext(null)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"this.resources\u003dresources","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"oldResources\u003dthis.resources","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"writeLock.lock()","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"FIELD_ACCESS","change":"this.resources","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"IF_STATEMENT","change":"resources !\u003d null","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"IF_STATEMENT","change":"oldResources !\u003d null","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"IF_STATEMENT","change":"oldResources \u003d\u003d resources","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"IF_STATEMENT","change":"getState().isAvailable()","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"INFIX_EXPRESSION","change":"resources !\u003d null","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"INFIX_EXPRESSION","change":"oldResources !\u003d null","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"INFIX_EXPRESSION","change":"oldResources \u003d\u003d resources","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"MARKER_ANNOTATION","change":"@Override","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"writeLock.unlock()","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"support.firePropertyChange(\"resources\",oldResources,resources)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"resources.setContext(this)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"oldResources.setContext(null)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"sm.getString(\"standardContext.resources.started\")","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"getState()","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"getState().isAvailable()","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"writeLock.lock()","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"resourcesLock.writeLock()","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"MODIFIER","change":"public","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"NULL_LITERAL","change":"null","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"RETURN_STATEMENT","change":"return;\n","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"SIMPLE_TYPE","change":"IllegalStateException","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"SIMPLE_TYPE","change":"WebResourceRoot","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"SIMPLE_TYPE","change":"Lock","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"SINGLE_VARIABLE_DECLARATION","change":"WebResourceRoot resources","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"STRING_LITERAL","change":"resources","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"STRING_LITERAL","change":"standardContext.resources.started","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"THIS_EXPRESSION","change":"this","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"THROW_STATEMENT","change":"throw new IllegalStateException(sm.getString(\"standardContext.resources.started\"));\n","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"TRY_STATEMENT","change":"try {\n  if (getState().isAvailable()) {\n    throw new IllegalStateException(sm.getString(\"standardContext.resources.started\"));\n  }\n  oldResources\u003dthis.resources;\n  if (oldResources \u003d\u003d resources)   return;\n  this.resources\u003dresources;\n  if (oldResources !\u003d null) {\n    oldResources.setContext(null);\n  }\n  if (resources !\u003d null) {\n    resources.setContext(this);\n  }\n  support.firePropertyChange(\"resources\",oldResources,resources);\n}\n  finally {\n  writeLock.unlock();\n}\n","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"oldResources","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"writeLock","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"WebResourceRoot [oldResources\u003dnull]","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Lock [writeLock\u003dresourcesLock.writeLock()]","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"TARGET","local":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"setResources(new StandardRoot(this))","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"SUR_T","local":"org.apache.catalina.core.StandardContext.startInternal()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"setResources(new StandardRoot(this))","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"SUR_T","local":"org.apache.catalina.core.StandardContext.startInternal()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"TRY_STATEMENT","change":"try {\n  setResources(new StandardRoot(this));\n}\n catch (IllegalArgumentException e) {\n  log.error(\"Error initializing resources: \" + e.getMessage());\n  ok\u003dfalse;\n}\n","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"SUR_T","local":"org.apache.catalina.core.StandardContext.startInternal()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"setResources(new FileDirContext())","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SUR_S","local":"org.apache.catalina.core.StandardContext.startInternal()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"setResources(new WARDirContext())","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SUR_S","local":"org.apache.catalina.core.StandardContext.startInternal()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"setResources(new FileDirContext())","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SUR_S","local":"org.apache.catalina.core.StandardContext.startInternal()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"setResources(new WARDirContext())","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SUR_S","local":"org.apache.catalina.core.StandardContext.startInternal()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"TRY_STATEMENT","change":"try {\n  if ((getDocBase() !\u003d null) \u0026\u0026 (getDocBase().endsWith(\".war\")) \u0026\u0026 (!(new File(getBasePath())).isDirectory()))   setResources(new WARDirContext());\n else   setResources(new FileDirContext());\n}\n catch (IllegalArgumentException e) {\n  log.error(\"Error initializing resources: \" + e.getMessage());\n  ok\u003dfalse;\n}\n","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SUR_S","local":"org.apache.catalina.core.StandardContext.startInternal()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.loader.WebappClassLoader.setResources(WebResourceRoot)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"java.org.apache.catalina.loader.WebappClassLoader"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"CLASS_S","local":"java.org.apache.catalina.loader.WebappClassLoader"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"ASSIGNMENT","change":"contextName \u003d ((ProxyDirContext)resources).getContextName()","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"ASSIGNMENT","change":"this.resources \u003d resources","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"CAST_EXPRESSION","change":"(ProxyDirContext)resources","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"contextName\u003d((ProxyDirContext)resources).getContextName()","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"this.resources\u003dresources","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"FIELD_ACCESS","change":"this.resources","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"IF_STATEMENT","change":"resources instanceof ProxyDirContext","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"INSTANCEOF_EXPRESSION","change":"resources instanceof ProxyDirContext","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"JAVADOC","change":"/** \n * Set associated resources.\n */\n","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"((ProxyDirContext)resources).getContextName()","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"MODIFIER","change":"public","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"PARENTHESIZED_EXPRESSION","change":"((ProxyDirContext)resources)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"SIMPLE_TYPE","change":"ProxyDirContext","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"SIMPLE_TYPE","change":"DirContext","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"SINGLE_VARIABLE_DECLARATION","change":"DirContext resources","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"THIS_EXPRESSION","change":"this","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"SOURCE","local":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"TRY_STATEMENT","change":"try {\n  classLoader\u003dcreateClassLoader();\n  classLoader.setResources(context.getResources());\n  classLoader.setDelegate(this.delegate);\n  setRepositories();\n  setClassPath();\n  setPermissions();\n  ((Lifecycle)classLoader).start();\n  String contextName\u003dcontext.getName();\n  if (!contextName.startsWith(\"/\")) {\n    contextName\u003d\"/\" + contextName;\n  }\n  ObjectName cloname\u003dnew ObjectName(context.getDomain() + \":type\u003dWebappClassLoader,context\u003d\" + contextName+ \",host\u003d\"+ context.getParent().getName());\n  Registry.getRegistry(null,null).registerComponent(classLoader,cloname,null);\n}\n catch (Throwable t) {\n  t\u003dExceptionUtils.unwrapInvocationTargetException(t);\n  ExceptionUtils.handleThrowable(t);\n  log.error(\"LifecycleException \",t);\n  throw new LifecycleException(\"start: \",t);\n}\n","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"org.apache.catalina.loader.WebappLoader.startInternal()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"TRY_STATEMENT","change":"try {\n  classLoader\u003dcreateClassLoader();\n  classLoader.setResources(context.getResources());\n  classLoader.setDelegate(this.delegate);\n  classLoader.setSearchExternalFirst(searchExternalFirst);\n  for (int i\u003d0; i \u003c repositories.length; i++) {\n    classLoader.addRepository(repositories[i]);\n  }\n  setRepositories();\n  setClassPath();\n  setPermissions();\n  ((Lifecycle)classLoader).start();\n  DirContextURLStreamHandler.bind(classLoader,this.context.getResources());\n  String contextName\u003dcontext.getName();\n  if (!contextName.startsWith(\"/\")) {\n    contextName\u003d\"/\" + contextName;\n  }\n  ObjectName cloname\u003dnew ObjectName(context.getDomain() + \":type\u003dWebappClassLoader,context\u003d\" + contextName+ \",host\u003d\"+ context.getParent().getName());\n  Registry.getRegistry(null,null).registerComponent(classLoader,cloname,null);\n}\n catch (Throwable t) {\n  t\u003dExceptionUtils.unwrapInvocationTargetException(t);\n  ExceptionUtils.handleThrowable(t);\n  log.error(\"LifecycleException \",t);\n  throw new LifecycleException(\"start: \",t);\n}\n","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"EXT_S","local":"org.apache.catalina.loader.WebappLoader.startInternal()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.startup.FailedContext.setResources(WebResourceRoot)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"java.org.apache.catalina.startup.FailedContext"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.startup.FailedContext.setResources(DirContext)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"EXT_S","local":"java.org.apache.catalina.startup.FailedContext"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"ctxt.setResources(new StandardRoot(ctxt))","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"javax.el.TestCompositeELResolver.testBug50408()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"ctxt.setResources(new StandardRoot(ctxt))","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"javax.el.TestCompositeELResolver.testBug50408()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"ctx.setResources(new StandardRoot(ctx))","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"org.apache.catalina.core.TestStandardContextAliases.testDirContextAliases()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"ctx.setResources(new StandardRoot(ctx))","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"org.apache.catalina.core.TestStandardContextAliases.testDirContextAliases()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.core.TesterContext.setResources(WebResourceRoot)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"test.org.apache.catalina.core.TesterContext"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"ctx.setResources(new StandardRoot(ctx))","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"org.apache.catalina.loader.TestVirtualContext.testVirtualClassLoader()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"ctx.setResources(new StandardRoot(ctx))","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"org.apache.catalina.loader.TestVirtualContext.testVirtualClassLoader()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"ctx.setResources(resources)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"EXT_S","local":"org.apache.catalina.loader.TestVirtualContext.testVirtualClassLoader()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"ctx.setResources(resources)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"EXT_S","local":"org.apache.catalina.loader.TestVirtualContext.testVirtualClassLoader()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"ctx.setResources(new StandardRoot(ctx))","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"org.apache.catalina.loader.TestVirtualContext.testAdditionalWebInfClassesPaths()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"ctx.setResources(new StandardRoot(ctx))","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"org.apache.catalina.loader.TestVirtualContext.testAdditionalWebInfClassesPaths()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"ctx.setResources(resources)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"EXT_S","local":"org.apache.catalina.loader.TestVirtualContext.testAdditionalWebInfClassesPaths()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"ctx.setResources(resources)","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"EXT_S","local":"org.apache.catalina.loader.TestVirtualContext.testAdditionalWebInfClassesPaths()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"ctx.setResources(new StandardRoot(ctx))","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"org.apache.catalina.loader.TestVirtualWebappLoader.testStartInternal()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"ctx.setResources(new StandardRoot(ctx))","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"org.apache.catalina.loader.TestVirtualWebappLoader.testStartInternal()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"ctx.setResources(new FileDirContext())","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"EXT_S","local":"org.apache.catalina.loader.TestVirtualWebappLoader.testStartInternal()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"ctx.setResources(new FileDirContext())","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":false,"scope":"EXT_S","local":"org.apache.catalina.loader.TestVirtualWebappLoader.testStartInternal()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"EXPRESSION_STATEMENT","change":"ctxt.setResources(new StandardRoot(ctxt))","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"org.apache.jasper.compiler.TestGenerator.testBug48701Fail()"}
{"project":"apache_tomcat","commit":"527baba1736d3111596fb19dba367460fdb2808c","changeType":"METHOD_INVOCATION","change":"ctxt.setResources(new StandardRoot(ctxt))","source":"org.apache.catalina.loader.WebappClassLoader.setResources(DirContext)","target":"org.apache.catalina.core.StandardContext.setResources(WebResourceRoot)","added":true,"scope":"EXT_T","local":"org.apache.jasper.compiler.TestGenerator.testBug48701Fail()"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"CLASS_S","local":"java.org.apache.tomcat.util.http.CookieSupport"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"BOOLEAN_LITERAL","change":"false","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"BOOLEAN_LITERAL","change":"true","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"EXPRESSION_STATEMENT","change":"len--","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"EXPRESSION_STATEMENT","change":"i++","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"FOR_STATEMENT","change":"for (; i \u003c len; i++) {\n  char c\u003dvalue.charAt(i);\n  if (isV0Separator(c)) {\n    return true;\n  }\n}\n","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"IF_STATEMENT","change":"isV0Separator(c)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"IF_STATEMENT","change":"alreadyQuoted(value)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"IF_STATEMENT","change":"value \u003d\u003d null","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"i \u003c len","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"value \u003d\u003d null","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_INVOCATION","change":"isV0Separator(c)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_INVOCATION","change":"value.charAt(i)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_INVOCATION","change":"alreadyQuoted(value)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_INVOCATION","change":"value.length()","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"MODIFIER","change":"static","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"MODIFIER","change":"public","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"NULL_LITERAL","change":"null","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"POSTFIX_EXPRESSION","change":"i++","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"POSTFIX_EXPRESSION","change":"len--","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"PRIMITIVE_TYPE","change":"char","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"RETURN_STATEMENT","change":"return false;\n","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"RETURN_STATEMENT","change":"return true;\n","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String value","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"c","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"len","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"i","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"char [c\u003dvalue.charAt(i)]","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [len\u003dvalue.length()]","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [i\u003d0]","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"CLASS_T","local":"java.org.apache.tomcat.util.http.SetCookieSupport"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"BOOLEAN_LITERAL","change":"false","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"BOOLEAN_LITERAL","change":"true","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"EXPRESSION_STATEMENT","change":"len--","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"EXPRESSION_STATEMENT","change":"i++","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"FOR_STATEMENT","change":"for (; i \u003c len; i++) {\n  char c\u003dvalue.charAt(i);\n  if (CookieSupport.isV0Separator(c)) {\n    return true;\n  }\n}\n","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"IF_STATEMENT","change":"CookieSupport.isV0Separator(c)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"IF_STATEMENT","change":"alreadyQuoted(value)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"IF_STATEMENT","change":"value \u003d\u003d null","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"i \u003c len","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"value \u003d\u003d null","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_INVOCATION","change":"CookieSupport.isV0Separator(c)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_INVOCATION","change":"value.charAt(i)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_INVOCATION","change":"alreadyQuoted(value)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_INVOCATION","change":"value.length()","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"MODIFIER","change":"static","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"MODIFIER","change":"private","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"NULL_LITERAL","change":"null","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"POSTFIX_EXPRESSION","change":"i++","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"POSTFIX_EXPRESSION","change":"len--","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"PRIMITIVE_TYPE","change":"char","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"RETURN_STATEMENT","change":"return false;\n","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"RETURN_STATEMENT","change":"return true;\n","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String value","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"c","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"len","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"i","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"char [c\u003dvalue.charAt(i)]","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [len\u003dvalue.length()]","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [i\u003d0]","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"IF_STATEMENT","change":"isHttpToken(value) \u0026\u0026 !CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 || isV0Token(value) \u0026\u0026 CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.maybeQuote(StringBuffer,String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"isV0Token(value) \u0026\u0026 CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.maybeQuote(StringBuffer,String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"isHttpToken(value) \u0026\u0026 !CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 || isV0Token(value) \u0026\u0026 CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.maybeQuote(StringBuffer,String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_INVOCATION","change":"isV0Token(value)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.maybeQuote(StringBuffer,String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"IF_STATEMENT","change":"CookieSupport.isHttpToken(value) \u0026\u0026 !CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 || CookieSupport.isV0Token(value) \u0026\u0026 CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.maybeQuote(StringBuffer,String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"CookieSupport.isV0Token(value) \u0026\u0026 CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.maybeQuote(StringBuffer,String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"CookieSupport.isHttpToken(value) \u0026\u0026 !CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 || CookieSupport.isV0Token(value) \u0026\u0026 CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.maybeQuote(StringBuffer,String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_INVOCATION","change":"CookieSupport.isV0Token(value)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.maybeQuote(StringBuffer,String)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"IF_STATEMENT","change":"newVersion \u003d\u003d 0 \u0026\u0026 (!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isHttpToken(domain) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isV0Token(domain))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"IF_STATEMENT","change":"newVersion \u003d\u003d 0 \u0026\u0026 (!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isHttpToken(path) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isV0Token(path))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"IF_STATEMENT","change":"newVersion \u003d\u003d 0 \u0026\u0026 (!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isHttpToken(value) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isV0Token(value))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"newVersion \u003d\u003d 0 \u0026\u0026 (!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isHttpToken(domain) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isV0Token(domain))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isV0Token(domain)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isV0Token(value)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isV0Token(path)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"newVersion \u003d\u003d 0 \u0026\u0026 (!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isHttpToken(path) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isV0Token(path))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isHttpToken(path) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isV0Token(path)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"newVersion \u003d\u003d 0 \u0026\u0026 (!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isHttpToken(value) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isV0Token(value))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isHttpToken(domain) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isV0Token(domain)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isHttpToken(value) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isV0Token(value)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_INVOCATION","change":"isV0Token(domain)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_INVOCATION","change":"isV0Token(value)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_INVOCATION","change":"isV0Token(path)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"PARENTHESIZED_EXPRESSION","change":"(!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isHttpToken(value) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isV0Token(value))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"PARENTHESIZED_EXPRESSION","change":"(!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isHttpToken(domain) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isV0Token(domain))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"PARENTHESIZED_EXPRESSION","change":"(!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isHttpToken(path) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 isV0Token(path))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"IF_STATEMENT","change":"newVersion \u003d\u003d 0 \u0026\u0026 (!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isHttpToken(value) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isV0Token(value))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"IF_STATEMENT","change":"newVersion \u003d\u003d 0 \u0026\u0026 (!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isHttpToken(domain) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isV0Token(domain))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"IF_STATEMENT","change":"newVersion \u003d\u003d 0 \u0026\u0026 (!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isHttpToken(path) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isV0Token(path))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"newVersion \u003d\u003d 0 \u0026\u0026 (!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isHttpToken(value) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isV0Token(value))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isHttpToken(domain) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isV0Token(domain)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isV0Token(value)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isV0Token(domain)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isHttpToken(path) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isV0Token(path)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"newVersion \u003d\u003d 0 \u0026\u0026 (!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isHttpToken(domain) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isV0Token(domain))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"newVersion \u003d\u003d 0 \u0026\u0026 (!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isHttpToken(path) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isV0Token(path))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isV0Token(path)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"INFIX_EXPRESSION","change":"!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isHttpToken(value) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isV0Token(value)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_INVOCATION","change":"CookieSupport.isV0Token(domain)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_INVOCATION","change":"CookieSupport.isV0Token(value)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"METHOD_INVOCATION","change":"CookieSupport.isV0Token(path)","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"PARENTHESIZED_EXPRESSION","change":"(!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isHttpToken(domain) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isV0Token(domain))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"PARENTHESIZED_EXPRESSION","change":"(!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isHttpToken(value) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isV0Token(value))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"b5b7af2ae292f2e6b4759523e689f10e2deacde0","changeType":"PARENTHESIZED_EXPRESSION","change":"(!CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isHttpToken(path) || CookieSupport.ALLOW_HTTP_SEPARATORS_IN_V0 \u0026\u0026 CookieSupport.isV0Token(path))","source":"org.apache.tomcat.util.http.CookieSupport.isV0Token(String)","target":"org.apache.tomcat.util.http.SetCookieSupport.isV0Token(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.generateHeader(Cookie)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"ASSIGNMENT","change":"destinationPath \u003d UDecoder.URLDecode(destinationPath,\"UTF8\")","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":true,"scope":"EXT_T","local":"org.apache.catalina.servlets.WebdavServlet.copyResource(HttpServletRequest,HttpServletResponse)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"EXPRESSION_STATEMENT","change":"destinationPath\u003dUDecoder.URLDecode(destinationPath,\"UTF8\")","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":true,"scope":"EXT_T","local":"org.apache.catalina.servlets.WebdavServlet.copyResource(HttpServletRequest,HttpServletResponse)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"METHOD_INVOCATION","change":"UDecoder.URLDecode(destinationPath,\"UTF8\")","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":true,"scope":"EXT_T","local":"org.apache.catalina.servlets.WebdavServlet.copyResource(HttpServletRequest,HttpServletResponse)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"ASSIGNMENT","change":"destinationPath \u003d org.apache.catalina.util.RequestUtil.URLDecode(destinationPath,\"UTF8\")","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"EXT_S","local":"org.apache.catalina.servlets.WebdavServlet.copyResource(HttpServletRequest,HttpServletResponse)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"EXPRESSION_STATEMENT","change":"destinationPath\u003dorg.apache.catalina.util.RequestUtil.URLDecode(destinationPath,\"UTF8\")","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"EXT_S","local":"org.apache.catalina.servlets.WebdavServlet.copyResource(HttpServletRequest,HttpServletResponse)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"METHOD_INVOCATION","change":"org.apache.catalina.util.RequestUtil.URLDecode(destinationPath,\"UTF8\")","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"EXT_S","local":"org.apache.catalina.servlets.WebdavServlet.copyResource(HttpServletRequest,HttpServletResponse)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"CLASS_S","local":"java.org.apache.catalina.util.RequestUtil"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"BOOLEAN_LITERAL","change":"false","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"SOURCE","local":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"JAVADOC","change":"/** \n * Decode and return the specified URL-encoded String. It is assumed the string is not a query string.\n * @param str The url-encoded string\n * @param enc The encoding to use; if null, the default encoding is used. Ifan unsupported encoding is specified null will be returned\n * @exception IllegalArgumentException if a \u0027%\u0027 character is not followedby a valid 2-digit hexadecimal number\n */\n","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"SOURCE","local":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"METHOD_INVOCATION","change":"URLDecode(str,enc,false)","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"SOURCE","local":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"MODIFIER","change":"static","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"SOURCE","local":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"MODIFIER","change":"public","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"SOURCE","local":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"RETURN_STATEMENT","change":"return URLDecode(str,enc,false);\n","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"SOURCE","local":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"SOURCE","local":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String enc","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"SOURCE","local":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String str","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"SOURCE","local":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"METHOD_INVOCATION","change":"URLDecode(str,null)","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"SUR_S","local":"org.apache.catalina.util.RequestUtil.URLDecode(String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"RETURN_STATEMENT","change":"return URLDecode(str,null);\n","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"SUR_S","local":"org.apache.catalina.util.RequestUtil.URLDecode(String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":true,"scope":"CLASS_T","local":"java.org.apache.tomcat.util.buf.UDecoder"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"BOOLEAN_LITERAL","change":"false","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"JAVADOC","change":"/** \n * Decode and return the specified URL-encoded String. It is assumed the string is not a query string.\n * @param str The url-encoded string\n * @param enc The encoding to use; if null, the default encoding is used. Ifan unsupported encoding is specified null will be returned\n * @exception IllegalArgumentException if a \u0027%\u0027 character is not followedby a valid 2-digit hexadecimal number\n */\n","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"METHOD_INVOCATION","change":"URLDecode(str,enc,false)","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"MODIFIER","change":"static","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"MODIFIER","change":"public","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"RETURN_STATEMENT","change":"return URLDecode(str,enc,false);\n","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String enc","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String str","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"METHOD_INVOCATION","change":"URLDecode(str,null)","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"RETURN_STATEMENT","change":"return URLDecode(str,null);\n","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String)"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"METHOD_INVOCATION","change":"RequestUtil.URLDecode(\"xx%41xx\",\"ISO-8859-1\")","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"EXT_S","local":"org.apache.catalina.util.TestRequestUtil.testURLDecodeStringValidIso88591Middle()"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [result\u003dRequestUtil.URLDecode(\"xx%41xx\",\"ISO-8859-1\")]","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"EXT_S","local":"org.apache.catalina.util.TestRequestUtil.testURLDecodeStringValidIso88591Middle()"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"METHOD_INVOCATION","change":"RequestUtil.URLDecode(\"%c3%aaxxxx\",\"UTF-8\")","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"EXT_S","local":"org.apache.catalina.util.TestRequestUtil.testURLDecodeStringValidUtf8Start()"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [result\u003dRequestUtil.URLDecode(\"%c3%aaxxxx\",\"UTF-8\")]","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"EXT_S","local":"org.apache.catalina.util.TestRequestUtil.testURLDecodeStringValidUtf8Start()"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"METHOD_INVOCATION","change":"RequestUtil.URLDecode(\"xx%c3%aaxx\",\"UTF-8\")","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"EXT_S","local":"org.apache.catalina.util.TestRequestUtil.testURLDecodeStringValidUtf8Middle()"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [result\u003dRequestUtil.URLDecode(\"xx%c3%aaxx\",\"UTF-8\")]","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"EXT_S","local":"org.apache.catalina.util.TestRequestUtil.testURLDecodeStringValidUtf8Middle()"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"METHOD_INVOCATION","change":"RequestUtil.URLDecode(\"xxxx%c3%aa\",\"UTF-8\")","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"EXT_S","local":"org.apache.catalina.util.TestRequestUtil.testURLDecodeStringValidUtf8End()"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [result\u003dRequestUtil.URLDecode(\"xxxx%c3%aa\",\"UTF-8\")]","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"EXT_S","local":"org.apache.catalina.util.TestRequestUtil.testURLDecodeStringValidUtf8End()"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"METHOD_INVOCATION","change":"RequestUtil.URLDecode(\"xxxx%41\",\"ISO-8859-1\")","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"EXT_S","local":"org.apache.catalina.util.TestRequestUtil.testURLDecodeStringValidIso88591End()"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [result\u003dRequestUtil.URLDecode(\"xxxx%41\",\"ISO-8859-1\")]","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"EXT_S","local":"org.apache.catalina.util.TestRequestUtil.testURLDecodeStringValidIso88591End()"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"METHOD_INVOCATION","change":"RequestUtil.URLDecode(\"%41xxxx\",\"ISO-8859-1\")","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"EXT_S","local":"org.apache.catalina.util.TestRequestUtil.testURLDecodeStringValidIso88591Start()"}
{"project":"apache_tomcat","commit":"42d5e8214de2899e2878feb76fce25e4653b6387","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [result\u003dRequestUtil.URLDecode(\"%41xxxx\",\"ISO-8859-1\")]","source":"org.apache.catalina.util.RequestUtil.URLDecode(String,String)","target":"org.apache.tomcat.util.buf.UDecoder.URLDecode(String,String)","added":false,"scope":"EXT_S","local":"org.apache.catalina.util.TestRequestUtil.testURLDecodeStringValidIso88591Start()"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"ASSIGNMENT","change":"bindings \u003d altBindings","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"ASSIGNMENT","change":"altBindings \u003d ((BaseDirContext)altDirContext).doListBindings(\"/META-INF/resources\" + name)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"CAST_EXPRESSION","change":"(BaseDirContext)altDirContext","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"CLASS_INSTANCE_CREATION","change":"new NamingContextEnumeration(bindings.iterator())","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"CLASS_INSTANCE_CREATION","change":"new NameNotFoundException(sm.getString(\"resources.notFound\",name))","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"ENHANCED_FOR_STATEMENT","change":"for (DirContext altDirContext : altDirContexts) {\n  if (altDirContext instanceof BaseDirContext) {\n    altBindings\u003d((BaseDirContext)altDirContext).doListBindings(\"/META-INF/resources\" + name);\n  }\n  if (altBindings !\u003d null) {\n    if (bindings \u003d\u003d null) {\n      bindings\u003daltBindings;\n    }\n else {\n      bindings.addAll(altBindings);\n    }\n  }\n}\n","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"EXPRESSION_STATEMENT","change":"bindings.addAll(altBindings)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"EXPRESSION_STATEMENT","change":"altBindings\u003d((BaseDirContext)altDirContext).doListBindings(\"/META-INF/resources\" + name)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"EXPRESSION_STATEMENT","change":"bindings\u003daltBindings","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"IF_STATEMENT","change":"result.dirContext !\u003d null","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"IF_STATEMENT","change":"!aliases.isEmpty()","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"IF_STATEMENT","change":"bindings !\u003d null","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"IF_STATEMENT","change":"altBindings !\u003d null","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"IF_STATEMENT","change":"altDirContext instanceof BaseDirContext","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"IF_STATEMENT","change":"bindings \u003d\u003d null","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"INFIX_EXPRESSION","change":"\"/META-INF/resources\" + name","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"INFIX_EXPRESSION","change":"result.dirContext !\u003d null","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"INFIX_EXPRESSION","change":"bindings !\u003d null","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"INFIX_EXPRESSION","change":"altBindings !\u003d null","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"INFIX_EXPRESSION","change":"bindings \u003d\u003d null","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"INSTANCEOF_EXPRESSION","change":"altDirContext instanceof BaseDirContext","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"bindings.addAll(altBindings)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"result.dirContext.list(result.aliasName)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"aliases.isEmpty()","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"bindings.iterator()","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"((BaseDirContext)altDirContext).doListBindings(\"/META-INF/resources\" + name)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"doListBindings(name)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"findAlias(name)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"sm.getString(\"resources.notFound\",name)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"MODIFIER","change":"final","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"NULL_LITERAL","change":"null","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"PARAMETERIZED_TYPE","change":"List\u003cNamingEntry\u003e","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"PARENTHESIZED_EXPRESSION","change":"((BaseDirContext)altDirContext)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"PREFIX_EXPRESSION","change":"!aliases.isEmpty()","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"QUALIFIED_NAME","change":"result.aliasName","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"QUALIFIED_NAME","change":"result.dirContext","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"RETURN_STATEMENT","change":"return result.dirContext.list(result.aliasName);\n","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"RETURN_STATEMENT","change":"return new NamingContextEnumeration(bindings.iterator());\n","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"SIMPLE_TYPE","change":"AliasResult","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"SIMPLE_TYPE","change":"NameNotFoundException","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"SIMPLE_TYPE","change":"NamingContextEnumeration","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"SIMPLE_TYPE","change":"BaseDirContext","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"SIMPLE_TYPE","change":"List","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"SIMPLE_TYPE","change":"DirContext","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"SIMPLE_TYPE","change":"NamingEntry","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"SINGLE_VARIABLE_DECLARATION","change":"DirContext altDirContext","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"STRING_LITERAL","change":"resources.notFound","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"STRING_LITERAL","change":"/META-INF/resources","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"THROW_STATEMENT","change":"throw new NameNotFoundException(sm.getString(\"resources.notFound\",name));\n","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"result","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"bindings","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"altBindings","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"List\u003cNamingEntry\u003e [altBindings\u003dnull]","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"List\u003cNamingEntry\u003e [bindings\u003ddoListBindings(name)]","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"AliasResult [result\u003dfindAlias(name)]","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":true,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"MODIFIER","change":"abstract","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"TARGET","local":"org.apache.naming.resources.BaseDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_DECLARATION","change":"org.apache.naming.resources.FileDirContext.list(String)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"EXT_S","local":"java.org.apache.naming.resources.FileDirContext"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"CLASS_INSTANCE_CREATION","change":"new NamingContextEnumeration(list(file).iterator())","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"EXT_S","local":"org.apache.naming.resources.FileDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"list(file)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"EXT_S","local":"org.apache.naming.resources.FileDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"list(file).iterator()","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"EXT_S","local":"org.apache.naming.resources.FileDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"RETURN_STATEMENT","change":"return new NamingContextEnumeration(list(file).iterator());\n","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"EXT_S","local":"org.apache.naming.resources.FileDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_DECLARATION","change":"org.apache.naming.resources.WARDirContext.list(Name)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"CLASS_S","local":"java.org.apache.naming.resources.WARDirContext"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_DECLARATION","change":"org.apache.naming.resources.WARDirContext.list(String)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"EXT_S","local":"java.org.apache.naming.resources.WARDirContext"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"CLASS_INSTANCE_CREATION","change":"new NamingContextEnumeration(list(entry).iterator())","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"CLASS_INSTANCE_CREATION","change":"new NameNotFoundException(sm.getString(\"resources.notFound\",name))","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"CLASS_INSTANCE_CREATION","change":"new NamingContextEnumeration(list(entries).iterator())","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"IF_STATEMENT","change":"entry \u003d\u003d null","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"IF_STATEMENT","change":"name.isEmpty()","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"INFIX_EXPRESSION","change":"entry \u003d\u003d null","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"JAVADOC","change":"/** \n * Enumerates the names bound in the named context, along with the class names of objects bound to them. The contents of any subcontexts are not included. \u003cp\u003e If a binding is added to or removed from this context, its effect on an enumeration previously returned is undefined.\n * @param name the name of the context to list\n * @return an enumeration of the names and class names of the bindings inthis context. Each element of the enumeration is of type NameClassPair.\n * @exception NamingException if a naming exception is encountered\n */\n","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"MARKER_ANNOTATION","change":"@Override","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"list(entry)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"list(entry).iterator()","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"sm.getString(\"resources.notFound\",name)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"treeLookup(name)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"list(entries)","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"list(entries).iterator()","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"name.isEmpty()","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"MODIFIER","change":"public","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"NULL_LITERAL","change":"null","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"PARAMETERIZED_TYPE","change":"NamingEnumeration\u003cNameClassPair\u003e","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"RETURN_STATEMENT","change":"return new NamingContextEnumeration(list(entry).iterator());\n","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"RETURN_STATEMENT","change":"return new NamingContextEnumeration(list(entries).iterator());\n","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"SIMPLE_TYPE","change":"NamingContextEnumeration","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"SIMPLE_TYPE","change":"NameNotFoundException","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"SIMPLE_TYPE","change":"Entry","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"SIMPLE_TYPE","change":"NamingException","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"SIMPLE_TYPE","change":"Name","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"SIMPLE_TYPE","change":"NameClassPair","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"SIMPLE_TYPE","change":"NamingEnumeration","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Name name","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"STRING_LITERAL","change":"resources.notFound","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"THROW_STATEMENT","change":"throw new NameNotFoundException(sm.getString(\"resources.notFound\",name));\n","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"entry","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Entry [entry\u003dtreeLookup(name)]","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"SOURCE","local":"org.apache.naming.resources.WARDirContext.list(Name)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"METHOD_INVOCATION","change":"list(getEscapedJndiName(name))","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"EXT_S","local":"org.apache.naming.resources.WARDirContext.list(String)"}
{"project":"apache_tomcat","commit":"a3e0f09ab8caf310bb97eff9affe514b88f82946","changeType":"RETURN_STATEMENT","change":"return list(getEscapedJndiName(name));\n","source":"org.apache.naming.resources.WARDirContext.list(Name)","target":"org.apache.naming.resources.BaseDirContext.list(String)","added":false,"scope":"EXT_S","local":"org.apache.naming.resources.WARDirContext.list(String)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":true,"scope":"CLASS_T","local":"java.org.apache.tomcat.websocket.Util"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"CAST_EXPRESSION","change":"(Class\u003c?\u003e)Util.getGenericType(MessageHandler.class,listener.getClass())","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_INVOCATION","change":"listener.getClass()","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_INVOCATION","change":"Util.getGenericType(MessageHandler.class,listener.getClass())","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"MODIFIER","change":"static","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"PARAMETERIZED_TYPE","change":"Class\u003c?\u003e","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"RETURN_STATEMENT","change":"return (Class\u003c?\u003e)Util.getGenericType(MessageHandler.class,listener.getClass());\n","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"SIMPLE_TYPE","change":"MessageHandler","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"SIMPLE_TYPE","change":"Class","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"SINGLE_VARIABLE_DECLARATION","change":"MessageHandler listener","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"TYPE_LITERAL","change":"MessageHandler","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"WILDCARD_TYPE","change":"?","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"CLASS_S","local":"java.org.apache.tomcat.websocket.WsSession"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"CAST_EXPRESSION","change":"(Class\u003c?\u003e)getGenericType(listener.getClass())","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_INVOCATION","change":"listener.getClass()","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_INVOCATION","change":"getGenericType(listener.getClass())","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"MODIFIER","change":"static","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"MODIFIER","change":"protected","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"PARAMETERIZED_TYPE","change":"Class\u003c?\u003e","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"RETURN_STATEMENT","change":"return (Class\u003c?\u003e)getGenericType(listener.getClass());\n","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"SIMPLE_TYPE","change":"Class","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"SIMPLE_TYPE","change":"MessageHandler","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"SINGLE_VARIABLE_DECLARATION","change":"MessageHandler listener","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"WILDCARD_TYPE","change":"?","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_INVOCATION","change":"Util.getMessageType(listener)","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.websocket.WsSession.addMessageHandler(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Type [t\u003dUtil.getMessageType(listener)]","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.websocket.WsSession.addMessageHandler(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_INVOCATION","change":"getMessageType(listener)","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.WsSession.addMessageHandler(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Type [t\u003dgetMessageType(listener)]","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.WsSession.addMessageHandler(MessageHandler)"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"EXPRESSION_STATEMENT","change":"Assert.assertEquals(String.class,WsSession.getMessageType(new Simple()))","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.TestWsSession.testGetMessageTypeSimple()"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_INVOCATION","change":"WsSession.getMessageType(new Simple())","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.TestWsSession.testGetMessageTypeSimple()"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_INVOCATION","change":"Assert.assertEquals(String.class,WsSession.getMessageType(new Simple()))","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.TestWsSession.testGetMessageTypeSimple()"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"EXPRESSION_STATEMENT","change":"Assert.assertEquals(String.class,WsSession.getMessageType(new GenericMultipleSubSubSwap()))","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.TestWsSession.testGetMessageTypeGenericMultipleSubclassSwap()"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_INVOCATION","change":"WsSession.getMessageType(new GenericMultipleSubSubSwap())","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.TestWsSession.testGetMessageTypeGenericMultipleSubclassSwap()"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_INVOCATION","change":"Assert.assertEquals(String.class,WsSession.getMessageType(new GenericMultipleSubSubSwap()))","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.TestWsSession.testGetMessageTypeGenericMultipleSubclassSwap()"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"EXPRESSION_STATEMENT","change":"Assert.assertEquals(String.class,WsSession.getMessageType(new GenericSub()))","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.TestWsSession.testGetMessageTypeGenericSubclass()"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_INVOCATION","change":"WsSession.getMessageType(new GenericSub())","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.TestWsSession.testGetMessageTypeGenericSubclass()"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_INVOCATION","change":"Assert.assertEquals(String.class,WsSession.getMessageType(new GenericSub()))","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.TestWsSession.testGetMessageTypeGenericSubclass()"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"EXPRESSION_STATEMENT","change":"Assert.assertEquals(String.class,WsSession.getMessageType(new SubSimple()))","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.TestWsSession.testGetMessageTypeSubclass()"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_INVOCATION","change":"WsSession.getMessageType(new SubSimple())","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.TestWsSession.testGetMessageTypeSubclass()"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_INVOCATION","change":"Assert.assertEquals(String.class,WsSession.getMessageType(new SubSimple()))","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.TestWsSession.testGetMessageTypeSubclass()"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"EXPRESSION_STATEMENT","change":"Assert.assertEquals(String.class,WsSession.getMessageType(new GenericMultipleSubSub()))","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.TestWsSession.testGetMessageTypeGenericMultipleSubclass()"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_INVOCATION","change":"WsSession.getMessageType(new GenericMultipleSubSub())","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.TestWsSession.testGetMessageTypeGenericMultipleSubclass()"}
{"project":"apache_tomcat","commit":"3868d918b53480592de759fa48e9e4882303c0e5","changeType":"METHOD_INVOCATION","change":"Assert.assertEquals(String.class,WsSession.getMessageType(new GenericMultipleSubSub()))","source":"org.apache.tomcat.websocket.WsSession.getMessageType(MessageHandler)","target":"org.apache.tomcat.websocket.Util.getMessageType(MessageHandler)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.TestWsSession.testGetMessageTypeGenericMultipleSubclass()"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_DECLARATION","change":"javax.el.BeanELResolver.getMethod(Class,Method)","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"CLASS_S","local":"javax.el.BeanELResolver"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ARRAY_ACCESS","change":"inf[i]","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ARRAY_TYPE","change":"Class\u003c?\u003e[]","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ASSIGNMENT","change":"mp \u003d getMethod(mp.getDeclaringClass(),mp)","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ASSIGNMENT","change":"mp \u003d sup.getMethod(m.getName(),m.getParameterTypes())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ASSIGNMENT","change":"mp \u003d inf[i].getMethod(m.getName(),m.getParameterTypes())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"CATCH_CLAUSE","change":"catch (NoSuchMethodException e) {\n}\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"DIMENSION","change":"[]","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"EXPRESSION_STATEMENT","change":"mp\u003dgetMethod(mp.getDeclaringClass(),mp)","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"EXPRESSION_STATEMENT","change":"mp\u003dsup.getMethod(m.getName(),m.getParameterTypes())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"EXPRESSION_STATEMENT","change":"mp\u003dinf[i].getMethod(m.getName(),m.getParameterTypes())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"FIELD_DECLARATION","change":"private final Map\u003cK,V\u003e longterm;\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"FIELD_DECLARATION","change":"private final Map\u003cK,V\u003e eden;\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"FIELD_DECLARATION","change":"private final int size;\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"FOR_STATEMENT","change":"for (int i\u003d0; i \u003c inf.length; i++) {\n  try {\n    mp\u003dinf[i].getMethod(m.getName(),m.getParameterTypes());\n    mp\u003dgetMethod(mp.getDeclaringClass(),mp);\n    if (mp !\u003d null) {\n      return mp;\n    }\n  }\n catch (  NoSuchMethodException e) {\n  }\n}\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"IF_STATEMENT","change":"mp !\u003d null","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"IF_STATEMENT","change":"sup !\u003d null","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"IF_STATEMENT","change":"m \u003d\u003d null || Modifier.isPublic(type.getModifiers())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"INFIX_EXPRESSION","change":"mp !\u003d null","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"INFIX_EXPRESSION","change":"sup !\u003d null","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"INFIX_EXPRESSION","change":"i \u003c inf.length","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"INFIX_EXPRESSION","change":"m \u003d\u003d null","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"INFIX_EXPRESSION","change":"m \u003d\u003d null || Modifier.isPublic(type.getModifiers())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"mp.getDeclaringClass()","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"getMethod(mp.getDeclaringClass(),mp)","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"m.getParameterTypes()","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"m.getName()","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"sup.getMethod(m.getName(),m.getParameterTypes())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"type.getSuperclass()","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"inf[i].getMethod(m.getName(),m.getParameterTypes())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"type.getInterfaces()","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"type.getModifiers()","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"Modifier.isPublic(type.getModifiers())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"MODIFIER","change":"final","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"MODIFIER","change":"private","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"MODIFIER","change":"static","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"NULL_LITERAL","change":"null","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"NUMBER_LITERAL","change":"0","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"PARAMETERIZED_TYPE","change":"Map\u003cK,V\u003e","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"PARAMETERIZED_TYPE","change":"Class\u003c?\u003e","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"POSTFIX_EXPRESSION","change":"i++","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"PRIMITIVE_TYPE","change":"int","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"QUALIFIED_NAME","change":"inf.length","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"RETURN_STATEMENT","change":"return null;\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"RETURN_STATEMENT","change":"return mp;\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"RETURN_STATEMENT","change":"return m;\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"SIMPLE_TYPE","change":"V","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"SIMPLE_TYPE","change":"K","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"SIMPLE_TYPE","change":"Map","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"SIMPLE_TYPE","change":"NoSuchMethodException","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"SIMPLE_TYPE","change":"Class","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"SIMPLE_TYPE","change":"Method","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"SINGLE_VARIABLE_DECLARATION","change":"NoSuchMethodException e","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Method m","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Class\u003c?\u003e type","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"TRY_STATEMENT","change":"try {\n  mp\u003dsup.getMethod(m.getName(),m.getParameterTypes());\n  mp\u003dgetMethod(mp.getDeclaringClass(),mp);\n  if (mp !\u003d null) {\n    return mp;\n  }\n}\n catch (NoSuchMethodException e) {\n}\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"TRY_STATEMENT","change":"try {\n  mp\u003dinf[i].getMethod(m.getName(),m.getParameterTypes());\n  mp\u003dgetMethod(mp.getDeclaringClass(),mp);\n  if (mp !\u003d null) {\n    return mp;\n  }\n}\n catch (NoSuchMethodException e) {\n}\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"TYPE_DECLARATION","change":"ConcurrentCache","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"TYPE_PARAMETER","change":"V","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"TYPE_PARAMETER","change":"K","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_EXPRESSION","change":"int [i\u003d0]","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"longterm","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"eden","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"size","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"sup","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"i","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"mp","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"inf","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Class\u003c?\u003e [sup\u003dtype.getSuperclass()]","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Method [mp\u003dnull]","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Class\u003c?\u003e[] [inf\u003dtype.getInterfaces()]","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"WILDCARD_TYPE","change":"?","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SOURCE","local":"javax.el.BeanELResolver.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ASSIGNMENT","change":"this.write \u003d Util.getMethod(this.owner,descriptor.getWriteMethod())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"SUR_T","local":"javax.el.BeanELResolver.isReadOnly()"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"INFIX_EXPRESSION","change":"this.write \u003d\u003d null \u0026\u0026 (null \u003d\u003d (this.write\u003dUtil.getMethod(this.owner,descriptor.getWriteMethod())))","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"SUR_T","local":"javax.el.BeanELResolver.isReadOnly()"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"INFIX_EXPRESSION","change":"null \u003d\u003d (this.write\u003dUtil.getMethod(this.owner,descriptor.getWriteMethod()))","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"SUR_T","local":"javax.el.BeanELResolver.isReadOnly()"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"Util.getMethod(this.owner,descriptor.getWriteMethod())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"SUR_T","local":"javax.el.BeanELResolver.isReadOnly()"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"PARENTHESIZED_EXPRESSION","change":"(this.write\u003dUtil.getMethod(this.owner,descriptor.getWriteMethod()))","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"SUR_T","local":"javax.el.BeanELResolver.isReadOnly()"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"PARENTHESIZED_EXPRESSION","change":"(null \u003d\u003d (this.write\u003dUtil.getMethod(this.owner,descriptor.getWriteMethod())))","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"SUR_T","local":"javax.el.BeanELResolver.isReadOnly()"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"RETURN_STATEMENT","change":"return this.write \u003d\u003d null \u0026\u0026 (null \u003d\u003d (this.write\u003dUtil.getMethod(this.owner,descriptor.getWriteMethod())));\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"SUR_T","local":"javax.el.BeanELResolver.isReadOnly()"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ASSIGNMENT","change":"this.write \u003d getMethod(this.owner,descriptor.getWriteMethod())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.isReadOnly()"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"INFIX_EXPRESSION","change":"null \u003d\u003d (this.write\u003dgetMethod(this.owner,descriptor.getWriteMethod()))","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.isReadOnly()"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"INFIX_EXPRESSION","change":"this.write \u003d\u003d null \u0026\u0026 (null \u003d\u003d (this.write\u003dgetMethod(this.owner,descriptor.getWriteMethod())))","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.isReadOnly()"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"getMethod(this.owner,descriptor.getWriteMethod())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.isReadOnly()"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"PARENTHESIZED_EXPRESSION","change":"(null \u003d\u003d (this.write\u003dgetMethod(this.owner,descriptor.getWriteMethod())))","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.isReadOnly()"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"PARENTHESIZED_EXPRESSION","change":"(this.write\u003dgetMethod(this.owner,descriptor.getWriteMethod()))","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.isReadOnly()"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"RETURN_STATEMENT","change":"return this.write \u003d\u003d null \u0026\u0026 (null \u003d\u003d (this.write\u003dgetMethod(this.owner,descriptor.getWriteMethod())));\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.isReadOnly()"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ASSIGNMENT","change":"this.write \u003d Util.getMethod(this.owner,descriptor.getWriteMethod())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"SUR_T","local":"javax.el.BeanELResolver.write(ELContext)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"EXPRESSION_STATEMENT","change":"this.write\u003dUtil.getMethod(this.owner,descriptor.getWriteMethod())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"SUR_T","local":"javax.el.BeanELResolver.write(ELContext)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"Util.getMethod(this.owner,descriptor.getWriteMethod())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"SUR_T","local":"javax.el.BeanELResolver.write(ELContext)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ASSIGNMENT","change":"this.write \u003d getMethod(this.owner,descriptor.getWriteMethod())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.write(ELContext)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"EXPRESSION_STATEMENT","change":"this.write\u003dgetMethod(this.owner,descriptor.getWriteMethod())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.write(ELContext)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"getMethod(this.owner,descriptor.getWriteMethod())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.write(ELContext)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ASSIGNMENT","change":"this.read \u003d Util.getMethod(this.owner,descriptor.getReadMethod())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"SUR_T","local":"javax.el.BeanELResolver.read(ELContext)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"EXPRESSION_STATEMENT","change":"this.read\u003dUtil.getMethod(this.owner,descriptor.getReadMethod())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"SUR_T","local":"javax.el.BeanELResolver.read(ELContext)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"Util.getMethod(this.owner,descriptor.getReadMethod())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"SUR_T","local":"javax.el.BeanELResolver.read(ELContext)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ASSIGNMENT","change":"this.read \u003d getMethod(this.owner,descriptor.getReadMethod())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.read(ELContext)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"EXPRESSION_STATEMENT","change":"this.read\u003dgetMethod(this.owner,descriptor.getReadMethod())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.read(ELContext)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"getMethod(this.owner,descriptor.getReadMethod())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.read(ELContext)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ASSIGNMENT","change":"matchingMethod \u003d getMethod(clazz,m)","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.invoke(ELContext,Object,Object,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ASSIGNMENT","change":"matchingMethod \u003d getMethod(clazz,clazz.getMethod(methodName,paramTypes))","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.invoke(ELContext,Object,Object,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ENHANCED_FOR_STATEMENT","change":"for (Method m : methods) {\n  if (methodName.equals(m.getName())) {\n    if (m.getParameterTypes().length \u003d\u003d paramCount) {\n      matchingMethod\u003dgetMethod(clazz,m);\n      break;\n    }\n    if (m.isVarArgs() \u0026\u0026 paramCount \u003e m.getParameterTypes().length - 2) {\n      matchingMethod\u003dgetMethod(clazz,m);\n    }\n  }\n}\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.invoke(ELContext,Object,Object,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"EXPRESSION_STATEMENT","change":"matchingMethod\u003dgetMethod(clazz,clazz.getMethod(methodName,paramTypes))","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.invoke(ELContext,Object,Object,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"EXPRESSION_STATEMENT","change":"matchingMethod\u003dgetMethod(clazz,m)","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.invoke(ELContext,Object,Object,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"getMethod(clazz,m)","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.invoke(ELContext,Object,Object,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"getMethod(clazz,clazz.getMethod(methodName,paramTypes))","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.invoke(ELContext,Object,Object,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"clazz.getMethod(methodName,paramTypes)","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.invoke(ELContext,Object,Object,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"TRY_STATEMENT","change":"try {\n  matchingMethod\u003dgetMethod(clazz,clazz.getMethod(methodName,paramTypes));\n}\n catch (NoSuchMethodException e) {\n  throw new MethodNotFoundException(e);\n}\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":false,"scope":"SUR_S","local":"javax.el.BeanELResolver.invoke(ELContext,Object,Object,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_DECLARATION","change":"javax.el.Util.getMethod(Class,Method)","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"CLASS_T","local":"javax.el.Util"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ARRAY_ACCESS","change":"inf[i]","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ARRAY_TYPE","change":"Class\u003c?\u003e[]","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ASSIGNMENT","change":"mp \u003d getMethod(mp.getDeclaringClass(),mp)","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ASSIGNMENT","change":"mp \u003d sup.getMethod(m.getName(),m.getParameterTypes())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ASSIGNMENT","change":"mp \u003d inf[i].getMethod(m.getName(),m.getParameterTypes())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"CATCH_CLAUSE","change":"catch (NoSuchMethodException e) {\n}\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"DIMENSION","change":"[]","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"EXPRESSION_STATEMENT","change":"mp\u003dgetMethod(mp.getDeclaringClass(),mp)","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"EXPRESSION_STATEMENT","change":"mp\u003dsup.getMethod(m.getName(),m.getParameterTypes())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"EXPRESSION_STATEMENT","change":"mp\u003dinf[i].getMethod(m.getName(),m.getParameterTypes())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"FOR_STATEMENT","change":"for (int i\u003d0; i \u003c inf.length; i++) {\n  try {\n    mp\u003dinf[i].getMethod(m.getName(),m.getParameterTypes());\n    mp\u003dgetMethod(mp.getDeclaringClass(),mp);\n    if (mp !\u003d null) {\n      return mp;\n    }\n  }\n catch (  NoSuchMethodException e) {\n  }\n}\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"IF_STATEMENT","change":"mp !\u003d null","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"IF_STATEMENT","change":"sup !\u003d null","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"IF_STATEMENT","change":"m \u003d\u003d null || Modifier.isPublic(type.getModifiers())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"INFIX_EXPRESSION","change":"mp !\u003d null","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"INFIX_EXPRESSION","change":"sup !\u003d null","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"INFIX_EXPRESSION","change":"i \u003c inf.length","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"INFIX_EXPRESSION","change":"m \u003d\u003d null","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"INFIX_EXPRESSION","change":"m \u003d\u003d null || Modifier.isPublic(type.getModifiers())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"mp.getDeclaringClass()","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"getMethod(mp.getDeclaringClass(),mp)","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"m.getParameterTypes()","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"m.getName()","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"sup.getMethod(m.getName(),m.getParameterTypes())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"type.getSuperclass()","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"inf[i].getMethod(m.getName(),m.getParameterTypes())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"type.getInterfaces()","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"type.getModifiers()","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"Modifier.isPublic(type.getModifiers())","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"MODIFIER","change":"static","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"NULL_LITERAL","change":"null","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"NUMBER_LITERAL","change":"0","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"PARAMETERIZED_TYPE","change":"Class\u003c?\u003e","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"POSTFIX_EXPRESSION","change":"i++","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"PRIMITIVE_TYPE","change":"int","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"QUALIFIED_NAME","change":"inf.length","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"RETURN_STATEMENT","change":"return null;\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"RETURN_STATEMENT","change":"return mp;\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"RETURN_STATEMENT","change":"return m;\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"SIMPLE_TYPE","change":"NoSuchMethodException","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"SIMPLE_TYPE","change":"Class","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"SIMPLE_TYPE","change":"Method","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"SINGLE_VARIABLE_DECLARATION","change":"NoSuchMethodException e","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Method m","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Class\u003c?\u003e type","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"TRY_STATEMENT","change":"try {\n  mp\u003dsup.getMethod(m.getName(),m.getParameterTypes());\n  mp\u003dgetMethod(mp.getDeclaringClass(),mp);\n  if (mp !\u003d null) {\n    return mp;\n  }\n}\n catch (NoSuchMethodException e) {\n}\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"TRY_STATEMENT","change":"try {\n  mp\u003dinf[i].getMethod(m.getName(),m.getParameterTypes());\n  mp\u003dgetMethod(mp.getDeclaringClass(),mp);\n  if (mp !\u003d null) {\n    return mp;\n  }\n}\n catch (NoSuchMethodException e) {\n}\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_EXPRESSION","change":"int [i\u003d0]","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"sup","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"i","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"mp","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"inf","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Class\u003c?\u003e [sup\u003dtype.getSuperclass()]","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Method [mp\u003dnull]","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Class\u003c?\u003e[] [inf\u003dtype.getInterfaces()]","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"WILDCARD_TYPE","change":"?","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"TARGET","local":"javax.el.Util.getMethod(Class,Method)"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ASSIGNMENT","change":"matchingMethod \u003d getMethod(clazz,m)","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"EXT_T","local":"javax.el.Util.findMethod(Object,String,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ASSIGNMENT","change":"matchingMethod \u003d getMethod(clazz,clazz.getMethod(methodName,paramTypes))","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"EXT_T","local":"javax.el.Util.findMethod(Object,String,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"ENHANCED_FOR_STATEMENT","change":"for (Method m : methods) {\n  if (methodName.equals(m.getName())) {\n    if (m.getParameterTypes().length \u003d\u003d paramCount) {\n      matchingMethod\u003dgetMethod(clazz,m);\n      break;\n    }\n    if (m.isVarArgs() \u0026\u0026 paramCount \u003e m.getParameterTypes().length - 2) {\n      matchingMethod\u003dgetMethod(clazz,m);\n    }\n  }\n}\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"EXT_T","local":"javax.el.Util.findMethod(Object,String,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"EXPRESSION_STATEMENT","change":"matchingMethod\u003dgetMethod(clazz,m)","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"EXT_T","local":"javax.el.Util.findMethod(Object,String,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"EXPRESSION_STATEMENT","change":"matchingMethod\u003dgetMethod(clazz,clazz.getMethod(methodName,paramTypes))","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"EXT_T","local":"javax.el.Util.findMethod(Object,String,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"getMethod(clazz,m)","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"EXT_T","local":"javax.el.Util.findMethod(Object,String,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"clazz.getMethod(methodName,paramTypes)","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"EXT_T","local":"javax.el.Util.findMethod(Object,String,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"METHOD_INVOCATION","change":"getMethod(clazz,clazz.getMethod(methodName,paramTypes))","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"EXT_T","local":"javax.el.Util.findMethod(Object,String,Class[],Object[])"}
{"project":"apache_tomcat","commit":"50d59a8271aef4791735446aab6da4dd8b90721f","changeType":"TRY_STATEMENT","change":"try {\n  matchingMethod\u003dgetMethod(clazz,clazz.getMethod(methodName,paramTypes));\n}\n catch (NoSuchMethodException e) {\n  throw new MethodNotFoundException(e);\n}\n","source":"javax.el.BeanELResolver.getMethod(Class,Method)","target":"javax.el.Util.getMethod(Class,Method)","added":true,"scope":"EXT_T","local":"javax.el.Util.findMethod(Object,String,Class[],Object[])"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"CLASS_S","local":"java.org.apache.catalina.deploy.NamingResources"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"IF_STATEMENT","change":"clazz.equals(float.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"IF_STATEMENT","change":"clazz.equals(long.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"IF_STATEMENT","change":"clazz.equals(short.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"IF_STATEMENT","change":"clazz.equals(byte.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"IF_STATEMENT","change":"clazz.equals(double.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"IF_STATEMENT","change":"clazz.equals(boolean.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"IF_STATEMENT","change":"clazz.equals(int.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"IF_STATEMENT","change":"clazz.equals(char.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"clazz.equals(float.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"clazz.equals(long.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"clazz.equals(short.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"clazz.equals(byte.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"clazz.equals(double.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"clazz.equals(boolean.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"clazz.equals(int.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"clazz.equals(char.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"MODIFIER","change":"private","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PARAMETERIZED_TYPE","change":"Class\u003c?\u003e","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PRIMITIVE_TYPE","change":"float","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PRIMITIVE_TYPE","change":"long","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PRIMITIVE_TYPE","change":"short","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PRIMITIVE_TYPE","change":"byte","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PRIMITIVE_TYPE","change":"double","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PRIMITIVE_TYPE","change":"char","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return clazz;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Float.class;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Long.class;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Short.class;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Byte.class;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Double.class;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Boolean.class;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Integer.class;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Character.class;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Float","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Long","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Short","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Byte","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Double","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Boolean","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Integer","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Character","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Class","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Class\u003c?\u003e clazz","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"Float","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"float","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"Long","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"long","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"Short","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"short","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"Byte","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"byte","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"Double","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"double","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"Boolean","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"boolean","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"Integer","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"int","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"Character","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"char","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"WILDCARD_TYPE","change":"?","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SOURCE","local":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"ASSIGNMENT","change":"targetType \u003d Introspection.convertPrimitiveType(targetType)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"SUR_T","local":"org.apache.catalina.deploy.NamingResources.getCompatibleType(Context,ResourceBase,Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"ENHANCED_FOR_STATEMENT","change":"for (InjectionTarget injectionTarget : resource.getInjectionTargets()) {\n  Class\u003c?\u003e clazz\u003dIntrospection.loadClass(context,injectionTarget.getTargetClass());\n  if (clazz \u003d\u003d null) {\n    continue;\n  }\n  String targetName\u003dinjectionTarget.getTargetName();\n  Class\u003c?\u003e targetType\u003dgetSetterType(clazz,targetName);\n  if (targetType \u003d\u003d null) {\n    targetType\u003dgetFieldType(clazz,targetName);\n  }\n  if (targetType \u003d\u003d null) {\n    continue;\n  }\n  targetType\u003dIntrospection.convertPrimitiveType(targetType);\n  if (typeClass \u003d\u003d null) {\n    if (result \u003d\u003d null) {\n      result\u003dtargetType;\n    }\n else     if (targetType.isAssignableFrom(result)) {\n    }\n else     if (result.isAssignableFrom(targetType)) {\n      result\u003dtargetType;\n    }\n else {\n      return null;\n    }\n  }\n else {\n    if (targetType.isAssignableFrom(typeClass)) {\n      result\u003dtypeClass;\n    }\n else {\n      return null;\n    }\n  }\n}\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"SUR_T","local":"org.apache.catalina.deploy.NamingResources.getCompatibleType(Context,ResourceBase,Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"EXPRESSION_STATEMENT","change":"targetType\u003dIntrospection.convertPrimitiveType(targetType)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"SUR_T","local":"org.apache.catalina.deploy.NamingResources.getCompatibleType(Context,ResourceBase,Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"Introspection.convertPrimitiveType(targetType)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"SUR_T","local":"org.apache.catalina.deploy.NamingResources.getCompatibleType(Context,ResourceBase,Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"ASSIGNMENT","change":"targetType \u003d convertPrimitiveType(targetType)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SUR_S","local":"org.apache.catalina.deploy.NamingResources.getCompatibleType(Context,ResourceBase,Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"ENHANCED_FOR_STATEMENT","change":"for (InjectionTarget injectionTarget : resource.getInjectionTargets()) {\n  Class\u003c?\u003e clazz\u003dIntrospection.loadClass(context,injectionTarget.getTargetClass());\n  if (clazz \u003d\u003d null) {\n    continue;\n  }\n  String targetName\u003dinjectionTarget.getTargetName();\n  Class\u003c?\u003e targetType\u003dgetSetterType(clazz,targetName);\n  if (targetType \u003d\u003d null) {\n    targetType\u003dgetFieldType(clazz,targetName);\n  }\n  if (targetType \u003d\u003d null) {\n    continue;\n  }\n  targetType\u003dconvertPrimitiveType(targetType);\n  if (typeClass \u003d\u003d null) {\n    if (result \u003d\u003d null) {\n      result\u003dtargetType;\n    }\n else     if (targetType.isAssignableFrom(result)) {\n    }\n else     if (result.isAssignableFrom(targetType)) {\n      result\u003dtargetType;\n    }\n else {\n      return null;\n    }\n  }\n else {\n    if (targetType.isAssignableFrom(typeClass)) {\n      result\u003dtypeClass;\n    }\n else {\n      return null;\n    }\n  }\n}\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SUR_S","local":"org.apache.catalina.deploy.NamingResources.getCompatibleType(Context,ResourceBase,Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"EXPRESSION_STATEMENT","change":"targetType\u003dconvertPrimitiveType(targetType)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SUR_S","local":"org.apache.catalina.deploy.NamingResources.getCompatibleType(Context,ResourceBase,Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"convertPrimitiveType(targetType)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":false,"scope":"SUR_S","local":"org.apache.catalina.deploy.NamingResources.getCompatibleType(Context,ResourceBase,Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"Introspection.convertPrimitiveType(type)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"EXT_T","local":"org.apache.catalina.startup.WebAnnotationSet.getType(Resource,Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"Introspection.convertPrimitiveType(type).getCanonicalName()","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"EXT_T","local":"org.apache.catalina.startup.WebAnnotationSet.getType(Resource,Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Introspection.convertPrimitiveType(type).getCanonicalName();\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"EXT_T","local":"org.apache.catalina.startup.WebAnnotationSet.getType(Resource,Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_DECLARATION","change":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"CLASS_T","local":"java.org.apache.catalina.util.Introspection"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"IF_STATEMENT","change":"clazz.equals(float.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"IF_STATEMENT","change":"clazz.equals(long.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"IF_STATEMENT","change":"clazz.equals(short.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"IF_STATEMENT","change":"clazz.equals(byte.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"IF_STATEMENT","change":"clazz.equals(double.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"IF_STATEMENT","change":"clazz.equals(boolean.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"IF_STATEMENT","change":"clazz.equals(int.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"IF_STATEMENT","change":"clazz.equals(char.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"JAVADOC","change":"/** \n * Converts the primitive type to its corresponding wrapper.\n * @param clazz Class that will be evaluated\n * @return if the parameter is a primitive type returns its wrapper;otherwise returns the same class\n */\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"clazz.equals(float.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"clazz.equals(long.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"clazz.equals(short.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"clazz.equals(byte.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"clazz.equals(double.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"clazz.equals(boolean.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"clazz.equals(int.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"METHOD_INVOCATION","change":"clazz.equals(char.class)","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"MODIFIER","change":"static","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"MODIFIER","change":"public","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PARAMETERIZED_TYPE","change":"Class\u003c?\u003e","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PRIMITIVE_TYPE","change":"float","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PRIMITIVE_TYPE","change":"long","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PRIMITIVE_TYPE","change":"short","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PRIMITIVE_TYPE","change":"byte","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PRIMITIVE_TYPE","change":"double","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"PRIMITIVE_TYPE","change":"char","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return clazz;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Float.class;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Long.class;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Short.class;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Byte.class;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Double.class;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Boolean.class;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Integer.class;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"RETURN_STATEMENT","change":"return Character.class;\n","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Float","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Long","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Short","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Byte","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Double","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Boolean","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Integer","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Character","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SIMPLE_TYPE","change":"Class","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Class\u003c?\u003e clazz","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"Float","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"float","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"Long","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"long","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"Short","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"short","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"Byte","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"byte","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"Double","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"double","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"Boolean","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"boolean","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"Integer","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"int","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"Character","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"TYPE_LITERAL","change":"char","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"74f5b3aca9c1a2b3697f2a09ea77713705727818","changeType":"WILDCARD_TYPE","change":"?","source":"org.apache.catalina.deploy.NamingResources.convertPrimitiveType(Class)","target":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)","added":true,"scope":"TARGET","local":"org.apache.catalina.util.Introspection.convertPrimitiveType(Class)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"CLASS_T","local":"java.org.apache.tomcat.websocket.Util"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"CLASS_INSTANCE_CREATION","change":"new IllegalArgumentException(sm.getString(\"util.invalidType\",value,type.getName()))","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"type.equals(short.class) || type.equals(Short.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"type.equals(long.class) || type.equals(Long.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"type.equals(int.class) || type.equals(Integer.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"type.equals(float.class) || type.equals(Float.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"type.equals(double.class) || type.equals(Double.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"value.length() \u003d\u003d 1 \u0026\u0026 (type.equals(char.class) || type.equals(Character.class))","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"type.equals(byte.class) || type.equals(Byte.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"type.equals(boolean.class) || type.equals(Boolean.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"type.equals(String.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"type.equals(short.class) || type.equals(Short.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"type.equals(long.class) || type.equals(Long.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"type.equals(int.class) || type.equals(Integer.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"type.equals(float.class) || type.equals(Float.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"type.equals(double.class) || type.equals(Double.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"type.equals(char.class) || type.equals(Character.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"value.length() \u003d\u003d 1","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"value.length() \u003d\u003d 1 \u0026\u0026 (type.equals(char.class) || type.equals(Character.class))","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"type.equals(byte.class) || type.equals(Byte.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"type.equals(boolean.class) || type.equals(Boolean.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.getName()","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"sm.getString(\"util.invalidType\",value,type.getName())","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Short.valueOf(value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(Short.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(short.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Long.valueOf(value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(Long.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(long.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Integer.valueOf(value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(Integer.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(int.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Float.valueOf(value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(Float.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(float.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Double.valueOf(value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(Double.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(double.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"value.charAt(0)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Character.valueOf(value.charAt(0))","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(Character.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(char.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"value.length()","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Byte.valueOf(value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(Byte.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(byte.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Boolean.valueOf(value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(Boolean.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(boolean.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(String.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"MODIFIER","change":"static","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"MODIFIER","change":"public","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"NUMBER_LITERAL","change":"1","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PARAMETERIZED_TYPE","change":"Class\u003c?\u003e","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PARENTHESIZED_EXPRESSION","change":"(type.equals(char.class) || type.equals(Character.class))","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PRIMITIVE_TYPE","change":"short","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PRIMITIVE_TYPE","change":"long","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PRIMITIVE_TYPE","change":"float","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PRIMITIVE_TYPE","change":"double","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PRIMITIVE_TYPE","change":"char","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PRIMITIVE_TYPE","change":"byte","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Short.valueOf(value);\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Long.valueOf(value);\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Integer.valueOf(value);\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Float.valueOf(value);\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Double.valueOf(value);\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Character.valueOf(value.charAt(0));\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Byte.valueOf(value);\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Boolean.valueOf(value);\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return value;\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"IllegalArgumentException","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Short","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Long","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Integer","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Float","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Double","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Character","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Byte","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Boolean","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Class","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Object","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String value","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Class\u003c?\u003e type","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"STRING_LITERAL","change":"util.invalidType","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"THROW_STATEMENT","change":"throw new IllegalArgumentException(sm.getString(\"util.invalidType\",value,type.getName()));\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"Short","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"short","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"Long","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"long","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"Integer","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"int","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"Float","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"float","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"Double","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"double","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"Character","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"char","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"Byte","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"byte","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"Boolean","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"boolean","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"String","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"WILDCARD_TYPE","change":"?","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Util.coerceToType(primitiveType,message)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.websocket.pojo.PojoMessageHandlerWholeText.decode(String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Util.coerceToType(primitiveType,message);\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.websocket.pojo.PojoMessageHandlerWholeText.decode(String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"CLASS_S","local":"java.org.apache.tomcat.websocket.pojo.PojoMethodMapping"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"CLASS_INSTANCE_CREATION","change":"new HashMap\u003c\u003e()","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"CLASS_INSTANCE_CREATION","change":"new IllegalArgumentException(sm.getString(\"pojoMethodMapping.invalidType\",value,type.getName()))","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"FIELD_DECLARATION","change":"private int indexPayload\u003d-1;\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"FIELD_DECLARATION","change":"private Map\u003cInteger,PojoPathParam\u003e indexPathParams\u003dnew HashMap\u003c\u003e();\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"FIELD_DECLARATION","change":"private int indexPrimitive\u003d-1;\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"FIELD_DECLARATION","change":"private int indexReader\u003d-1;\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"FIELD_DECLARATION","change":"private int indexInputStream\u003d-1;\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"FIELD_DECLARATION","change":"private int indexSession\u003d-1;\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"FIELD_DECLARATION","change":"private int indexBoolean\u003d-1;\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"FIELD_DECLARATION","change":"private int indexPong\u003d-1;\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"FIELD_DECLARATION","change":"private int indexByteBuffer\u003d-1;\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"FIELD_DECLARATION","change":"private int indexByteArray\u003d-1;\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"FIELD_DECLARATION","change":"private int indexString\u003d-1;\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"FIELD_DECLARATION","change":"private final Method m;\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"type.equals(short.class) || type.equals(Short.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"type.equals(long.class) || type.equals(Long.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"type.equals(int.class) || type.equals(Integer.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"type.equals(float.class) || type.equals(Float.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"type.equals(double.class) || type.equals(Double.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"value.length() \u003d\u003d 1 \u0026\u0026 (type.equals(char.class) || type.equals(Character.class))","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"type.equals(byte.class) || type.equals(Byte.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"type.equals(boolean.class) || type.equals(Boolean.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"IF_STATEMENT","change":"type.equals(String.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"type.equals(short.class) || type.equals(Short.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"type.equals(long.class) || type.equals(Long.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"type.equals(int.class) || type.equals(Integer.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"type.equals(float.class) || type.equals(Float.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"type.equals(double.class) || type.equals(Double.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"type.equals(char.class) || type.equals(Character.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"value.length() \u003d\u003d 1","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"value.length() \u003d\u003d 1 \u0026\u0026 (type.equals(char.class) || type.equals(Character.class))","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"type.equals(byte.class) || type.equals(Byte.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"INFIX_EXPRESSION","change":"type.equals(boolean.class) || type.equals(Boolean.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.getName()","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"sm.getString(\"pojoMethodMapping.invalidType\",value,type.getName())","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Short.valueOf(value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(Short.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(short.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Long.valueOf(value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(Long.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(long.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Integer.valueOf(value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(Integer.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(int.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Float.valueOf(value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(Float.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(float.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Double.valueOf(value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(Double.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(double.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"value.charAt(0)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Character.valueOf(value.charAt(0))","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(Character.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(char.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"value.length()","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Byte.valueOf(value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(Byte.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(byte.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Boolean.valueOf(value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(Boolean.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(boolean.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"type.equals(String.class)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"MODIFIER","change":"private","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"MODIFIER","change":"final","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"MODIFIER","change":"static","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"NUMBER_LITERAL","change":"1","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PARAMETERIZED_TYPE","change":"HashMap\u003c\u003e","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PARAMETERIZED_TYPE","change":"Map\u003cInteger,PojoPathParam\u003e","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PARAMETERIZED_TYPE","change":"Class\u003c?\u003e","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PARENTHESIZED_EXPRESSION","change":"(type.equals(char.class) || type.equals(Character.class))","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PREFIX_EXPRESSION","change":"-1","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PRIMITIVE_TYPE","change":"short","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PRIMITIVE_TYPE","change":"long","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PRIMITIVE_TYPE","change":"float","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PRIMITIVE_TYPE","change":"double","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PRIMITIVE_TYPE","change":"char","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PRIMITIVE_TYPE","change":"byte","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Short.valueOf(value);\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Long.valueOf(value);\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Integer.valueOf(value);\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Float.valueOf(value);\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Double.valueOf(value);\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Character.valueOf(value.charAt(0));\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Byte.valueOf(value);\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return Boolean.valueOf(value);\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"RETURN_STATEMENT","change":"return value;\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"HashMap","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"PojoPathParam","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Integer","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Map","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Method","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"IllegalArgumentException","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Short","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Long","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Float","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Double","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Character","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Byte","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Boolean","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Class","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SIMPLE_TYPE","change":"Object","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String value","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Class\u003c?\u003e type","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"STRING_LITERAL","change":"pojoMethodMapping.invalidType","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"THROW_STATEMENT","change":"throw new IllegalArgumentException(sm.getString(\"pojoMethodMapping.invalidType\",value,type.getName()));\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_DECLARATION","change":"MessageMethod","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"Short","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"short","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"Long","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"long","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"Integer","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"int","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"Float","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"float","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"Double","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"double","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"Character","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"char","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"Byte","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"byte","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"Boolean","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"boolean","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"TYPE_LITERAL","change":"String","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"indexPayload","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"indexPathParams","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"indexPrimitive","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"indexReader","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"indexInputStream","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"indexSession","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"indexBoolean","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"indexPong","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"indexByteBuffer","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"indexByteArray","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"indexString","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"m","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"WILDCARD_TYPE","change":"?","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"ASSIGNMENT","change":"result[i] \u003d Util.coerceToType(type,value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.buildArgs(PojoPathParam[],Map,Session,Throwable,CloseReason)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"EXPRESSION_STATEMENT","change":"result[i]\u003dUtil.coerceToType(type,value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.buildArgs(PojoPathParam[],Map,Session,Throwable,CloseReason)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"FOR_STATEMENT","change":"for (int i\u003d0; i \u003c pathParams.length; i++) {\n  Class\u003c?\u003e type\u003dpathParams[i].getType();\n  if (type.equals(Session.class)) {\n    result[i]\u003dsession;\n  }\n else   if (type.equals(Throwable.class)) {\n    result[i]\u003dthrowable;\n  }\n else   if (type.equals(CloseReason.class)) {\n    result[i]\u003dcloseReason;\n  }\n else {\n    String name\u003dpathParams[i].getName();\n    String value\u003dpathParameters.get(name);\n    if (value \u003d\u003d null) {\n      result[i]\u003dnull;\n    }\n else {\n      result[i]\u003dUtil.coerceToType(type,value);\n    }\n  }\n}\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.buildArgs(PojoPathParam[],Map,Session,Throwable,CloseReason)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Util.coerceToType(type,value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.buildArgs(PojoPathParam[],Map,Session,Throwable,CloseReason)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"ASSIGNMENT","change":"result[i] \u003d coerceToType(type,value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.buildArgs(PojoPathParam[],Map,Session,Throwable,CloseReason)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"EXPRESSION_STATEMENT","change":"result[i]\u003dcoerceToType(type,value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.buildArgs(PojoPathParam[],Map,Session,Throwable,CloseReason)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"FOR_STATEMENT","change":"for (int i\u003d0; i \u003c pathParams.length; i++) {\n  Class\u003c?\u003e type\u003dpathParams[i].getType();\n  if (type.equals(Session.class)) {\n    result[i]\u003dsession;\n  }\n else   if (type.equals(Throwable.class)) {\n    result[i]\u003dthrowable;\n  }\n else   if (type.equals(CloseReason.class)) {\n    result[i]\u003dcloseReason;\n  }\n else {\n    String name\u003dpathParams[i].getName();\n    String value\u003dpathParameters.get(name);\n    if (value \u003d\u003d null) {\n      result[i]\u003dnull;\n    }\n else {\n      result[i]\u003dcoerceToType(type,value);\n    }\n  }\n}\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.buildArgs(PojoPathParam[],Map,Session,Throwable,CloseReason)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"coerceToType(type,value)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.buildArgs(PojoPathParam[],Map,Session,Throwable,CloseReason)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"ASSIGNMENT","change":"value \u003d Util.coerceToType(pathParam.getType(),valueString)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.getMessageHandler(Object,Map,Session,EndpointConfig)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"ENHANCED_FOR_STATEMENT","change":"for (Map.Entry\u003cInteger,PojoPathParam\u003e entry : indexPathParams.entrySet()) {\n  PojoPathParam pathParam\u003dentry.getValue();\n  String valueString\u003dpathParameters.get(pathParam.getName());\n  Object value\u003dnull;\n  if (valueString !\u003d null) {\n    value\u003dUtil.coerceToType(pathParam.getType(),valueString);\n  }\n  params[entry.getKey().intValue()]\u003dvalue;\n}\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.getMessageHandler(Object,Map,Session,EndpointConfig)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"EXPRESSION_STATEMENT","change":"value\u003dUtil.coerceToType(pathParam.getType(),valueString)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.getMessageHandler(Object,Map,Session,EndpointConfig)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"Util.coerceToType(pathParam.getType(),valueString)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.getMessageHandler(Object,Map,Session,EndpointConfig)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"ASSIGNMENT","change":"value \u003d coerceToType(pathParam.getType(),valueString)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.getMessageHandler(Object,Map,Session,EndpointConfig)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"ENHANCED_FOR_STATEMENT","change":"for (Map.Entry\u003cInteger,PojoPathParam\u003e entry : indexPathParams.entrySet()) {\n  PojoPathParam pathParam\u003dentry.getValue();\n  String valueString\u003dpathParameters.get(pathParam.getName());\n  Object value\u003dnull;\n  if (valueString !\u003d null) {\n    value\u003dcoerceToType(pathParam.getType(),valueString);\n  }\n  params[entry.getKey().intValue()]\u003dvalue;\n}\n","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.getMessageHandler(Object,Map,Session,EndpointConfig)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"EXPRESSION_STATEMENT","change":"value\u003dcoerceToType(pathParam.getType(),valueString)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.getMessageHandler(Object,Map,Session,EndpointConfig)"}
{"project":"apache_tomcat","commit":"912c9dffecf5e6788a9d8d74cb26e9f85c30b72e","changeType":"METHOD_INVOCATION","change":"coerceToType(pathParam.getType(),valueString)","source":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.coerceToType(Class,String)","target":"org.apache.tomcat.websocket.Util.coerceToType(Class,String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.websocket.pojo.PojoMethodMapping.getMessageHandler(Object,Map,Session,EndpointConfig)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"ASSIGNMENT","change":"m \u003d MediaType.parseMediaType(new StringReader(type))","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.coyote.Response.setContentType(String)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"EXPRESSION_STATEMENT","change":"m\u003dMediaType.parseMediaType(new StringReader(type))","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.coyote.Response.setContentType(String)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"MediaType.parseMediaType(new StringReader(type))","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.coyote.Response.setContentType(String)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"TRY_STATEMENT","change":"try {\n  m\u003dMediaType.parseMediaType(new StringReader(type));\n}\n catch (IOException e) {\n}\n","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.coyote.Response.setContentType(String)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"ASSIGNMENT","change":"m \u003d HttpParser.parseMediaType(new StringReader(type))","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.coyote.Response.setContentType(String)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"EXPRESSION_STATEMENT","change":"m\u003dHttpParser.parseMediaType(new StringReader(type))","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.coyote.Response.setContentType(String)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"HttpParser.parseMediaType(new StringReader(type))","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.coyote.Response.setContentType(String)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"TRY_STATEMENT","change":"try {\n  m\u003dHttpParser.parseMediaType(new StringReader(type));\n}\n catch (IOException e) {\n}\n","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.coyote.Response.setContentType(String)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"CLASS_S","local":"java.org.apache.tomcat.util.http.parser.HttpParser"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"ASSIGNMENT","change":"lookForSemiColon \u003d skipConstant(input,\";\")","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"ASSIGNMENT","change":"value \u003d readTokenOrQuotedString(input,true)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"BOOLEAN_LITERAL","change":"true","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"CLASS_INSTANCE_CREATION","change":"new MediaType(type,subtype,parameters)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"CLASS_INSTANCE_CREATION","change":"new LinkedHashMap\u003c\u003e()","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"EXPRESSION_STATEMENT","change":"lookForSemiColon\u003dskipConstant(input,\";\")","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"EXPRESSION_STATEMENT","change":"parameters.put(attribute.toLowerCase(Locale.ENGLISH),value)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"EXPRESSION_STATEMENT","change":"value\u003dreadTokenOrQuotedString(input,true)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"IF_STATEMENT","change":"lookForSemiColon \u003d\u003d SkipConstantResult.NOT_FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"IF_STATEMENT","change":"attribute !\u003d null","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"IF_STATEMENT","change":"skipConstant(input,\"\u003d\") \u003d\u003d SkipConstantResult.FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"IF_STATEMENT","change":"subtype \u003d\u003d null || subtype.length() \u003d\u003d 0","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"IF_STATEMENT","change":"skipConstant(input,\"/\") \u003d\u003d SkipConstantResult.NOT_FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"IF_STATEMENT","change":"type \u003d\u003d null || type.length() \u003d\u003d 0","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"lookForSemiColon \u003d\u003d SkipConstantResult.NOT_FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"attribute !\u003d null","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"skipConstant(input,\"\u003d\") \u003d\u003d SkipConstantResult.FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"lookForSemiColon \u003d\u003d SkipConstantResult.FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"subtype.length() \u003d\u003d 0","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"subtype \u003d\u003d null","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"subtype \u003d\u003d null || subtype.length() \u003d\u003d 0","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"skipConstant(input,\"/\") \u003d\u003d SkipConstantResult.NOT_FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"type.length() \u003d\u003d 0","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"type \u003d\u003d null","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"type \u003d\u003d null || type.length() \u003d\u003d 0","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"skipConstant(input,\";\")","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"attribute.toLowerCase(Locale.ENGLISH)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"parameters.put(attribute.toLowerCase(Locale.ENGLISH),value)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"readTokenOrQuotedString(input,true)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"skipConstant(input,\"\u003d\")","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"readToken(input)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"subtype.length()","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"skipConstant(input,\"/\")","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"type.length()","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"MODIFIER","change":"static","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"MODIFIER","change":"public","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"NULL_LITERAL","change":"null","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"PARAMETERIZED_TYPE","change":"LinkedHashMap\u003c\u003e","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"PARAMETERIZED_TYPE","change":"LinkedHashMap\u003cString,String\u003e","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"QUALIFIED_NAME","change":"SkipConstantResult.NOT_FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"QUALIFIED_NAME","change":"Locale.ENGLISH","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"QUALIFIED_NAME","change":"SkipConstantResult.FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"RETURN_STATEMENT","change":"return new MediaType(type,subtype,parameters);\n","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"RETURN_STATEMENT","change":"return null;\n","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"SIMPLE_TYPE","change":"MediaType","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"SIMPLE_TYPE","change":"SkipConstantResult","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"SIMPLE_TYPE","change":"LinkedHashMap","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"SIMPLE_TYPE","change":"IOException","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"SIMPLE_TYPE","change":"StringReader","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"SINGLE_VARIABLE_DECLARATION","change":"StringReader input","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"STRING_LITERAL","change":";","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"STRING_LITERAL","change":"\u003d","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"STRING_LITERAL","change":"","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"STRING_LITERAL","change":"/","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"value","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"attribute","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"lookForSemiColon","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"parameters","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"subtype","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"type","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [value\u003d\"\"]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [attribute\u003dreadToken(input)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"SkipConstantResult [lookForSemiColon\u003dskipConstant(input,\";\")]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"LinkedHashMap\u003cString,String\u003e [parameters\u003dnew LinkedHashMap\u003c\u003e()]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [subtype\u003dreadToken(input)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [type\u003dreadToken(input)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"WHILE_STATEMENT","change":"while (lookForSemiColon \u003d\u003d SkipConstantResult.FOUND) {\n  String attribute\u003dreadToken(input);\n  String value\u003d\"\";\n  if (skipConstant(input,\"\u003d\") \u003d\u003d SkipConstantResult.FOUND) {\n    value\u003dreadTokenOrQuotedString(input,true);\n  }\n  if (attribute !\u003d null) {\n    parameters.put(attribute.toLowerCase(Locale.ENGLISH),value);\n  }\n  lookForSemiColon\u003dskipConstant(input,\";\");\n  if (lookForSemiColon \u003d\u003d SkipConstantResult.NOT_FOUND) {\n    return null;\n  }\n}\n","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"CLASS_T","local":"java.org.apache.tomcat.util.http.parser.MediaType"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"ASSIGNMENT","change":"lookForSemiColon \u003d HttpParser.skipConstant(input,\";\")","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"ASSIGNMENT","change":"value \u003d HttpParser.readTokenOrQuotedString(input,true)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"BOOLEAN_LITERAL","change":"true","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"CLASS_INSTANCE_CREATION","change":"new MediaType(type,subtype,parameters)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"CLASS_INSTANCE_CREATION","change":"new LinkedHashMap\u003c\u003e()","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"EXPRESSION_STATEMENT","change":"lookForSemiColon\u003dHttpParser.skipConstant(input,\";\")","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"EXPRESSION_STATEMENT","change":"parameters.put(attribute.toLowerCase(Locale.ENGLISH),value)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"EXPRESSION_STATEMENT","change":"value\u003dHttpParser.readTokenOrQuotedString(input,true)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"IF_STATEMENT","change":"lookForSemiColon \u003d\u003d HttpParser.SkipConstantResult.NOT_FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"IF_STATEMENT","change":"attribute !\u003d null","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"IF_STATEMENT","change":"HttpParser.skipConstant(input,\"\u003d\") \u003d\u003d HttpParser.SkipConstantResult.FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"IF_STATEMENT","change":"subtype \u003d\u003d null || subtype.length() \u003d\u003d 0","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"IF_STATEMENT","change":"HttpParser.skipConstant(input,\"/\") \u003d\u003d HttpParser.SkipConstantResult.NOT_FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"IF_STATEMENT","change":"type \u003d\u003d null || type.length() \u003d\u003d 0","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"lookForSemiColon \u003d\u003d HttpParser.SkipConstantResult.NOT_FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"attribute !\u003d null","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"HttpParser.skipConstant(input,\"\u003d\") \u003d\u003d HttpParser.SkipConstantResult.FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"lookForSemiColon \u003d\u003d HttpParser.SkipConstantResult.FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"subtype.length() \u003d\u003d 0","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"subtype \u003d\u003d null","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"subtype \u003d\u003d null || subtype.length() \u003d\u003d 0","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"HttpParser.skipConstant(input,\"/\") \u003d\u003d HttpParser.SkipConstantResult.NOT_FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"type.length() \u003d\u003d 0","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"type \u003d\u003d null","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"INFIX_EXPRESSION","change":"type \u003d\u003d null || type.length() \u003d\u003d 0","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"JAVADOC","change":"/** \n * Parses a MediaType value, either from a HTTP header or from an application.\n * @param input a reader over the header text\n * @return a MediaType parsed from the input, or null if not valid\n * @throws IOException if there was a problem reading the input\n */\n","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"HttpParser.skipConstant(input,\";\")","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"attribute.toLowerCase(Locale.ENGLISH)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"parameters.put(attribute.toLowerCase(Locale.ENGLISH),value)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"HttpParser.readTokenOrQuotedString(input,true)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"HttpParser.skipConstant(input,\"\u003d\")","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"HttpParser.readToken(input)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"subtype.length()","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"HttpParser.skipConstant(input,\"/\")","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"type.length()","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"MODIFIER","change":"static","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"MODIFIER","change":"public","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"NULL_LITERAL","change":"null","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"PARAMETERIZED_TYPE","change":"LinkedHashMap\u003c\u003e","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"PARAMETERIZED_TYPE","change":"LinkedHashMap\u003cString,String\u003e","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"QUALIFIED_NAME","change":"HttpParser.SkipConstantResult","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"QUALIFIED_NAME","change":"HttpParser.SkipConstantResult.NOT_FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"QUALIFIED_NAME","change":"Locale.ENGLISH","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"QUALIFIED_NAME","change":"HttpParser.SkipConstantResult.FOUND","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"RETURN_STATEMENT","change":"return new MediaType(type,subtype,parameters);\n","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"RETURN_STATEMENT","change":"return null;\n","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"SIMPLE_TYPE","change":"MediaType","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"SIMPLE_TYPE","change":"HttpParser.SkipConstantResult","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"SIMPLE_TYPE","change":"LinkedHashMap","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"SIMPLE_TYPE","change":"IOException","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"SIMPLE_TYPE","change":"StringReader","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"SINGLE_VARIABLE_DECLARATION","change":"StringReader input","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"STRING_LITERAL","change":";","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"STRING_LITERAL","change":"\u003d","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"STRING_LITERAL","change":"","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"STRING_LITERAL","change":"/","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"value","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"attribute","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"lookForSemiColon","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"parameters","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"subtype","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"type","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [value\u003d\"\"]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [attribute\u003dHttpParser.readToken(input)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"HttpParser.SkipConstantResult [lookForSemiColon\u003dHttpParser.skipConstant(input,\";\")]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"LinkedHashMap\u003cString,String\u003e [parameters\u003dnew LinkedHashMap\u003c\u003e()]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [subtype\u003dHttpParser.readToken(input)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [type\u003dHttpParser.readToken(input)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"WHILE_STATEMENT","change":"while (lookForSemiColon \u003d\u003d HttpParser.SkipConstantResult.FOUND) {\n  String attribute\u003dHttpParser.readToken(input);\n  String value\u003d\"\";\n  if (HttpParser.skipConstant(input,\"\u003d\") \u003d\u003d HttpParser.SkipConstantResult.FOUND) {\n    value\u003dHttpParser.readTokenOrQuotedString(input,true);\n  }\n  if (attribute !\u003d null) {\n    parameters.put(attribute.toLowerCase(Locale.ENGLISH),value);\n  }\n  lookForSemiColon\u003dHttpParser.skipConstant(input,\";\");\n  if (lookForSemiColon \u003d\u003d HttpParser.SkipConstantResult.NOT_FOUND) {\n    return null;\n  }\n}\n","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"ASSIGNMENT","change":"m \u003d MediaType.parseMediaType(new StringReader(input))","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.MediaTypeCache.parse(String)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"EXPRESSION_STATEMENT","change":"m\u003dMediaType.parseMediaType(new StringReader(input))","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.MediaTypeCache.parse(String)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"MediaType.parseMediaType(new StringReader(input))","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.MediaTypeCache.parse(String)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"TRY_STATEMENT","change":"try {\n  m\u003dMediaType.parseMediaType(new StringReader(input));\n}\n catch (IOException e) {\n}\n","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.MediaTypeCache.parse(String)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"ASSIGNMENT","change":"m \u003d HttpParser.parseMediaType(new StringReader(input))","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.MediaTypeCache.parse(String)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"EXPRESSION_STATEMENT","change":"m\u003dHttpParser.parseMediaType(new StringReader(input))","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.MediaTypeCache.parse(String)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"HttpParser.parseMediaType(new StringReader(input))","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.MediaTypeCache.parse(String)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"TRY_STATEMENT","change":"try {\n  m\u003dHttpParser.parseMediaType(new StringReader(input));\n}\n catch (IOException e) {\n}\n","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.MediaTypeCache.parse(String)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"MediaType.parseMediaType(sr)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.TestMediaType.testBug53353()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"MediaType [m\u003dMediaType.parseMediaType(sr)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.TestMediaType.testBug53353()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"HttpParser.parseMediaType(sr)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.TestMediaType.testBug53353()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"MediaType [m\u003dHttpParser.parseMediaType(sr)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.TestMediaType.testBug53353()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"MediaType.parseMediaType(sr)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.TestMediaType.testBug55454()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"MediaType [m\u003dMediaType.parseMediaType(sr)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.TestMediaType.testBug55454()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"HttpParser.parseMediaType(sr)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.TestMediaType.testBug55454()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"MediaType [m\u003dHttpParser.parseMediaType(sr)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.TestMediaType.testBug55454()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"MediaType.parseMediaType(sr)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.TestMediaType.doTest(String,Parameter...)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"MediaType [m\u003dMediaType.parseMediaType(sr)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.TestMediaType.doTest(String,Parameter...)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"HttpParser.parseMediaType(sr)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.TestMediaType.doTest(String,Parameter...)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"MediaType [m\u003dHttpParser.parseMediaType(sr)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.TestMediaType.doTest(String,Parameter...)"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"MediaType.parseMediaType(sr)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.TestMediaType.testCharsetQuoted()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"MediaType [m\u003dMediaType.parseMediaType(sr)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.TestMediaType.testCharsetQuoted()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"HttpParser.parseMediaType(sr)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.TestMediaType.testCharsetQuoted()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"MediaType [m\u003dHttpParser.parseMediaType(sr)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.TestMediaType.testCharsetQuoted()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"MediaType.parseMediaType(sr)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.TestMediaType.testBug52811()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"MediaType [m\u003dMediaType.parseMediaType(sr)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.TestMediaType.testBug52811()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"HttpParser.parseMediaType(sr)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.TestMediaType.testBug52811()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"MediaType [m\u003dHttpParser.parseMediaType(sr)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.TestMediaType.testBug52811()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"MediaType.parseMediaType(sr)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.TestMediaType.testCase()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"MediaType [m\u003dMediaType.parseMediaType(sr)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.TestMediaType.testCase()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"HttpParser.parseMediaType(sr)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.TestMediaType.testCase()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"MediaType [m\u003dHttpParser.parseMediaType(sr)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.TestMediaType.testCase()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"MediaType.parseMediaType(sr)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.TestMediaType.testCharset()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"MediaType [m\u003dMediaType.parseMediaType(sr)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.http.parser.TestMediaType.testCharset()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"METHOD_INVOCATION","change":"HttpParser.parseMediaType(sr)","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.TestMediaType.testCharset()"}
{"project":"apache_tomcat","commit":"0cdfed561db144b0b6c0dadc10d1408d5683ffef","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"MediaType [m\u003dHttpParser.parseMediaType(sr)]","source":"org.apache.tomcat.util.http.parser.HttpParser.parseMediaType(StringReader)","target":"org.apache.tomcat.util.http.parser.MediaType.parseMediaType(StringReader)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.parser.TestMediaType.testCharset()"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"METHOD_INVOCATION","change":"asyncStateMachine.getLastAsyncStart()","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":true,"scope":"EXT_T","local":"org.apache.coyote.AbstractProcessor.timeoutAsync(long)"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"long [asyncStart\u003dasyncStateMachine.getLastAsyncStart()]","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":true,"scope":"EXT_T","local":"org.apache.coyote.AbstractProcessor.timeoutAsync(long)"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"METHOD_DECLARATION","change":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":true,"scope":"CLASS_T","local":"java.org.apache.coyote.AsyncStateMachine"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"JAVADOC","change":"/** \n * Obtain the time that this connection last transitioned to async processing.\n * @return The time (as returned by {@link System#currentTimeMillis()}) that this connection last transitioned to async\n */\n","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":true,"scope":"TARGET","local":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"MODIFIER","change":"public","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":true,"scope":"TARGET","local":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"PRIMITIVE_TYPE","change":"long","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":true,"scope":"TARGET","local":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"RETURN_STATEMENT","change":"return lastAsyncStart;\n","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":true,"scope":"TARGET","local":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"ENHANCED_FOR_STATEMENT","change":"for (SocketWrapperBase\u003cS\u003e socket : waitingRequests) {\n  long asyncTimeout\u003dsocket.getAsyncTimeout();\n  if (asyncTimeout \u003e 0) {\n    long asyncStart\u003dsocket.getLastAsyncStart();\n    if ((now - asyncStart) \u003e asyncTimeout) {\n      socket.setAsyncTimeout(-1);\n      processSocket(socket,SocketStatus.TIMEOUT,true);\n    }\n  }\n}\n","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.AbstractEndpoint.run()"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"METHOD_INVOCATION","change":"socket.getLastAsyncStart()","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.AbstractEndpoint.run()"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"long [asyncStart\u003dsocket.getLastAsyncStart()]","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.AbstractEndpoint.run()"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"WHILE_STATEMENT","change":"while (asyncTimeoutRunning) {\n  try {\n    Thread.sleep(1000);\n  }\n catch (  InterruptedException e) {\n  }\n  long now\u003dSystem.currentTimeMillis();\n  for (  SocketWrapperBase\u003cS\u003e socket : waitingRequests) {\n    long asyncTimeout\u003dsocket.getAsyncTimeout();\n    if (asyncTimeout \u003e 0) {\n      long asyncStart\u003dsocket.getLastAsyncStart();\n      if ((now - asyncStart) \u003e asyncTimeout) {\n        socket.setAsyncTimeout(-1);\n        processSocket(socket,SocketStatus.TIMEOUT,true);\n      }\n    }\n  }\n  while (paused \u0026\u0026 asyncTimeoutRunning) {\n    try {\n      Thread.sleep(1000);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n}\n","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.AbstractEndpoint.run()"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"ENHANCED_FOR_STATEMENT","change":"for (SelectionKey key : selector.keys()) {\n  keycount++;\n  try {\n    NioSocketWrapper ka\u003d(NioSocketWrapper)key.attachment();\n    if (ka \u003d\u003d null) {\n      cancelledKey(key);\n    }\n else     if ((ka.interestOps() \u0026 SelectionKey.OP_READ) \u003d\u003d SelectionKey.OP_READ || (ka.interestOps() \u0026 SelectionKey.OP_WRITE) \u003d\u003d SelectionKey.OP_WRITE) {\n      if (close) {\n        key.interestOps(0);\n        ka.interestOps(0);\n        processKey(key,ka);\n      }\n else {\n        boolean isTimedOut\u003dfalse;\n        if ((ka.interestOps() \u0026 SelectionKey.OP_READ) \u003d\u003d SelectionKey.OP_READ) {\n          long delta\u003dnow - ka.getLastRead();\n          long timeout\u003dka.getReadTimeout();\n          isTimedOut\u003dtimeout \u003e 0 \u0026\u0026 delta \u003e timeout;\n        }\n        if (!isTimedOut \u0026\u0026 (ka.interestOps() \u0026 SelectionKey.OP_WRITE) \u003d\u003d SelectionKey.OP_WRITE) {\n          long delta\u003dnow - ka.getLastWrite();\n          long timeout\u003dka.getWriteTimeout();\n          isTimedOut\u003dtimeout \u003e 0 \u0026\u0026 delta \u003e timeout;\n        }\n        if (isTimedOut) {\n          key.interestOps(0);\n          ka.interestOps(0);\n          cancelledKey(key);\n        }\n      }\n    }\n else     if (ka.isAsync()) {\n      if (close) {\n        key.interestOps(0);\n        ka.interestOps(0);\n        processKey(key,ka);\n      }\n else       if (ka.getAsyncTimeout() \u003e 0) {\n        if ((now - ka.getLastAsyncStart()) \u003e ka.getAsyncTimeout()) {\n          ka.setAsyncTimeout(0);\n          processSocket(ka,SocketStatus.TIMEOUT,true);\n        }\n      }\n    }\n  }\n catch (  CancelledKeyException ckx) {\n    cancelledKey(key);\n  }\n}\n","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.NioEndpoint.timeout(int,boolean)"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"IF_STATEMENT","change":"(now - ka.getLastAsyncStart()) \u003e ka.getAsyncTimeout()","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.NioEndpoint.timeout(int,boolean)"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"INFIX_EXPRESSION","change":"(now - ka.getLastAsyncStart()) \u003e ka.getAsyncTimeout()","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.NioEndpoint.timeout(int,boolean)"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"INFIX_EXPRESSION","change":"now - ka.getLastAsyncStart()","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.NioEndpoint.timeout(int,boolean)"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"METHOD_INVOCATION","change":"ka.getLastAsyncStart()","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.NioEndpoint.timeout(int,boolean)"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"PARENTHESIZED_EXPRESSION","change":"(now - ka.getLastAsyncStart())","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.NioEndpoint.timeout(int,boolean)"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"TRY_STATEMENT","change":"try {\n  for (  SelectionKey key : selector.keys()) {\n    keycount++;\n    try {\n      NioSocketWrapper ka\u003d(NioSocketWrapper)key.attachment();\n      if (ka \u003d\u003d null) {\n        cancelledKey(key);\n      }\n else       if ((ka.interestOps() \u0026 SelectionKey.OP_READ) \u003d\u003d SelectionKey.OP_READ || (ka.interestOps() \u0026 SelectionKey.OP_WRITE) \u003d\u003d SelectionKey.OP_WRITE) {\n        if (close) {\n          key.interestOps(0);\n          ka.interestOps(0);\n          processKey(key,ka);\n        }\n else {\n          boolean isTimedOut\u003dfalse;\n          if ((ka.interestOps() \u0026 SelectionKey.OP_READ) \u003d\u003d SelectionKey.OP_READ) {\n            long delta\u003dnow - ka.getLastRead();\n            long timeout\u003dka.getReadTimeout();\n            isTimedOut\u003dtimeout \u003e 0 \u0026\u0026 delta \u003e timeout;\n          }\n          if (!isTimedOut \u0026\u0026 (ka.interestOps() \u0026 SelectionKey.OP_WRITE) \u003d\u003d SelectionKey.OP_WRITE) {\n            long delta\u003dnow - ka.getLastWrite();\n            long timeout\u003dka.getWriteTimeout();\n            isTimedOut\u003dtimeout \u003e 0 \u0026\u0026 delta \u003e timeout;\n          }\n          if (isTimedOut) {\n            key.interestOps(0);\n            ka.interestOps(0);\n            cancelledKey(key);\n          }\n        }\n      }\n else       if (ka.isAsync()) {\n        if (close) {\n          key.interestOps(0);\n          ka.interestOps(0);\n          processKey(key,ka);\n        }\n else         if (ka.getAsyncTimeout() \u003e 0) {\n          if ((now - ka.getLastAsyncStart()) \u003e ka.getAsyncTimeout()) {\n            ka.setAsyncTimeout(0);\n            processSocket(ka,SocketStatus.TIMEOUT,true);\n          }\n        }\n      }\n    }\n catch (    CancelledKeyException ckx) {\n      cancelledKey(key);\n    }\n  }\n}\n catch (ConcurrentModificationException cme) {\n  log.warn(sm.getString(\"endpoint.nio.timeoutCme\"),cme);\n}\n","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.NioEndpoint.timeout(int,boolean)"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"TRY_STATEMENT","change":"try {\n  NioSocketWrapper ka\u003d(NioSocketWrapper)key.attachment();\n  if (ka \u003d\u003d null) {\n    cancelledKey(key);\n  }\n else   if ((ka.interestOps() \u0026 SelectionKey.OP_READ) \u003d\u003d SelectionKey.OP_READ || (ka.interestOps() \u0026 SelectionKey.OP_WRITE) \u003d\u003d SelectionKey.OP_WRITE) {\n    if (close) {\n      key.interestOps(0);\n      ka.interestOps(0);\n      processKey(key,ka);\n    }\n else {\n      boolean isTimedOut\u003dfalse;\n      if ((ka.interestOps() \u0026 SelectionKey.OP_READ) \u003d\u003d SelectionKey.OP_READ) {\n        long delta\u003dnow - ka.getLastRead();\n        long timeout\u003dka.getReadTimeout();\n        isTimedOut\u003dtimeout \u003e 0 \u0026\u0026 delta \u003e timeout;\n      }\n      if (!isTimedOut \u0026\u0026 (ka.interestOps() \u0026 SelectionKey.OP_WRITE) \u003d\u003d SelectionKey.OP_WRITE) {\n        long delta\u003dnow - ka.getLastWrite();\n        long timeout\u003dka.getWriteTimeout();\n        isTimedOut\u003dtimeout \u003e 0 \u0026\u0026 delta \u003e timeout;\n      }\n      if (isTimedOut) {\n        key.interestOps(0);\n        ka.interestOps(0);\n        cancelledKey(key);\n      }\n    }\n  }\n else   if (ka.isAsync()) {\n    if (close) {\n      key.interestOps(0);\n      ka.interestOps(0);\n      processKey(key,ka);\n    }\n else     if (ka.getAsyncTimeout() \u003e 0) {\n      if ((now - ka.getLastAsyncStart()) \u003e ka.getAsyncTimeout()) {\n        ka.setAsyncTimeout(0);\n        processSocket(ka,SocketStatus.TIMEOUT,true);\n      }\n    }\n  }\n}\n catch (CancelledKeyException ckx) {\n  cancelledKey(key);\n}\n","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.NioEndpoint.timeout(int,boolean)"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"CLASS_S","local":"java.org.apache.tomcat.util.net.SocketWrapperBase"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"JAVADOC","change":"/** \n * Obtain the time that this connection last transitioned to async processing.\n * @return The time (as returned by {@link System#currentTimeMillis()}) that this connection last transitioned to async\n */\n","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"MODIFIER","change":"public","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"PRIMITIVE_TYPE","change":"long","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()"}
{"project":"apache_tomcat","commit":"a6c64efe64349b4af9cb9c035c5bf251a10c77f6","changeType":"RETURN_STATEMENT","change":"return lastAsyncStart;\n","source":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()","target":"org.apache.coyote.AsyncStateMachine.getLastAsyncStart()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.SocketWrapperBase.getLastAsyncStart()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"METHOD_DECLARATION","change":"org.apache.coyote.ajp.AbstractAjpProtocol.getNamePrefix()","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":false,"scope":"EXT_S","local":"java.org.apache.coyote.ajp.AbstractAjpProtocol"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"METHOD_DECLARATION","change":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"CLASS_T","local":"java.org.apache.coyote.ajp.AjpAprProtocol"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"ANONYMOUS_CLASS_DECLARATION","change":"{\n  private static final long serialVersionUID\u003d1L;\n  protected AtomicInteger size\u003dnew AtomicInteger(0);\n  @Override public boolean offer(  AjpAprProcessor processor){\n    boolean offer\u003d(proto.processorCache \u003d\u003d -1) ? true : (size.get() \u003c proto.processorCache);\n    boolean result\u003dfalse;\n    if (offer) {\n      result\u003dsuper.offer(processor);\n      if (result) {\n        size.incrementAndGet();\n      }\n    }\n    if (!result)     unregister(processor);\n    return result;\n  }\n  @Override public AjpAprProcessor poll(){\n    AjpAprProcessor result\u003dsuper.poll();\n    if (result !\u003d null) {\n      size.decrementAndGet();\n    }\n    return result;\n  }\n  @Override public void clear(){\n    AjpAprProcessor next\u003dpoll();\n    while (next !\u003d null) {\n      unregister(next);\n      next\u003dpoll();\n    }\n    super.clear();\n    size.set(0);\n  }\n}\n","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"CLASS_INSTANCE_CREATION","change":"new AtomicInteger(0)","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"CLASS_INSTANCE_CREATION","change":"new ConcurrentLinkedQueue\u003cAjpAprProcessor\u003e(){\n  private static final long serialVersionUID\u003d1L;\n  protected AtomicInteger size\u003dnew AtomicInteger(0);\n  @Override public boolean offer(  AjpAprProcessor processor){\n    boolean offer\u003d(proto.processorCache \u003d\u003d -1) ? true : (size.get() \u003c proto.processorCache);\n    boolean result\u003dfalse;\n    if (offer) {\n      result\u003dsuper.offer(processor);\n      if (result) {\n        size.incrementAndGet();\n      }\n    }\n    if (!result)     unregister(processor);\n    return result;\n  }\n  @Override public AjpAprProcessor poll(){\n    AjpAprProcessor result\u003dsuper.poll();\n    if (result !\u003d null) {\n      size.decrementAndGet();\n    }\n    return result;\n  }\n  @Override public void clear(){\n    AjpAprProcessor next\u003dpoll();\n    while (next !\u003d null) {\n      unregister(next);\n      next\u003dpoll();\n    }\n    super.clear();\n    size.set(0);\n  }\n}\n","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"CLASS_INSTANCE_CREATION","change":"new ConcurrentHashMap\u003cSocketWrapper\u003cLong\u003e,AjpAprProcessor\u003e()","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"CLASS_INSTANCE_CREATION","change":"new RequestGroupInfo()","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"CLASS_INSTANCE_CREATION","change":"new AtomicLong(0)","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"FIELD_DECLARATION","change":"protected AtomicInteger size\u003dnew AtomicInteger(0);\n","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"FIELD_DECLARATION","change":"private static final long serialVersionUID\u003d1L;\n","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"FIELD_DECLARATION","change":"protected ConcurrentLinkedQueue\u003cAjpAprProcessor\u003e recycledProcessors\u003dnew ConcurrentLinkedQueue\u003cAjpAprProcessor\u003e(){\n  private static final long serialVersionUID\u003d1L;\n  protected AtomicInteger size\u003dnew AtomicInteger(0);\n  @Override public boolean offer(  AjpAprProcessor processor){\n    boolean offer\u003d(proto.processorCache \u003d\u003d -1) ? true : (size.get() \u003c proto.processorCache);\n    boolean result\u003dfalse;\n    if (offer) {\n      result\u003dsuper.offer(processor);\n      if (result) {\n        size.incrementAndGet();\n      }\n    }\n    if (!result)     unregister(processor);\n    return result;\n  }\n  @Override public AjpAprProcessor poll(){\n    AjpAprProcessor result\u003dsuper.poll();\n    if (result !\u003d null) {\n      size.decrementAndGet();\n    }\n    return result;\n  }\n  @Override public void clear(){\n    AjpAprProcessor next\u003dpoll();\n    while (next !\u003d null) {\n      unregister(next);\n      next\u003dpoll();\n    }\n    super.clear();\n    size.set(0);\n  }\n}\n;\n","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"FIELD_DECLARATION","change":"protected ConcurrentHashMap\u003cSocketWrapper\u003cLong\u003e,AjpAprProcessor\u003e connections\u003dnew ConcurrentHashMap\u003cSocketWrapper\u003cLong\u003e,AjpAprProcessor\u003e();\n","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"FIELD_DECLARATION","change":"protected RequestGroupInfo global\u003dnew RequestGroupInfo();\n","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"FIELD_DECLARATION","change":"protected AtomicLong registerCount\u003dnew AtomicLong(0);\n","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"FIELD_DECLARATION","change":"protected AjpAprProtocol proto;\n","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"MARKER_ANNOTATION","change":"@Override","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"MODIFIER","change":"protected","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"MODIFIER","change":"final","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"MODIFIER","change":"static","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"MODIFIER","change":"private","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"NUMBER_LITERAL","change":"1L","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"PARAMETERIZED_TYPE","change":"ConcurrentLinkedQueue\u003cAjpAprProcessor\u003e","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"PARAMETERIZED_TYPE","change":"SocketWrapper\u003cLong\u003e","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"PARAMETERIZED_TYPE","change":"ConcurrentHashMap\u003cSocketWrapper\u003cLong\u003e,AjpAprProcessor\u003e","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"PARENTHESIZED_EXPRESSION","change":"(\"ajp-apr\")","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"PRIMITIVE_TYPE","change":"long","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"RETURN_STATEMENT","change":"return (\"ajp-apr\");\n","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"SIMPLE_TYPE","change":"AtomicInteger","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"SIMPLE_TYPE","change":"AjpAprProcessor","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"SIMPLE_TYPE","change":"ConcurrentLinkedQueue","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"SIMPLE_TYPE","change":"Long","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"SIMPLE_TYPE","change":"SocketWrapper","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"SIMPLE_TYPE","change":"ConcurrentHashMap","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"SIMPLE_TYPE","change":"RequestGroupInfo","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"SIMPLE_TYPE","change":"AtomicLong","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"SIMPLE_TYPE","change":"AjpAprProtocol","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"SIMPLE_TYPE","change":"Handler","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"STRING_LITERAL","change":"ajp-apr","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"TYPE_DECLARATION","change":"AjpConnectionHandler","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"size","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"serialVersionUID","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"recycledProcessors","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"connections","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"global","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"registerCount","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"proto","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"TARGET","local":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"METHOD_DECLARATION","change":"org.apache.coyote.ajp.AjpProtocol.getNamePrefix()","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"EXT_T","local":"java.org.apache.coyote.ajp.AjpProtocol"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"METHOD_DECLARATION","change":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":false,"scope":"CLASS_S","local":"java.org.apache.coyote.http11.AbstractHttp11Protocol"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"MARKER_ANNOTATION","change":"@Override","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":false,"scope":"SOURCE","local":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"MODIFIER","change":"protected","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":false,"scope":"SOURCE","local":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"PARENTHESIZED_EXPRESSION","change":"(\"http\")","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":false,"scope":"SOURCE","local":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"RETURN_STATEMENT","change":"return (\"http\");\n","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":false,"scope":"SOURCE","local":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":false,"scope":"SOURCE","local":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"STRING_LITERAL","change":"http","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":false,"scope":"SOURCE","local":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"METHOD_DECLARATION","change":"org.apache.coyote.http11.Http11AprProtocol.getNamePrefix()","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"EXT_T","local":"java.org.apache.coyote.http11.Http11AprProtocol"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"METHOD_DECLARATION","change":"org.apache.coyote.http11.Http11NioProtocol.getNamePrefix()","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"EXT_T","local":"java.org.apache.coyote.http11.Http11NioProtocol"}
{"project":"apache_tomcat","commit":"98f71f8023c41e73e0aa8cce1f57d211d152e56b","changeType":"METHOD_DECLARATION","change":"org.apache.coyote.http11.Http11Protocol.getNamePrefix()","source":"org.apache.coyote.http11.AbstractHttp11Protocol.getNamePrefix()","target":"org.apache.coyote.ajp.AjpAprProtocol.getNamePrefix()","added":true,"scope":"EXT_T","local":"java.org.apache.coyote.http11.Http11Protocol"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_DECLARATION","change":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"CLASS_S","local":"java.org.apache.coyote.AbstractProtocolHandler"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"attributes.put(name,value)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"getLog().trace(sm.getString(\"abstractProtocolHandler.setAttribute\",name,value))","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"IF_STATEMENT","change":"getLog().isTraceEnabled()","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"JAVADOC","change":"/** \n * Generic property setter called when a property for which a specific setter already exists within the  {@link ProtocolHandler} needs to bemade available to sub-components. The specific setter will call this method to populate the attributes.\n */\n","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"MARKER_ANNOTATION","change":"@Override","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"attributes.put(name,value)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"sm.getString(\"abstractProtocolHandler.setAttribute\",name,value)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"getLog()","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"getLog().trace(sm.getString(\"abstractProtocolHandler.setAttribute\",name,value))","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"getLog().isTraceEnabled()","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"MODIFIER","change":"public","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"SIMPLE_TYPE","change":"Object","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Object value","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String name","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"STRING_LITERAL","change":"abstractProtocolHandler.setAttribute","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SOURCE","local":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"setAttribute(name,value)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SUR_S","local":"org.apache.coyote.AbstractProtocolHandler.setProperty(String,String)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"setAttribute(name,value)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SUR_S","local":"org.apache.coyote.AbstractProtocolHandler.setProperty(String,String)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"setAttribute(\"address\",ia.toString())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SUR_S","local":"org.apache.coyote.AbstractProtocolHandler.setAddress(InetAddress)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"setAttribute(\"address\",ia.toString())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SUR_S","local":"org.apache.coyote.AbstractProtocolHandler.setAddress(InetAddress)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"setAttribute(\"connectionTimeout\",str)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SUR_S","local":"org.apache.coyote.AbstractProtocolHandler.setConnectionTimeout(int)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"setAttribute(\"soTimeout\",str)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SUR_S","local":"org.apache.coyote.AbstractProtocolHandler.setConnectionTimeout(int)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"setAttribute(\"connectionTimeout\",str)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SUR_S","local":"org.apache.coyote.AbstractProtocolHandler.setConnectionTimeout(int)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"setAttribute(\"soTimeout\",str)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SUR_S","local":"org.apache.coyote.AbstractProtocolHandler.setConnectionTimeout(int)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"setAttribute(\"port\",Integer.toString(port))","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SUR_S","local":"org.apache.coyote.AbstractProtocolHandler.setPort(int)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"setAttribute(\"port\",Integer.toString(port))","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"SUR_S","local":"org.apache.coyote.AbstractProtocolHandler.setPort(int)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_DECLARATION","change":"org.apache.coyote.ProtocolHandler.setAttribute(String,Object)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"java.org.apache.coyote.ProtocolHandler"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"setAttribute(\"secure\",\"\" + b)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.AbstractHttp11Protocol.setSecure(boolean)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"setAttribute(\"secure\",\"\" + b)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.AbstractHttp11Protocol.setSecure(boolean)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"setAttribute(\"maxKeepAliveRequests\",\"\" + mkar)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.AbstractHttp11Protocol.setMaxKeepAliveRequests(int)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"setAttribute(\"maxKeepAliveRequests\",\"\" + mkar)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.AbstractHttp11Protocol.setMaxKeepAliveRequests(int)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"setAttribute(\"pollerThreadPriority\",\"\" + threadPriority)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.Http11NioProtocol.setPollerThreadPriority(int)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"setAttribute(\"pollerThreadPriority\",\"\" + threadPriority)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.Http11NioProtocol.setPollerThreadPriority(int)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"setAttribute(\"acceptorThreadPriority\",\"\" + threadPriority)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.Http11NioProtocol.setAcceptorThreadPriority(int)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"setAttribute(\"acceptorThreadPriority\",\"\" + threadPriority)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.Http11NioProtocol.setAcceptorThreadPriority(int)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"setAttribute(\"socketCloseDelay\",\"\" + d)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.Http11NioProtocol.setSocketCloseDelay(int)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"setAttribute(\"socketCloseDelay\",\"\" + d)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.Http11NioProtocol.setSocketCloseDelay(int)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"setAttribute(\"oomParachute\",Integer.valueOf(oomParachute))","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.Http11NioProtocol.setOomParachute(int)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"setAttribute(\"oomParachute\",Integer.valueOf(oomParachute))","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.Http11NioProtocol.setOomParachute(int)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"CLASS_T","local":"java.org.apache.tomcat.util.net.AbstractEndpoint"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"attributes.put(name,value)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"getLog().trace(sm.getString(\"abstractProtocolHandler.setAttribute\",name,value))","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"IF_STATEMENT","change":"getLog().isTraceEnabled()","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"JAVADOC","change":"/** \n * Generic property setter called when a property for which a specific setter already exists within the  {@link ProtocolHandler} needs to bemade available to sub-components. The specific setter will call this method to populate the attributes.\n */\n","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"attributes.put(name,value)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"sm.getString(\"abstractProtocolHandler.setAttribute\",name,value)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"getLog()","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"getLog().trace(sm.getString(\"abstractProtocolHandler.setAttribute\",name,value))","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"getLog().isTraceEnabled()","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"MODIFIER","change":"public","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"SIMPLE_TYPE","change":"Object","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Object value","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String name","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"STRING_LITERAL","change":"abstractProtocolHandler.setAttribute","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"setAttribute(name,value)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.AbstractEndpoint.setProperty(String,String)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"setAttribute(name,value)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.AbstractEndpoint.setProperty(String,String)"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_ALGORITHM,getAlgorithm())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_TRUSTSTORE_PROVIDER,getTruststoreProvider())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_TRUSTSTORE_FILE,getTruststoreFile())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_KEYSTORE_PROVIDER,getKeystoreProvider())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_CLIENT_AUTH,getClientAuth())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_TRUSTSTORE_PASS,getTruststorePass())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_SSL_PROTOCOL,getSslProtocol())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_SESSION_TIMEOUT,getSessionTimeout())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_KEY_ALIAS,getKeyAlias())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_CIPHERS,getCiphers())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_TRUSTSTORE_ALGORITHM,getTruststoreAlgorithm())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_KEYSTORE_TYPE,getKeystoreType())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_ALLOW_UNSAFE_RENEG,getAllowUnsafeLegacyRenegotiation())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_TRUSTSTORE_TYPE,getTruststoreType())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_SESSION_CACHE_SIZE,getSessionCacheSize())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_KEYSTORE_PASS,getKeystorePass())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_CRL_FILE,getCrlFile())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_KEY_PASS,getKeyPass())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_KEYSTORE_FILE,getKeystoreFile())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"EXPRESSION_STATEMENT","change":"serverSocketFactory.setAttribute(SSL_ATTR_TRUST_MAX_CERT_LENGTH,getTrustMaxCertLength())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_ALGORITHM,getAlgorithm())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_KEYSTORE_PROVIDER,getKeystoreProvider())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_TRUSTSTORE_PASS,getTruststorePass())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_CIPHERS,getCiphers())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_TRUSTSTORE_ALGORITHM,getTruststoreAlgorithm())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_KEYSTORE_TYPE,getKeystoreType())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_ALLOW_UNSAFE_RENEG,getAllowUnsafeLegacyRenegotiation())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_TRUSTSTORE_TYPE,getTruststoreType())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_SESSION_CACHE_SIZE,getSessionCacheSize())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_KEYSTORE_PASS,getKeystorePass())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_CRL_FILE,getCrlFile())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_TRUSTSTORE_PROVIDER,getTruststoreProvider())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_TRUSTSTORE_FILE,getTruststoreFile())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_CLIENT_AUTH,getClientAuth())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_SSL_PROTOCOL,getSslProtocol())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_SESSION_TIMEOUT,getSessionTimeout())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_KEY_ALIAS,getKeyAlias())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_KEY_PASS,getKeyPass())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_KEYSTORE_FILE,getKeystoreFile())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_INVOCATION","change":"serverSocketFactory.setAttribute(SSL_ATTR_TRUST_MAX_CERT_LENGTH,getTrustMaxCertLength())","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.JIoEndpoint.init()"}
{"project":"apache_tomcat","commit":"3173d64619a5612042daebb5ece127aad8be2532","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.net.ServerSocketFactory.setAttribute(String,Object)","source":"org.apache.coyote.AbstractProtocolHandler.setAttribute(String,Object)","target":"org.apache.tomcat.util.net.AbstractEndpoint.setAttribute(String,Object)","added":false,"scope":"EXT_S","local":"java.org.apache.tomcat.util.net.ServerSocketFactory"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"CLASS_T","local":"java.org.apache.tomcat.util.http.LegacyCookieProcessor"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"CHARACTER_LITERAL","change":"\u0027\\\"\u0027","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"INFIX_EXPRESSION","change":"value.length() - 1","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"INFIX_EXPRESSION","change":"value.charAt(value.length() - 1) \u003d\u003d \u0027\\\"\u0027","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"INFIX_EXPRESSION","change":"value.charAt(0) \u003d\u003d \u0027\\\"\u0027","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"INFIX_EXPRESSION","change":"value.length() \u003e\u003d 2","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"INFIX_EXPRESSION","change":"value.length() \u003e\u003d 2 \u0026\u0026 value.charAt(0) \u003d\u003d \u0027\\\"\u0027","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"INFIX_EXPRESSION","change":"value.length() \u003e\u003d 2 \u0026\u0026 value.charAt(0) \u003d\u003d \u0027\\\"\u0027 \u0026\u0026 value.charAt(value.length() - 1) \u003d\u003d \u0027\\\"\u0027","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"METHOD_INVOCATION","change":"value.length()","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"METHOD_INVOCATION","change":"value.charAt(value.length() - 1)","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"METHOD_INVOCATION","change":"value.charAt(0)","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"MODIFIER","change":"static","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"MODIFIER","change":"private","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"NUMBER_LITERAL","change":"1","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"NUMBER_LITERAL","change":"2","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"RETURN_STATEMENT","change":"return value.length() \u003e\u003d 2 \u0026\u0026 value.charAt(0) \u003d\u003d \u0027\\\"\u0027 \u0026\u0026 value.charAt(value.length() - 1) \u003d\u003d \u0027\\\"\u0027;\n","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String value","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"IF_STATEMENT","change":"alreadyQuoted(value)","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"SUR_T","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.needsQuotes(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"METHOD_INVOCATION","change":"alreadyQuoted(value)","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"SUR_T","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.needsQuotes(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"IF_STATEMENT","change":"alreadyQuoted(value)","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"SUR_T","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.maybeQuote(StringBuffer,String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"METHOD_INVOCATION","change":"alreadyQuoted(value)","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":true,"scope":"SUR_T","local":"org.apache.tomcat.util.http.LegacyCookieProcessor.maybeQuote(StringBuffer,String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"CLASS_S","local":"java.org.apache.tomcat.util.http.SetCookieSupport"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"IF_STATEMENT","change":"alreadyQuoted(value)","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.needsQuotes(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"METHOD_INVOCATION","change":"alreadyQuoted(value)","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.needsQuotes(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"IF_STATEMENT","change":"alreadyQuoted(value)","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.maybeQuote(StringBuffer,String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"METHOD_INVOCATION","change":"alreadyQuoted(value)","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.http.SetCookieSupport.maybeQuote(StringBuffer,String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"CHARACTER_LITERAL","change":"\u0027\\\"\u0027","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"INFIX_EXPRESSION","change":"value.length() - 1","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"INFIX_EXPRESSION","change":"value.charAt(value.length() - 1) \u003d\u003d \u0027\\\"\u0027","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"INFIX_EXPRESSION","change":"value.charAt(0) \u003d\u003d \u0027\\\"\u0027","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"INFIX_EXPRESSION","change":"value.length() \u003e\u003d 2","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"INFIX_EXPRESSION","change":"value.length() \u003e\u003d 2 \u0026\u0026 value.charAt(0) \u003d\u003d \u0027\\\"\u0027","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"INFIX_EXPRESSION","change":"value.length() \u003e\u003d 2 \u0026\u0026 value.charAt(0) \u003d\u003d \u0027\\\"\u0027 \u0026\u0026 value.charAt(value.length() - 1) \u003d\u003d \u0027\\\"\u0027","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"METHOD_INVOCATION","change":"value.length()","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"METHOD_INVOCATION","change":"value.charAt(value.length() - 1)","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"METHOD_INVOCATION","change":"value.charAt(0)","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"MODIFIER","change":"static","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"MODIFIER","change":"private","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"NUMBER_LITERAL","change":"1","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"NUMBER_LITERAL","change":"2","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"RETURN_STATEMENT","change":"return value.length() \u003e\u003d 2 \u0026\u0026 value.charAt(0) \u003d\u003d \u0027\\\"\u0027 \u0026\u0026 value.charAt(value.length() - 1) \u003d\u003d \u0027\\\"\u0027;\n","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"54279c06abecac6fff4234409edf57ed98cdae47","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String value","source":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)","target":"org.apache.tomcat.util.http.LegacyCookieProcessor.alreadyQuoted(String)","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.http.SetCookieSupport.alreadyQuoted(String)"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"ASSIGNMENT","change":"saddr \u003d new InetSocketAddress(address,getLocalPort())","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SUR_S","local":"org.apache.tomcat.util.net.AbstractEndpoint.unlockAccept()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"ASSIGNMENT","change":"saddr \u003d new InetSocketAddress(localAddress,getLocalPort())","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SUR_S","local":"org.apache.tomcat.util.net.AbstractEndpoint.unlockAccept()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"ASSIGNMENT","change":"saddr \u003d new InetSocketAddress(\"localhost\",getLocalPort())","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SUR_S","local":"org.apache.tomcat.util.net.AbstractEndpoint.unlockAccept()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"CLASS_INSTANCE_CREATION","change":"new InetSocketAddress(\"localhost\",getLocalPort())","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SUR_S","local":"org.apache.tomcat.util.net.AbstractEndpoint.unlockAccept()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"CLASS_INSTANCE_CREATION","change":"new InetSocketAddress(address,getLocalPort())","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SUR_S","local":"org.apache.tomcat.util.net.AbstractEndpoint.unlockAccept()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"CLASS_INSTANCE_CREATION","change":"new InetSocketAddress(localAddress,getLocalPort())","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SUR_S","local":"org.apache.tomcat.util.net.AbstractEndpoint.unlockAccept()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"EXPRESSION_STATEMENT","change":"saddr\u003dnew InetSocketAddress(address,getLocalPort())","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SUR_S","local":"org.apache.tomcat.util.net.AbstractEndpoint.unlockAccept()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"EXPRESSION_STATEMENT","change":"saddr\u003dnew InetSocketAddress(localAddress,getLocalPort())","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SUR_S","local":"org.apache.tomcat.util.net.AbstractEndpoint.unlockAccept()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"EXPRESSION_STATEMENT","change":"saddr\u003dnew InetSocketAddress(\"localhost\",getLocalPort())","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SUR_S","local":"org.apache.tomcat.util.net.AbstractEndpoint.unlockAccept()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"METHOD_INVOCATION","change":"getLocalPort()","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SUR_S","local":"org.apache.tomcat.util.net.AbstractEndpoint.unlockAccept()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"TRY_STATEMENT","change":"try {\n  if (address \u003d\u003d null) {\n    saddr\u003dnew InetSocketAddress(\"localhost\",getLocalPort());\n  }\n else   if (address.isAnyLocalAddress()) {\n    InetAddress localAddress\u003dnull;\n    Enumeration\u003cNetworkInterface\u003e networkInterfaces\u003dNetworkInterface.getNetworkInterfaces();\n    while (localAddress \u003d\u003d null \u0026\u0026 networkInterfaces.hasMoreElements()) {\n      NetworkInterface networkInterface\u003dnetworkInterfaces.nextElement();\n      Enumeration\u003cInetAddress\u003e inetAddresses\u003dnetworkInterface.getInetAddresses();\n      while (localAddress \u003d\u003d null \u0026\u0026 inetAddresses.hasMoreElements()) {\n        InetAddress inetAddress\u003dinetAddresses.nextElement();\n        if (address.getClass().isAssignableFrom(inetAddress.getClass())) {\n          localAddress\u003dinetAddress;\n        }\n      }\n    }\n    if (localAddress \u003d\u003d null) {\n      saddr\u003dnew InetSocketAddress(\"localhost\",getLocalPort());\n    }\n    saddr\u003dnew InetSocketAddress(localAddress,getLocalPort());\n  }\n else {\n    saddr\u003dnew InetSocketAddress(address,getLocalPort());\n  }\n  try (java.net.Socket s\u003dnew java.net.Socket()){\n    int stmo\u003d2 * 1000;\n    int utmo\u003d2 * 1000;\n    if (getSocketProperties().getSoTimeout() \u003e stmo)     stmo\u003dgetSocketProperties().getSoTimeout();\n    if (getSocketProperties().getUnlockTimeout() \u003e utmo)     utmo\u003dgetSocketProperties().getUnlockTimeout();\n    s.setSoTimeout(stmo);\n    s.setSoLinger(getSocketProperties().getSoLingerOn(),getSocketProperties().getSoLingerTime());\n    if (getLog().isDebugEnabled()) {\n      getLog().debug(\"About to unlock socket for:\" + saddr);\n    }\n    s.connect(saddr,utmo);\n    if (getDeferAccept()) {\n      OutputStreamWriter sw;\n      sw\u003dnew OutputStreamWriter(s.getOutputStream(),\"ISO-8859-1\");\n      sw.write(\"OPTIONS * HTTP/1.0\\r\\n\" + \"User-Agent: Tomcat wakeup connection\\r\\n\\r\\n\");\n      sw.flush();\n    }\n    if (getLog().isDebugEnabled()) {\n      getLog().debug(\"Socket unlock completed for:\" + saddr);\n    }\n    long waitLeft\u003d1000;\n    for (    Acceptor acceptor : acceptors) {\n      while (waitLeft \u003e 0 \u0026\u0026 acceptor.getState() \u003d\u003d AcceptorState.RUNNING) {\n        Thread.sleep(50);\n        waitLeft-\u003d50;\n      }\n    }\n  }\n }\n catch (Exception e) {\n  if (getLog().isDebugEnabled()) {\n    getLog().debug(sm.getString(\"endpoint.debug.unlock\",\"\" + getPort()),e);\n  }\n}\n","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SUR_S","local":"org.apache.tomcat.util.net.AbstractEndpoint.unlockAccept()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"CATCH_CLAUSE","change":"catch (IOException ioe) {\n  return -1;\n}\n","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"IF_STATEMENT","change":"localAddress \u003d\u003d null","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"INFIX_EXPRESSION","change":"localAddress \u003d\u003d null","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"METHOD_INVOCATION","change":"getLocalAddress()","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"METHOD_INVOCATION","change":"localAddress.getPort()","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"MODIFIER","change":"final","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"NULL_LITERAL","change":"null","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"NUMBER_LITERAL","change":"1","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"PREFIX_EXPRESSION","change":"-1","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"RETURN_STATEMENT","change":"return -1;\n","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"RETURN_STATEMENT","change":"return localAddress.getPort();\n","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"SIMPLE_TYPE","change":"InetSocketAddress","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"SIMPLE_TYPE","change":"IOException","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"SINGLE_VARIABLE_DECLARATION","change":"IOException ioe","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"TRY_STATEMENT","change":"try {\n  InetSocketAddress localAddress\u003dgetLocalAddress();\n  if (localAddress \u003d\u003d null) {\n    return -1;\n  }\n  return localAddress.getPort();\n}\n catch (IOException ioe) {\n  return -1;\n}\n","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"localAddress","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"InetSocketAddress [localAddress\u003dgetLocalAddress()]","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"MODIFIER","change":"abstract","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"TARGET","local":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.net.AprEndpoint.getLocalPort()","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"EXT_S","local":"java.org.apache.tomcat.util.net.AprEndpoint"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"CLASS_S","local":"java.org.apache.tomcat.util.net.Nio2Endpoint"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"CAST_EXPRESSION","change":"(InetSocketAddress)sa","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"CATCH_CLAUSE","change":"catch (IOException e) {\n  return -1;\n}\n","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"IF_STATEMENT","change":"sa instanceof InetSocketAddress","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"IF_STATEMENT","change":"ssc \u003d\u003d null","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"INFIX_EXPRESSION","change":"ssc \u003d\u003d null","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"INSTANCEOF_EXPRESSION","change":"sa instanceof InetSocketAddress","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"JAVADOC","change":"/** \n * Port in use.\n */\n","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"MARKER_ANNOTATION","change":"@Override","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"METHOD_INVOCATION","change":"((InetSocketAddress)sa).getPort()","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"METHOD_INVOCATION","change":"ssc.getLocalAddress()","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"MODIFIER","change":"public","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"NULL_LITERAL","change":"null","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"NUMBER_LITERAL","change":"1","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"PARENTHESIZED_EXPRESSION","change":"((InetSocketAddress)sa)","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"PREFIX_EXPRESSION","change":"-1","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"RETURN_STATEMENT","change":"return -1;\n","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"RETURN_STATEMENT","change":"return ((InetSocketAddress)sa).getPort();\n","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"SIMPLE_TYPE","change":"IOException","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"SIMPLE_TYPE","change":"InetSocketAddress","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"SIMPLE_TYPE","change":"SocketAddress","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"SIMPLE_TYPE","change":"AsynchronousServerSocketChannel","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"SINGLE_VARIABLE_DECLARATION","change":"IOException e","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"TRY_STATEMENT","change":"try {\n  SocketAddress sa\u003dssc.getLocalAddress();\n  if (sa instanceof InetSocketAddress) {\n    return ((InetSocketAddress)sa).getPort();\n  }\n else {\n    return -1;\n  }\n}\n catch (IOException e) {\n  return -1;\n}\n","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"sa","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"ssc","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"SocketAddress [sa\u003dssc.getLocalAddress()]","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"AsynchronousServerSocketChannel [ssc\u003dserverSock]","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.net.NioEndpoint.getLocalPort()","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"EXT_S","local":"java.org.apache.tomcat.util.net.NioEndpoint"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"METHOD_INVOCATION","change":"s.getLocalPort()","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.NioEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"52e87a111919055348fc1eb107d49bb79666c223","changeType":"RETURN_STATEMENT","change":"return s.getLocalPort();\n","source":"org.apache.tomcat.util.net.Nio2Endpoint.getLocalPort()","target":"org.apache.tomcat.util.net.AbstractEndpoint.getLocalPort()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.NioEndpoint.getLocalPort()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"METHOD_DECLARATION","change":"org.apache.coyote.http11.AbstractHttp11JsseProtocol.getCiphers()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":false,"scope":"EXT_S","local":"java.org.apache.coyote.http11.AbstractHttp11JsseProtocol"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"METHOD_INVOCATION","change":"getEndpoint().getCiphers()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.AbstractHttp11JsseProtocol.getCiphers()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"RETURN_STATEMENT","change":"return getEndpoint().getCiphers();\n","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":false,"scope":"EXT_S","local":"org.apache.coyote.http11.AbstractHttp11JsseProtocol.getCiphers()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":false,"scope":"CLASS_S","local":"java.org.apache.tomcat.util.net.AbstractEndpoint"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"MODIFIER","change":"public","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"RETURN_STATEMENT","change":"return ciphers;\n","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":false,"scope":"SOURCE","local":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"ENHANCED_FOR_STATEMENT","change":"for (SSLHostConfig sslHostConfig : sslHostConfigs.values()) {\n  if (sslHostConfig.getCertificateFile() \u003d\u003d null) {\n    throw new Exception(sm.getString(\"endpoint.apr.noSslCertFile\"));\n  }\n  int value\u003dSSL.SSL_PROTOCOL_NONE;\n  if (sslHostConfig.getProtocols().size() \u003d\u003d 0) {\n    value\u003dSSL.SSL_PROTOCOL_ALL;\n  }\n else {\n    for (    String protocol : sslHostConfig.getProtocols()) {\n      if (\"SSLv2Hello\".equalsIgnoreCase(protocol)) {\n      }\n else       if (\"SSLv2\".equalsIgnoreCase(protocol)) {\n        value|\u003dSSL.SSL_PROTOCOL_SSLV2;\n      }\n else       if (\"SSLv3\".equalsIgnoreCase(protocol)) {\n        value|\u003dSSL.SSL_PROTOCOL_SSLV3;\n      }\n else       if (\"TLSv1\".equalsIgnoreCase(protocol)) {\n        value|\u003dSSL.SSL_PROTOCOL_TLSV1;\n      }\n else       if (\"TLSv1.1\".equalsIgnoreCase(protocol)) {\n        value|\u003dSSL.SSL_PROTOCOL_TLSV1_1;\n      }\n else       if (\"TLSv1.2\".equalsIgnoreCase(protocol)) {\n        value|\u003dSSL.SSL_PROTOCOL_TLSV1_2;\n      }\n else       if (\"all\".equalsIgnoreCase(protocol)) {\n        value|\u003dSSL.SSL_PROTOCOL_ALL;\n      }\n else {\n        throw new Exception(sm.getString(\"endpoint.apr.invalidSslProtocol\",protocol));\n      }\n    }\n  }\n  long ctx\u003d0;\n  try {\n    ctx\u003dSSLContext.make(rootPool,value,SSL.SSL_MODE_SERVER);\n  }\n catch (  Exception e) {\n    throw new Exception(sm.getString(\"endpoint.apr.failSslContextMake\"),e);\n  }\n  if (SSLInsecureRenegotiation) {\n    boolean legacyRenegSupported\u003dfalse;\n    try {\n      legacyRenegSupported\u003dSSL.hasOp(SSL.SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION);\n      if (legacyRenegSupported)       SSLContext.setOptions(ctx,SSL.SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION);\n    }\n catch (    UnsatisfiedLinkError e) {\n    }\n    if (!legacyRenegSupported) {\n      log.warn(sm.getString(\"endpoint.warn.noInsecureReneg\",SSL.versionString()));\n    }\n  }\n  if (sslHostConfig.getHonorCipherOrder()) {\n    boolean orderCiphersSupported\u003dfalse;\n    try {\n      orderCiphersSupported\u003dSSL.hasOp(SSL.SSL_OP_CIPHER_SERVER_PREFERENCE);\n      if (orderCiphersSupported)       SSLContext.setOptions(ctx,SSL.SSL_OP_CIPHER_SERVER_PREFERENCE);\n    }\n catch (    UnsatisfiedLinkError e) {\n    }\n    if (!orderCiphersSupported) {\n      log.warn(sm.getString(\"endpoint.warn.noHonorCipherOrder\",SSL.versionString()));\n    }\n  }\n  if (SSLDisableCompression) {\n    boolean disableCompressionSupported\u003dfalse;\n    try {\n      disableCompressionSupported\u003dSSL.hasOp(SSL.SSL_OP_NO_COMPRESSION);\n      if (disableCompressionSupported)       SSLContext.setOptions(ctx,SSL.SSL_OP_NO_COMPRESSION);\n    }\n catch (    UnsatisfiedLinkError e) {\n    }\n    if (!disableCompressionSupported) {\n      log.warn(sm.getString(\"endpoint.warn.noDisableCompression\",SSL.versionString()));\n    }\n  }\n  if (SSLDisableSessionTickets) {\n    boolean disableSessionTicketsSupported\u003dfalse;\n    try {\n      disableSessionTicketsSupported\u003dSSL.hasOp(SSL.SSL_OP_NO_TICKET);\n      if (disableSessionTicketsSupported)       SSLContext.setOptions(ctx,SSL.SSL_OP_NO_TICKET);\n    }\n catch (    UnsatisfiedLinkError e) {\n    }\n    if (!disableSessionTicketsSupported) {\n      log.warn(sm.getString(\"endpoint.warn.noDisableSessionTickets\",SSL.versionString()));\n    }\n  }\n  SSLContext.setCipherSuite(ctx,sslHostConfig.getCiphers());\n  SSLContext.setCertificate(ctx,sslHostConfig.getCertificateFile(),sslHostConfig.getCertificateKeyFile(),SSLPassword,SSL.SSL_AIDX_RSA);\n  SSLContext.setCertificateChainFile(ctx,SSLCertificateChainFile,false);\n  SSLContext.setCACertificate(ctx,SSLCACertificateFile,SSLCACertificatePath);\n  SSLContext.setCARevocation(ctx,SSLCARevocationFile,SSLCARevocationPath);\nswitch (sslHostConfig.getCertificateVerification()) {\ncase NONE:\n    value\u003dSSL.SSL_CVERIFY_NONE;\n  break;\ncase OPTIONAL:\nvalue\u003dSSL.SSL_CVERIFY_OPTIONAL;\nbreak;\ncase OPTIONAL_NO_CA:\nvalue\u003dSSL.SSL_CVERIFY_OPTIONAL_NO_CA;\nbreak;\ncase REQUIRED:\nvalue\u003dSSL.SSL_CVERIFY_REQUIRE;\nbreak;\n}\nSSLContext.setVerify(ctx,value,sslHostConfig.getCertificateVerificationDepth());\nif (getUseSendfile()) {\nsetUseSendfileInternal(false);\nif (useSendFileSet) {\nlog.warn(sm.getString(\"endpoint.apr.noSendfileWithSSL\"));\n}\n}\nif (negotiableProtocols.size() \u003e 0) {\nbyte[] protocols\u003dbuildAlpnConfig(negotiableProtocols);\nif (SSLContext.setALPN(ctx,protocols,protocols.length) !\u003d 0) {\nlog.warn(sm.getString(\"endpoint.alpn.fail\",negotiableProtocols));\n}\n}\nsslHostConfig.setSslContext(Long.valueOf(ctx));\n}\n","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.AprEndpoint.bind()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"EXPRESSION_STATEMENT","change":"SSLContext.setCipherSuite(ctx,sslHostConfig.getCiphers())","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.AprEndpoint.bind()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"METHOD_INVOCATION","change":"SSLContext.setCipherSuite(ctx,sslHostConfig.getCiphers())","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.AprEndpoint.bind()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"METHOD_INVOCATION","change":"sslHostConfig.getCiphers()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.AprEndpoint.bind()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"METHOD_DECLARATION","change":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"CLASS_T","local":"java.org.apache.tomcat.util.net.SSLHostConfig"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"MODIFIER","change":"public","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"RETURN_STATEMENT","change":"return ciphers;\n","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"TARGET","local":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"METHOD_INVOCATION","change":"sslHostConfig.getCiphers()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.jsse.JSSESocketFactory.getEnableableCiphers(SSLContext)"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [requestedCiphersStr\u003dsslHostConfig.getCiphers()]","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.jsse.JSSESocketFactory.getEnableableCiphers(SSLContext)"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"METHOD_INVOCATION","change":"endpoint.getCiphers()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.jsse.JSSESocketFactory.getEnableableCiphers(SSLContext)"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [requestedCiphersStr\u003dendpoint.getCiphers()]","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":false,"scope":"EXT_S","local":"org.apache.tomcat.util.net.jsse.JSSESocketFactory.getEnableableCiphers(SSLContext)"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"EXPRESSION_STATEMENT","change":"Assert.assertEquals(c.getOpenSSLAlias(),hc.getCiphers())","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.TestSSLHostConfig.testCipher01()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"METHOD_INVOCATION","change":"hc.getCiphers()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.TestSSLHostConfig.testCipher01()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"METHOD_INVOCATION","change":"Assert.assertEquals(c.getOpenSSLAlias(),hc.getCiphers())","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.TestSSLHostConfig.testCipher01()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"EXPRESSION_STATEMENT","change":"Assert.assertEquals(\"ALL\",hc.getCiphers())","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.TestSSLHostConfig.testCipher03()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"METHOD_INVOCATION","change":"hc.getCiphers()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.TestSSLHostConfig.testCipher03()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"METHOD_INVOCATION","change":"Assert.assertEquals(\"ALL\",hc.getCiphers())","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.TestSSLHostConfig.testCipher03()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"EXPRESSION_STATEMENT","change":"Assert.assertEquals(c.getOpenSSLAlias(),hc.getCiphers())","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.TestSSLHostConfig.testCipher04()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"METHOD_INVOCATION","change":"hc.getCiphers()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.TestSSLHostConfig.testCipher04()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"METHOD_INVOCATION","change":"Assert.assertEquals(c.getOpenSSLAlias(),hc.getCiphers())","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.TestSSLHostConfig.testCipher04()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"EXPRESSION_STATEMENT","change":"Assert.assertEquals(c1.getOpenSSLAlias() + \":\" + c2.getOpenSSLAlias(),hc.getCiphers())","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.TestSSLHostConfig.testCipher02()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"METHOD_INVOCATION","change":"hc.getCiphers()","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.TestSSLHostConfig.testCipher02()"}
{"project":"apache_tomcat","commit":"ef303e3b9a0eb8a2eb886839b736bb42aa5606ca","changeType":"METHOD_INVOCATION","change":"Assert.assertEquals(c1.getOpenSSLAlias() + \":\" + c2.getOpenSSLAlias(),hc.getCiphers())","source":"org.apache.tomcat.util.net.AbstractEndpoint.getCiphers()","target":"org.apache.tomcat.util.net.SSLHostConfig.getCiphers()","added":true,"scope":"EXT_T","local":"org.apache.tomcat.util.net.TestSSLHostConfig.testCipher02()"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"METHOD_DECLARATION","change":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"CLASS_S","local":"java.client.org.apache.derby.client.am.LogWriter"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"ANONYMOUS_CLASS_DECLARATION","change":"{\n  public PrintWriter run() throws IOException {\n    String fileCanonicalPath\u003dnew File(fileName).getCanonicalPath();\n    return new PrintWriter(new BufferedOutputStream(new FileOutputStream(fileCanonicalPath,fileAppend),4096),true);\n  }\n}\n","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"ASSIGNMENT","change":"printWriter \u003d AccessController.doPrivileged(new PrivilegedExceptionAction\u003cPrintWriter\u003e(){\n  public PrintWriter run() throws IOException {\n    String fileCanonicalPath\u003dnew File(fileName).getCanonicalPath();\n    return new PrintWriter(new BufferedOutputStream(new FileOutputStream(fileCanonicalPath,fileAppend),4096),true);\n  }\n}\n)","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"CLASS_INSTANCE_CREATION","change":"new PrivilegedExceptionAction\u003cPrintWriter\u003e(){\n  public PrintWriter run() throws IOException {\n    String fileCanonicalPath\u003dnew File(fileName).getCanonicalPath();\n    return new PrintWriter(new BufferedOutputStream(new FileOutputStream(fileCanonicalPath,fileAppend),4096),true);\n  }\n}\n","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"EXPRESSION_STATEMENT","change":"printWriter\u003dAccessController.doPrivileged(new PrivilegedExceptionAction\u003cPrintWriter\u003e(){\n  public PrintWriter run() throws IOException {\n    String fileCanonicalPath\u003dnew File(fileName).getCanonicalPath();\n    return new PrintWriter(new BufferedOutputStream(new FileOutputStream(fileCanonicalPath,fileAppend),4096),true);\n  }\n}\n)","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"METHOD_INVOCATION","change":"AccessController.doPrivileged(new PrivilegedExceptionAction\u003cPrintWriter\u003e(){\n  public PrintWriter run() throws IOException {\n    String fileCanonicalPath\u003dnew File(fileName).getCanonicalPath();\n    return new PrintWriter(new BufferedOutputStream(new FileOutputStream(fileCanonicalPath,fileAppend),4096),true);\n  }\n}\n)","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"MODIFIER","change":"final","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"MODIFIER","change":"static","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"MODIFIER","change":"public","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"NULL_LITERAL","change":"null","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"PARAMETERIZED_TYPE","change":"PrivilegedExceptionAction\u003cPrintWriter\u003e","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"SIMPLE_TYPE","change":"PrintWriter","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"SIMPLE_TYPE","change":"PrivilegedExceptionAction","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"SIMPLE_TYPE","change":"SqlException","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"SINGLE_VARIABLE_DECLARATION","change":"final boolean fileAppend","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"SINGLE_VARIABLE_DECLARATION","change":"final String fileName","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"TRY_STATEMENT","change":"try {\n  printWriter\u003dAccessController.doPrivileged(new PrivilegedExceptionAction\u003cPrintWriter\u003e(){\n    public PrintWriter run() throws IOException {\n      String fileCanonicalPath\u003dnew File(fileName).getCanonicalPath();\n      return new PrintWriter(new BufferedOutputStream(new FileOutputStream(fileCanonicalPath,fileAppend),4096),true);\n    }\n  }\n);\n}\n catch (PrivilegedActionException pae) {\n  throw new SqlException(null,new ClientMessageId(SQLState.UNABLE_TO_OPEN_FILE),new Object[]{fileName,pae.getMessage()},pae);\n}\n","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"printWriter","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"PrintWriter [printWriter\u003dnull]","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"METHOD_DECLARATION","change":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"CLASS_T","local":"java.client.org.apache.derby.jdbc.BasicClientDataSource40"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"ANONYMOUS_CLASS_DECLARATION","change":"{\n  public PrintWriter run() throws IOException {\n    String fileCanonicalPath\u003dnew File(fileName).getCanonicalPath();\n    return new PrintWriter(new BufferedOutputStream(new FileOutputStream(fileCanonicalPath,fileAppend),4096),true);\n  }\n}\n","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"ASSIGNMENT","change":"printWriter \u003d AccessController.doPrivileged(new PrivilegedExceptionAction\u003cPrintWriter\u003e(){\n  public PrintWriter run() throws IOException {\n    String fileCanonicalPath\u003dnew File(fileName).getCanonicalPath();\n    return new PrintWriter(new BufferedOutputStream(new FileOutputStream(fileCanonicalPath,fileAppend),4096),true);\n  }\n}\n)","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"CLASS_INSTANCE_CREATION","change":"new PrivilegedExceptionAction\u003cPrintWriter\u003e(){\n  public PrintWriter run() throws IOException {\n    String fileCanonicalPath\u003dnew File(fileName).getCanonicalPath();\n    return new PrintWriter(new BufferedOutputStream(new FileOutputStream(fileCanonicalPath,fileAppend),4096),true);\n  }\n}\n","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"EXPRESSION_STATEMENT","change":"printWriter\u003dAccessController.doPrivileged(new PrivilegedExceptionAction\u003cPrintWriter\u003e(){\n  public PrintWriter run() throws IOException {\n    String fileCanonicalPath\u003dnew File(fileName).getCanonicalPath();\n    return new PrintWriter(new BufferedOutputStream(new FileOutputStream(fileCanonicalPath,fileAppend),4096),true);\n  }\n}\n)","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"METHOD_INVOCATION","change":"AccessController.doPrivileged(new PrivilegedExceptionAction\u003cPrintWriter\u003e(){\n  public PrintWriter run() throws IOException {\n    String fileCanonicalPath\u003dnew File(fileName).getCanonicalPath();\n    return new PrintWriter(new BufferedOutputStream(new FileOutputStream(fileCanonicalPath,fileAppend),4096),true);\n  }\n}\n)","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"MODIFIER","change":"final","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"MODIFIER","change":"static","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"MODIFIER","change":"private","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"NULL_LITERAL","change":"null","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"PARAMETERIZED_TYPE","change":"PrivilegedExceptionAction\u003cPrintWriter\u003e","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"SIMPLE_TYPE","change":"PrintWriter","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"SIMPLE_TYPE","change":"PrivilegedExceptionAction","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"SIMPLE_TYPE","change":"SqlException","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"SINGLE_VARIABLE_DECLARATION","change":"final boolean fileAppend","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"SINGLE_VARIABLE_DECLARATION","change":"final String fileName","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"TRY_STATEMENT","change":"try {\n  printWriter\u003dAccessController.doPrivileged(new PrivilegedExceptionAction\u003cPrintWriter\u003e(){\n    public PrintWriter run() throws IOException {\n      String fileCanonicalPath\u003dnew File(fileName).getCanonicalPath();\n      return new PrintWriter(new BufferedOutputStream(new FileOutputStream(fileCanonicalPath,fileAppend),4096),true);\n    }\n  }\n);\n}\n catch (PrivilegedActionException pae) {\n  throw new SqlException(null,new ClientMessageId(SQLState.UNABLE_TO_OPEN_FILE),new Object[]{fileName,pae.getMessage()},pae);\n}\n","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"printWriter","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"PrintWriter [printWriter\u003dnull]","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"METHOD_INVOCATION","change":"getPrintWriter(fileName,true)","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"EXT_T","local":"org.apache.derby.jdbc.BasicClientDataSource40.computePrintWriter(PrintWriter,String,String,boolean,String,int)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"METHOD_INVOCATION","change":"getPrintWriter(traceFile,traceFileAppend)","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"EXT_T","local":"org.apache.derby.jdbc.BasicClientDataSource40.computePrintWriter(PrintWriter,String,String,boolean,String,int)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"RETURN_STATEMENT","change":"return getPrintWriter(fileName,true);\n","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"EXT_T","local":"org.apache.derby.jdbc.BasicClientDataSource40.computePrintWriter(PrintWriter,String,String,boolean,String,int)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"RETURN_STATEMENT","change":"return getPrintWriter(traceFile,traceFileAppend);\n","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":true,"scope":"EXT_T","local":"org.apache.derby.jdbc.BasicClientDataSource40.computePrintWriter(PrintWriter,String,String,boolean,String,int)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"METHOD_INVOCATION","change":"LogWriter.getPrintWriter(traceFile,traceFileAppend)","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"EXT_S","local":"org.apache.derby.jdbc.BasicClientDataSource40.computePrintWriter(PrintWriter,String,String,boolean,String,int)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"METHOD_INVOCATION","change":"LogWriter.getPrintWriter(fileName,true)","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"EXT_S","local":"org.apache.derby.jdbc.BasicClientDataSource40.computePrintWriter(PrintWriter,String,String,boolean,String,int)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"RETURN_STATEMENT","change":"return LogWriter.getPrintWriter(fileName,true);\n","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"EXT_S","local":"org.apache.derby.jdbc.BasicClientDataSource40.computePrintWriter(PrintWriter,String,String,boolean,String,int)"}
{"project":"apache_derby","commit":"6ac51606d9f69026df51465fc74e088a9cecdbac","changeType":"RETURN_STATEMENT","change":"return LogWriter.getPrintWriter(traceFile,traceFileAppend);\n","source":"org.apache.derby.client.am.LogWriter.getPrintWriter(String,boolean)","target":"org.apache.derby.jdbc.BasicClientDataSource40.getPrintWriter(String,boolean)","added":false,"scope":"EXT_S","local":"org.apache.derby.jdbc.BasicClientDataSource40.computePrintWriter(PrintWriter,String,String,boolean,String,int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"METHOD_DECLARATION","change":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"CLASS_T","local":"java.client.org.apache.derby.client.am.Agent"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"CLASS_INSTANCE_CREATION","change":"new ClientMessageId(SQLState.DATA_TYPE_NOT_SUPPORTED)","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"CLASS_INSTANCE_CREATION","change":"new SqlException(logWriter_,new ClientMessageId(SQLState.DATA_TYPE_NOT_SUPPORTED),Types.getTypeString(dataType))","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"JAVADOC","change":"/** \n * Checks whether a data type is supported for \u003ccode\u003esetObject(int, Object, int)\u003c/code\u003e and \u003ccode\u003esetObject(int, Object, int, int)\u003c/code\u003e.\n * @param dataType the data type to check\n * @exception SqlException if the type is not supported\n */\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"METHOD_INVOCATION","change":"Types.getTypeString(dataType)","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"MODIFIER","change":"public","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"SQLState.DATA_TYPE_NOT_SUPPORTED","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"java.sql","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"java.sql.Types","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"java.sql.Types.STRUCT","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.SQLXML","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.ROWID","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.REF_CURSOR","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"java.sql.Types.REF","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.LONGNVARCHAR","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.NVARCHAR","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.NCLOB","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.NCHAR","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"java.sql.Types.DATALINK","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"java.sql.Types.ARRAY","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SIMPLE_TYPE","change":"ClientMessageId","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SIMPLE_TYPE","change":"SqlException","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SINGLE_VARIABLE_DECLARATION","change":"int dataType","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case java.sql.Types.STRUCT:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case JDBC40Translation.SQLXML:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case JDBC40Translation.ROWID:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case JDBC40Translation.REF_CURSOR:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case java.sql.Types.REF:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case JDBC40Translation.LONGNVARCHAR:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case JDBC40Translation.NVARCHAR:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case JDBC40Translation.NCLOB:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case JDBC40Translation.NCHAR:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case java.sql.Types.DATALINK:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case java.sql.Types.ARRAY:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_STATEMENT","change":"switch (dataType) {\ncase java.sql.Types.ARRAY:\ncase java.sql.Types.DATALINK:\ncase JDBC40Translation.NCHAR:\ncase JDBC40Translation.NCLOB:\ncase JDBC40Translation.NVARCHAR:\ncase JDBC40Translation.LONGNVARCHAR:\ncase java.sql.Types.REF:\ncase JDBC40Translation.REF_CURSOR:\ncase JDBC40Translation.ROWID:\ncase JDBC40Translation.SQLXML:\ncase java.sql.Types.STRUCT:\n  throw new SqlException(logWriter_,new ClientMessageId(SQLState.DATA_TYPE_NOT_SUPPORTED),Types.getTypeString(dataType));\n}\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"THROW_STATEMENT","change":"throw new SqlException(logWriter_,new ClientMessageId(SQLState.DATA_TYPE_NOT_SUPPORTED),Types.getTypeString(dataType));\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"METHOD_DECLARATION","change":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"CLASS_S","local":"java.client.org.apache.derby.client.am.PreparedStatement"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"CLASS_INSTANCE_CREATION","change":"new ClientMessageId(SQLState.DATA_TYPE_NOT_SUPPORTED)","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"CLASS_INSTANCE_CREATION","change":"new SqlException(agent_.logWriter_,new ClientMessageId(SQLState.DATA_TYPE_NOT_SUPPORTED),Types.getTypeString(dataType))","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"JAVADOC","change":"/** \n * Checks whether a data type is supported for \u003ccode\u003esetObject(int, Object, int)\u003c/code\u003e and \u003ccode\u003esetObject(int, Object, int, int)\u003c/code\u003e.\n * @param dataType the data type to check\n * @exception SqlException if the type is not supported\n */\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"METHOD_INVOCATION","change":"Types.getTypeString(dataType)","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"MODIFIER","change":"private","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"SQLState.DATA_TYPE_NOT_SUPPORTED","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"agent_.logWriter_","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"java.sql","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"java.sql.Types","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"java.sql.Types.STRUCT","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.SQLXML","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.ROWID","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.REF_CURSOR","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"java.sql.Types.REF","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.LONGNVARCHAR","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.NVARCHAR","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.NCLOB","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.NCHAR","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"java.sql.Types.DATALINK","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"QUALIFIED_NAME","change":"java.sql.Types.ARRAY","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SIMPLE_TYPE","change":"ClientMessageId","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SIMPLE_TYPE","change":"SqlException","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SINGLE_VARIABLE_DECLARATION","change":"int dataType","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case java.sql.Types.STRUCT:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case JDBC40Translation.SQLXML:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case JDBC40Translation.ROWID:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case JDBC40Translation.REF_CURSOR:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case java.sql.Types.REF:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case JDBC40Translation.LONGNVARCHAR:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case JDBC40Translation.NVARCHAR:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case JDBC40Translation.NCLOB:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case JDBC40Translation.NCHAR:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case java.sql.Types.DATALINK:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_CASE","change":"case java.sql.Types.ARRAY:\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SWITCH_STATEMENT","change":"switch (dataType) {\ncase java.sql.Types.ARRAY:\ncase java.sql.Types.DATALINK:\ncase JDBC40Translation.NCHAR:\ncase JDBC40Translation.NCLOB:\ncase JDBC40Translation.NVARCHAR:\ncase JDBC40Translation.LONGNVARCHAR:\ncase java.sql.Types.REF:\ncase JDBC40Translation.REF_CURSOR:\ncase JDBC40Translation.ROWID:\ncase JDBC40Translation.SQLXML:\ncase java.sql.Types.STRUCT:\n  throw new SqlException(agent_.logWriter_,new ClientMessageId(SQLState.DATA_TYPE_NOT_SUPPORTED),Types.getTypeString(dataType));\n}\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"THROW_STATEMENT","change":"throw new SqlException(agent_.logWriter_,new ClientMessageId(SQLState.DATA_TYPE_NOT_SUPPORTED),Types.getTypeString(dataType));\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"EXPRESSION_STATEMENT","change":"agent_.checkForSupportedDataType(jdbcType)","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.PreparedStatement.setNull(int,int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"METHOD_INVOCATION","change":"agent_.checkForSupportedDataType(jdbcType)","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.PreparedStatement.setNull(int,int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SYNCHRONIZED_STATEMENT","change":"synchronized (connection_) {\n  if (agent_.loggingEnabled()) {\n    agent_.logWriter_.traceEntry(this,\"setNull\",parameterIndex,jdbcType);\n  }\n  checkForClosedStatement();\n  agent_.checkForSupportedDataType(jdbcType);\n  final int paramType\u003dgetColumnMetaDataX().getColumnType(parameterIndex);\n  if (!PossibleTypes.getPossibleTypesForNull(paramType).checkType(jdbcType)) {\n    PossibleTypes.throw22005Exception(agent_.logWriter_,jdbcType,paramType);\n  }\n  setNullX(parameterIndex,jdbcType);\n}\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.PreparedStatement.setNull(int,int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"TRY_STATEMENT","change":"try {\nsynchronized (connection_) {\n    if (agent_.loggingEnabled()) {\n      agent_.logWriter_.traceEntry(this,\"setNull\",parameterIndex,jdbcType);\n    }\n    checkForClosedStatement();\n    agent_.checkForSupportedDataType(jdbcType);\n    final int paramType\u003dgetColumnMetaDataX().getColumnType(parameterIndex);\n    if (!PossibleTypes.getPossibleTypesForNull(paramType).checkType(jdbcType)) {\n      PossibleTypes.throw22005Exception(agent_.logWriter_,jdbcType,paramType);\n    }\n    setNullX(parameterIndex,jdbcType);\n  }\n}\n catch (SqlException se) {\n  throw se.getSQLException();\n}\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.PreparedStatement.setNull(int,int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"EXPRESSION_STATEMENT","change":"checkForSupportedDataType(jdbcType)","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"EXT_S","local":"org.apache.derby.client.am.PreparedStatement.setNull(int,int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"METHOD_INVOCATION","change":"checkForSupportedDataType(jdbcType)","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"EXT_S","local":"org.apache.derby.client.am.PreparedStatement.setNull(int,int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"SYNCHRONIZED_STATEMENT","change":"synchronized (connection_) {\n  if (agent_.loggingEnabled()) {\n    agent_.logWriter_.traceEntry(this,\"setNull\",parameterIndex,jdbcType);\n  }\n  checkForClosedStatement();\n  checkForSupportedDataType(jdbcType);\n  final int paramType\u003dgetColumnMetaDataX().getColumnType(parameterIndex);\n  if (!PossibleTypes.getPossibleTypesForNull(paramType).checkType(jdbcType)) {\n    PossibleTypes.throw22005Exception(agent_.logWriter_,jdbcType,paramType);\n  }\n  setNullX(parameterIndex,jdbcType);\n}\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"EXT_S","local":"org.apache.derby.client.am.PreparedStatement.setNull(int,int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"TRY_STATEMENT","change":"try {\nsynchronized (connection_) {\n    if (agent_.loggingEnabled()) {\n      agent_.logWriter_.traceEntry(this,\"setNull\",parameterIndex,jdbcType);\n    }\n    checkForClosedStatement();\n    checkForSupportedDataType(jdbcType);\n    final int paramType\u003dgetColumnMetaDataX().getColumnType(parameterIndex);\n    if (!PossibleTypes.getPossibleTypesForNull(paramType).checkType(jdbcType)) {\n      PossibleTypes.throw22005Exception(agent_.logWriter_,jdbcType,paramType);\n    }\n    setNullX(parameterIndex,jdbcType);\n  }\n}\n catch (SqlException se) {\n  throw se.getSQLException();\n}\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"EXT_S","local":"org.apache.derby.client.am.PreparedStatement.setNull(int,int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"EXPRESSION_STATEMENT","change":"agent_.checkForSupportedDataType(targetJdbcType)","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.PreparedStatement.setObjectX(int,Object,int,int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"METHOD_INVOCATION","change":"agent_.checkForSupportedDataType(targetJdbcType)","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.PreparedStatement.setObjectX(int,Object,int,int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"EXPRESSION_STATEMENT","change":"checkForSupportedDataType(targetJdbcType)","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"EXT_S","local":"org.apache.derby.client.am.PreparedStatement.setObjectX(int,Object,int,int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"METHOD_INVOCATION","change":"checkForSupportedDataType(targetJdbcType)","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":false,"scope":"EXT_S","local":"org.apache.derby.client.am.PreparedStatement.setObjectX(int,Object,int,int)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"EXPRESSION_STATEMENT","change":"agent.checkForSupportedDataType(jdbcType)","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Utils42.getTypeAsInt(Agent,SQLType)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"METHOD_INVOCATION","change":"agent.checkForSupportedDataType(jdbcType)","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Utils42.getTypeAsInt(Agent,SQLType)"}
{"project":"apache_derby","commit":"9f0c37aef1916a60ac622bf6d3604abe894b4d3f","changeType":"TRY_STATEMENT","change":"try {\n  agent.checkForSupportedDataType(jdbcType);\n}\n catch (SqlException se) {\n  throw se.getSQLException();\n}\n","source":"org.apache.derby.client.am.PreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.client.am.Agent.checkForSupportedDataType(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Utils42.getTypeAsInt(Agent,SQLType)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_DECLARATION","change":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"CLASS_S","local":"java.testing.org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"EXPRESSION_STATEMENT","change":"System.out.print(\",\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"EXPRESSION_STATEMENT","change":"System.out.println(\"}\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"EXPRESSION_STATEMENT","change":"System.out.print(\"\\\"\" + rs.getString(i + 1) + \"\\\"\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"EXPRESSION_STATEMENT","change":"System.out.print(\"{\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"EXPRESSION_STATEMENT","change":"row++","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"FOR_STATEMENT","change":"for (int i\u003d0; i \u003c nocols; i++) {\n  System.out.print(\"\\\"\" + rs.getString(i + 1) + \"\\\"\");\n  if (i \u003d\u003d (nocols - 1))   System.out.println(\"}\");\n else   System.out.print(\",\");\n}\n","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"IF_STATEMENT","change":"i \u003d\u003d (nocols - 1)","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"INFIX_EXPRESSION","change":"nocols - 1","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"INFIX_EXPRESSION","change":"i \u003d\u003d (nocols - 1)","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"INFIX_EXPRESSION","change":"i + 1","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"INFIX_EXPRESSION","change":"\"\\\"\" + rs.getString(i + 1) + \"\\\"\"","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"INFIX_EXPRESSION","change":"i \u003c nocols","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"System.out.print(\",\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"System.out.println(\"}\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"rs.getString(i + 1)","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"System.out.print(\"\\\"\" + rs.getString(i + 1) + \"\\\"\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"System.out.print(\"{\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"rsmd.getColumnCount()","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"rs.getMetaData()","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"rs.next()","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"MODIFIER","change":"private","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"NUMBER_LITERAL","change":"1","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"PARENTHESIZED_EXPRESSION","change":"(nocols - 1)","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"POSTFIX_EXPRESSION","change":"i++","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"POSTFIX_EXPRESSION","change":"row++","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"QUALIFIED_NAME","change":"System.out","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"SIMPLE_TYPE","change":"ResultSetMetaData","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"SIMPLE_TYPE","change":"SQLException","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"SIMPLE_TYPE","change":"ResultSet","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ResultSet rs","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"STRING_LITERAL","change":",","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"STRING_LITERAL","change":"}","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"STRING_LITERAL","change":"\"","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"STRING_LITERAL","change":"{","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_EXPRESSION","change":"int [i\u003d0]","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"i","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"nocols","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"rsmd","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"row","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [nocols\u003drsmd.getColumnCount()]","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"ResultSetMetaData [rsmd\u003drs.getMetaData()]","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [row\u003d0]","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"WHILE_STATEMENT","change":"while (rs.next()) {\n  row++;\n  ResultSetMetaData rsmd\u003drs.getMetaData();\n  int nocols\u003drsmd.getColumnCount();\n  System.out.print(\"{\");\n  for (int i\u003d0; i \u003c nocols; i++) {\n    System.out.print(\"\\\"\" + rs.getString(i + 1) + \"\\\"\");\n    if (i \u003d\u003d (nocols - 1))     System.out.println(\"}\");\n else     System.out.print(\",\");\n  }\n}\n","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_DECLARATION","change":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"CLASS_T","local":"java.testing.org.apache.derbyTesting.junit.Utilities"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"ASSIGNMENT","change":"next \u003d rs.next()","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"EXPRESSION_STATEMENT","change":"System.out.println(\"};\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"EXPRESSION_STATEMENT","change":"System.out.println(\",\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"EXPRESSION_STATEMENT","change":"next\u003drs.next()","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"EXPRESSION_STATEMENT","change":"System.out.print(\",\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"EXPRESSION_STATEMENT","change":"System.out.print(\"}\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"EXPRESSION_STATEMENT","change":"System.out.print(\"\\\"\" + rs.getString(i + 1) + \"\\\"\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"EXPRESSION_STATEMENT","change":"System.out.print(\"{\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"EXPRESSION_STATEMENT","change":"row++","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"FOR_STATEMENT","change":"for (int i\u003d0; i \u003c nocols; i++) {\n  System.out.print(\"\\\"\" + rs.getString(i + 1) + \"\\\"\");\n  if (i \u003d\u003d (nocols - 1))   System.out.print(\"}\");\n else   System.out.print(\",\");\n}\n","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"IF_STATEMENT","change":"next","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"IF_STATEMENT","change":"i \u003d\u003d (nocols - 1)","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"INFIX_EXPRESSION","change":"nocols - 1","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"INFIX_EXPRESSION","change":"i \u003d\u003d (nocols - 1)","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"INFIX_EXPRESSION","change":"i + 1","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"INFIX_EXPRESSION","change":"\"\\\"\" + rs.getString(i + 1) + \"\\\"\"","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"INFIX_EXPRESSION","change":"i \u003c nocols","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"JAVADOC","change":"/** \n * Print out resultSet in two dimensional array format, for use by JDBC.assertFullResultSet(rs,expectedRows) expectedRows argument. Useful while converting tests to get output in correct format.\n * @param rs\n * @throws SQLException\n */\n","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"System.out.println(\"};\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"System.out.println(\",\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"rs.next()","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"System.out.print(\",\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"System.out.print(\"}\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"rs.getString(i + 1)","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"System.out.print(\"\\\"\" + rs.getString(i + 1) + \"\\\"\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"System.out.print(\"{\")","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"rsmd.getColumnCount()","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"METHOD_INVOCATION","change":"rs.getMetaData()","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"MODIFIER","change":"static","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"MODIFIER","change":"public","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"NUMBER_LITERAL","change":"1","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"PARENTHESIZED_EXPRESSION","change":"(nocols - 1)","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"POSTFIX_EXPRESSION","change":"i++","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"POSTFIX_EXPRESSION","change":"row++","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"QUALIFIED_NAME","change":"System.out","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"SIMPLE_TYPE","change":"ResultSetMetaData","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"SIMPLE_TYPE","change":"SQLException","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"SIMPLE_TYPE","change":"ResultSet","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ResultSet rs","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"STRING_LITERAL","change":"};","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"STRING_LITERAL","change":",","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"STRING_LITERAL","change":"}","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"STRING_LITERAL","change":"\"","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"STRING_LITERAL","change":"{","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_EXPRESSION","change":"int [i\u003d0]","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"i","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"nocols","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"rsmd","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"next","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"row","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [nocols\u003drsmd.getColumnCount()]","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"ResultSetMetaData [rsmd\u003drs.getMetaData()]","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"boolean [next\u003drs.next()]","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [row\u003d0]","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"48154b2d9eb0a2db8f018bde676e6f968ded4931","changeType":"WHILE_STATEMENT","change":"while (next) {\n  row++;\n  ResultSetMetaData rsmd\u003drs.getMetaData();\n  int nocols\u003drsmd.getColumnCount();\n  System.out.print(\"{\");\n  for (int i\u003d0; i \u003c nocols; i++) {\n    System.out.print(\"\\\"\" + rs.getString(i + 1) + \"\\\"\");\n    if (i \u003d\u003d (nocols - 1))     System.out.print(\"}\");\n else     System.out.print(\",\");\n  }\n  next\u003drs.next();\n  if (next)   System.out.println(\",\");\n else   System.out.println(\"};\");\n}\n","source":"org.apache.derbyTesting.functionTests.tests.lang.ProcedureInTriggerTest.showResultSet(ResultSet)","target":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.Utilities.showResultSet(ResultSet)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"CLASS_T","local":"java.engine.org.apache.derby.impl.jdbc.ConnectionChild"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"JAVADOC","change":"/** \n * Checks whether a data type is supported for \u003ccode\u003esetObject(int, Object, int)\u003c/code\u003e and \u003ccode\u003esetObject(int, Object, int, int)\u003c/code\u003e.\n * @param dataType the data type to check\n * @exception SQLException if the type is not supported\n */\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"METHOD_INVOCATION","change":"Util.typeName(dataType)","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"METHOD_INVOCATION","change":"newSQLException(SQLState.DATA_TYPE_NOT_SUPPORTED,Util.typeName(dataType))","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"MODIFIER","change":"public","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"SQLState.DATA_TYPE_NOT_SUPPORTED","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"Types.STRUCT","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.SQLXML","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.ROWID","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.REF_CURSOR","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"Types.REF","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.LONGNVARCHAR","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.NVARCHAR","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.NCLOB","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.NCHAR","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"Types.DATALINK","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"Types.ARRAY","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SIMPLE_TYPE","change":"SQLException","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SINGLE_VARIABLE_DECLARATION","change":"int dataType","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case Types.STRUCT:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case JDBC40Translation.SQLXML:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case JDBC40Translation.ROWID:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case JDBC40Translation.REF_CURSOR:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case Types.REF:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case JDBC40Translation.LONGNVARCHAR:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case JDBC40Translation.NVARCHAR:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case JDBC40Translation.NCLOB:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case JDBC40Translation.NCHAR:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case Types.DATALINK:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case Types.ARRAY:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_STATEMENT","change":"switch (dataType) {\ncase Types.ARRAY:\ncase Types.DATALINK:\ncase JDBC40Translation.NCHAR:\ncase JDBC40Translation.NCLOB:\ncase JDBC40Translation.NVARCHAR:\ncase JDBC40Translation.LONGNVARCHAR:\ncase Types.REF:\ncase JDBC40Translation.REF_CURSOR:\ncase JDBC40Translation.ROWID:\ncase JDBC40Translation.SQLXML:\ncase Types.STRUCT:\n  throw newSQLException(SQLState.DATA_TYPE_NOT_SUPPORTED,Util.typeName(dataType));\n}\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"THROW_STATEMENT","change":"throw newSQLException(SQLState.DATA_TYPE_NOT_SUPPORTED,Util.typeName(dataType));\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"CLASS_S","local":"java.engine.org.apache.derby.impl.jdbc.EmbedPreparedStatement"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"JAVADOC","change":"/** \n * Checks whether a data type is supported for \u003ccode\u003esetObject(int, Object, int)\u003c/code\u003e and \u003ccode\u003esetObject(int, Object, int, int)\u003c/code\u003e.\n * @param dataType the data type to check\n * @exception SQLException if the type is not supported\n */\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"METHOD_INVOCATION","change":"Util.typeName(dataType)","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"METHOD_INVOCATION","change":"newSQLException(SQLState.DATA_TYPE_NOT_SUPPORTED,Util.typeName(dataType))","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"MODIFIER","change":"private","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"SQLState.DATA_TYPE_NOT_SUPPORTED","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"Types.STRUCT","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.SQLXML","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.ROWID","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"Types.REF","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.LONGNVARCHAR","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.NVARCHAR","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.NCLOB","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"JDBC40Translation.NCHAR","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"Types.DATALINK","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"QUALIFIED_NAME","change":"Types.ARRAY","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SIMPLE_TYPE","change":"SQLException","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SINGLE_VARIABLE_DECLARATION","change":"int dataType","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case Types.STRUCT:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case JDBC40Translation.SQLXML:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case JDBC40Translation.ROWID:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case Types.REF:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case JDBC40Translation.LONGNVARCHAR:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case JDBC40Translation.NVARCHAR:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case JDBC40Translation.NCLOB:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case JDBC40Translation.NCHAR:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case Types.DATALINK:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_CASE","change":"case Types.ARRAY:\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"SWITCH_STATEMENT","change":"switch (dataType) {\ncase Types.ARRAY:\ncase Types.DATALINK:\ncase JDBC40Translation.NCHAR:\ncase JDBC40Translation.NCLOB:\ncase JDBC40Translation.NVARCHAR:\ncase JDBC40Translation.LONGNVARCHAR:\ncase Types.REF:\ncase JDBC40Translation.ROWID:\ncase JDBC40Translation.SQLXML:\ncase Types.STRUCT:\n  throw newSQLException(SQLState.DATA_TYPE_NOT_SUPPORTED,Util.typeName(dataType));\n}\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"THROW_STATEMENT","change":"throw newSQLException(SQLState.DATA_TYPE_NOT_SUPPORTED,Util.typeName(dataType));\n","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"EXPRESSION_STATEMENT","change":"connChild.checkForSupportedDataType(jdbcType)","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.jdbc.Util42.getTypeAsInt(ConnectionChild,SQLType)"}
{"project":"apache_derby","commit":"7cfb7e6fe52a683abd962207fdbd80b2f1de8588","changeType":"METHOD_INVOCATION","change":"connChild.checkForSupportedDataType(jdbcType)","source":"org.apache.derby.impl.jdbc.EmbedPreparedStatement.checkForSupportedDataType(int)","target":"org.apache.derby.impl.jdbc.ConnectionChild.checkForSupportedDataType(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.jdbc.Util42.getTypeAsInt(ConnectionChild,SQLType)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"CLASS_T","local":"java.engine.org.apache.derby.impl.sql.execute.DMLWriteResultSet"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"EXPRESSION_STATEMENT","change":"SanityManager.ASSERT(!isClosed())","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"IF_STATEMENT","change":"isolationLevel \u003d\u003d ExecutionContext.SERIALIZABLE_ISOLATION_LEVEL","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"IF_STATEMENT","change":"(lockMode \u003e\u003e\u003e 16) \u003d\u003d 0","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"IF_STATEMENT","change":"SanityManager.DEBUG","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"INFIX_EXPRESSION","change":"lockMode \u0026 0xff","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"INFIX_EXPRESSION","change":"lockMode \u003e\u003e\u003e 16","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"INFIX_EXPRESSION","change":"isolationLevel \u003d\u003d ExecutionContext.SERIALIZABLE_ISOLATION_LEVEL","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"INFIX_EXPRESSION","change":"(lockMode \u003e\u003e\u003e 16) \u003d\u003d 0","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"JAVADOC","change":"/** \n * Decode the update lock mode. \u003cp\u003e The value for update lock mode is in the second most significant byte for ExecutionContext.SERIALIZABLE_ISOLATION_LEVEL isolation level. Otherwise (REPEATABLE READ, READ COMMITTED, and READ UNCOMMITTED) the lock mode is located in the least significant byte. \u003cp\u003e This is done to override the optimizer choice to provide maximum  concurrency of record level locking except in SERIALIZABLE where table level locking is required in heap scans for correctness.\n * @param lockMode the compiled encoded lock mode for this query\n * @return the lock mode (record or table) to use to open the result set\n * @see org.apache.derby.impl.sql.compile.FromBaseTable#updateTargetLockMode\n */\n","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"METHOD_INVOCATION","change":"lcc.getCurrentIsolationLevel()","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"METHOD_INVOCATION","change":"isClosed()","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"METHOD_INVOCATION","change":"SanityManager.ASSERT(!isClosed())","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"NUMBER_LITERAL","change":"0xff","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"NUMBER_LITERAL","change":"16","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"PARENTHESIZED_EXPRESSION","change":"(lockMode \u003e\u003e\u003e 16)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"PREFIX_EXPRESSION","change":"!isClosed()","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"QUALIFIED_NAME","change":"ExecutionContext.SERIALIZABLE_ISOLATION_LEVEL","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"QUALIFIED_NAME","change":"SanityManager.DEBUG","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"RETURN_STATEMENT","change":"return lockMode \u0026 0xff;\n","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"RETURN_STATEMENT","change":"return lockMode \u003e\u003e\u003e 16;\n","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"RETURN_STATEMENT","change":"return lockMode;\n","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"SINGLE_VARIABLE_DECLARATION","change":"int lockMode","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"isolationLevel","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [isolationLevel\u003dlcc.getCurrentIsolationLevel()]","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"ASSIGNMENT","change":"lockMode \u003d decodeLockMode(constants.lockMode)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.execute.DeleteResultSet.setup()"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"EXPRESSION_STATEMENT","change":"lockMode\u003ddecodeLockMode(constants.lockMode)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.execute.DeleteResultSet.setup()"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"METHOD_INVOCATION","change":"decodeLockMode(constants.lockMode)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.execute.DeleteResultSet.setup()"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"ASSIGNMENT","change":"lockMode \u003d UpdateResultSet.decodeLockMode(lcc,constants.lockMode)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.execute.DeleteResultSet.setup()"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"EXPRESSION_STATEMENT","change":"lockMode\u003dUpdateResultSet.decodeLockMode(lcc,constants.lockMode)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.execute.DeleteResultSet.setup()"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"METHOD_INVOCATION","change":"UpdateResultSet.decodeLockMode(lcc,constants.lockMode)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.execute.DeleteResultSet.setup()"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"METHOD_INVOCATION","change":"decodeLockMode(constants.lockMode)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(LanguageConnectionContext,boolean)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [lockMode\u003ddecodeLockMode(constants.lockMode)]","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(LanguageConnectionContext,boolean)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"METHOD_INVOCATION","change":"UpdateResultSet.decodeLockMode(lcc,constants.lockMode)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(LanguageConnectionContext,boolean)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [lockMode\u003dUpdateResultSet.decodeLockMode(lcc,constants.lockMode)]","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.execute.InsertResultSet.normalInsertCore(LanguageConnectionContext,boolean)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"CLASS_S","local":"java.engine.org.apache.derby.impl.sql.execute.UpdateResultSet"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"ASSIGNMENT","change":"lockMode \u003d lockMode \u003e\u003e\u003e 16","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"ASSIGNMENT","change":"lockMode \u003d lockMode \u0026 0xff","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"EXPRESSION_STATEMENT","change":"lockMode\u003dlockMode \u003e\u003e\u003e 16","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"EXPRESSION_STATEMENT","change":"lockMode\u003dlockMode \u0026 0xff","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"IF_STATEMENT","change":"isolationLevel !\u003d ExecutionContext.SERIALIZABLE_ISOLATION_LEVEL","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"IF_STATEMENT","change":"(lockMode \u003e\u003e\u003e 16) !\u003d 0","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"INFIX_EXPRESSION","change":"lockMode \u003e\u003e\u003e 16","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"INFIX_EXPRESSION","change":"lockMode \u0026 0xff","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"INFIX_EXPRESSION","change":"isolationLevel !\u003d ExecutionContext.SERIALIZABLE_ISOLATION_LEVEL","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"INFIX_EXPRESSION","change":"(lockMode \u003e\u003e\u003e 16) !\u003d 0","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"JAVADOC","change":"/** \n * Decode the update lock mode. \u003cp\u003e The value for update lock mode is in the 2nd 2 bytes for  ExecutionContext.SERIALIZABLE_ISOLATION_LEVEL isolation level.  Otherwise (REPEATABLE READ, READ COMMITTED, and READ UNCOMMITTED) the lock mode is located in the first 2 bytes. \u003cp\u003e This is done to override the optimizer choice to provide maximum  concurrency of record level locking except in SERIALIZABLE where table level locking is required in heap scans for correctness. \u003cp\u003e See Compilation!QueryTree!FromBaseTable for encoding of the lockmode. \u003cp\u003e\n * @return The lock mode (record or table) to use to open the result set.\n * @param lcc       The context to look for current isolation level.\n * @param lockMode  The compiled encoded lock mode for this query.\n * @exception StandardException  Standard exception policy.\n */\n","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"METHOD_INVOCATION","change":"lcc.getCurrentIsolationLevel()","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"MODIFIER","change":"static","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"MODIFIER","change":"protected","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"NUMBER_LITERAL","change":"16","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"NUMBER_LITERAL","change":"0xff","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"PARENTHESIZED_EXPRESSION","change":"(lockMode \u003e\u003e\u003e 16)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"QUALIFIED_NAME","change":"ExecutionContext.SERIALIZABLE_ISOLATION_LEVEL","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"RETURN_STATEMENT","change":"return lockMode;\n","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"SIMPLE_TYPE","change":"LanguageConnectionContext","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"SINGLE_VARIABLE_DECLARATION","change":"int lockMode","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"SINGLE_VARIABLE_DECLARATION","change":"LanguageConnectionContext lcc","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"isolationLevel","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [isolationLevel\u003dlcc.getCurrentIsolationLevel()]","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"ASSIGNMENT","change":"lockMode \u003d decodeLockMode(lcc,constants.lockMode)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.UpdateResultSet(NoPutResultSet,GeneratedMethod,Activation,ConstantAction,ResultDescription)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"EXPRESSION_STATEMENT","change":"lockMode\u003ddecodeLockMode(lcc,constants.lockMode)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.UpdateResultSet(NoPutResultSet,GeneratedMethod,Activation,ConstantAction,ResultDescription)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"METHOD_INVOCATION","change":"decodeLockMode(lcc,constants.lockMode)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.UpdateResultSet(NoPutResultSet,GeneratedMethod,Activation,ConstantAction,ResultDescription)"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"ASSIGNMENT","change":"lockMode \u003d decodeLockMode(constants.lockMode)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.setup()"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"EXPRESSION_STATEMENT","change":"lockMode\u003ddecodeLockMode(constants.lockMode)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.setup()"}
{"project":"apache_derby","commit":"6369b54cb89ff232279f44ca389e2b7c8dad05b6","changeType":"METHOD_INVOCATION","change":"decodeLockMode(constants.lockMode)","source":"org.apache.derby.impl.sql.execute.UpdateResultSet.decodeLockMode(LanguageConnectionContext,int)","target":"org.apache.derby.impl.sql.execute.DMLWriteResultSet.decodeLockMode(int)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.execute.UpdateResultSet.setup()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_DECLARATION","change":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"CLASS_T","local":"java.client.org.apache.derby.client.am.LogWriter"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"ASSIGNMENT","change":"value \u003d \"********\"","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"CAST_EXPRESSION","change":"(String)attribute.getContent()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"CAST_EXPRESSION","change":"(RefAddr)e.nextElement()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"CATCH_CLAUSE","change":"catch (NamingException e) {\n  throw new SqlException(this,e.toString());\n}\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"CLASS_INSTANCE_CREATION","change":"new SqlException(this,e.toString())","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"CLASS_INSTANCE_CREATION","change":"new Properties()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"EXPRESSION_STATEMENT","change":"properties.setProperty(propertyKey,value)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"EXPRESSION_STATEMENT","change":"value\u003d\"********\"","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"FOR_STATEMENT","change":"for (Enumeration e\u003dref.getAll(); e.hasMoreElements(); ) {\n  RefAddr attribute\u003d(RefAddr)e.nextElement();\n  String propertyKey\u003dattribute.getType();\n  String value\u003d(String)attribute.getContent();\n  if (Attribute.PASSWORD_ATTR.equals(propertyKey)) {\n    value\u003d\"********\";\n  }\n  properties.setProperty(propertyKey,value);\n}\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"IF_STATEMENT","change":"Attribute.PASSWORD_ATTR.equals(propertyKey)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"JAVADOC","change":"/** \n * Obtain a set of Properties for the ClientDataSource\n */\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"e.toString()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"properties.setProperty(propertyKey,value)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"Attribute.PASSWORD_ATTR.equals(propertyKey)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"attribute.getContent()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"attribute.getType()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"e.nextElement()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"e.hasMoreElements()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"ref.getAll()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"cds.getReference()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"MODIFIER","change":"private","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"QUALIFIED_NAME","change":"Attribute.PASSWORD_ATTR","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"RETURN_STATEMENT","change":"return properties;\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"SqlException","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"NamingException","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"RefAddr","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"Enumeration","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"Reference","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"Properties","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"ClientDataSource","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"NamingException e","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ClientDataSource cds","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"STRING_LITERAL","change":"********","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"THIS_EXPRESSION","change":"this","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"THROW_STATEMENT","change":"throw new SqlException(this,e.toString());\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"TRY_STATEMENT","change":"try {\n  Reference ref\u003dcds.getReference();\n  for (Enumeration e\u003dref.getAll(); e.hasMoreElements(); ) {\n    RefAddr attribute\u003d(RefAddr)e.nextElement();\n    String propertyKey\u003dattribute.getType();\n    String value\u003d(String)attribute.getContent();\n    if (Attribute.PASSWORD_ATTR.equals(propertyKey)) {\n      value\u003d\"********\";\n    }\n    properties.setProperty(propertyKey,value);\n  }\n}\n catch (NamingException e) {\n  throw new SqlException(this,e.toString());\n}\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_EXPRESSION","change":"Enumeration [e\u003dref.getAll()]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"value","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"propertyKey","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"attribute","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"e","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"ref","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"properties","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [value\u003d(String)attribute.getContent()]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [propertyKey\u003dattribute.getType()]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"RefAddr [attribute\u003d(RefAddr)e.nextElement()]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Reference [ref\u003dcds.getReference()]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Properties [properties\u003dnew Properties()]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"EXPRESSION_STATEMENT","change":"traceConnectsResetEntry(dataSource.getServerName(),dataSource.getPortNumber(),dataSource.getDatabaseName(),getProperties(dataSource))","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"getProperties(dataSource)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"traceConnectsResetEntry(dataSource.getServerName(),dataSource.getPortNumber(),dataSource.getDatabaseName(),getProperties(dataSource))","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"TRY_STATEMENT","change":"try {\n  if (traceSuspended()) {\n    return;\n  }\n  traceConnectsResetEntry(dataSource.getServerName(),dataSource.getPortNumber(),dataSource.getDatabaseName(),getProperties(dataSource));\n}\n catch (SqlException se) {\n  dncprintln(\"Encountered an SQL exception while trying to trace connection reset entry\");\n}\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"EXPRESSION_STATEMENT","change":"traceConnectsResetEntry(dataSource.getServerName(),dataSource.getPortNumber(),dataSource.getDatabaseName(),dataSource.getProperties())","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"traceConnectsResetEntry(dataSource.getServerName(),dataSource.getPortNumber(),dataSource.getDatabaseName(),dataSource.getProperties())","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"dataSource.getProperties()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"TRY_STATEMENT","change":"try {\n  if (traceSuspended()) {\n    return;\n  }\n  traceConnectsResetEntry(dataSource.getServerName(),dataSource.getPortNumber(),dataSource.getDatabaseName(),dataSource.getProperties());\n}\n catch (SqlException se) {\n  dncprintln(\"Encountered an SQL exception while trying to trace connection reset entry\");\n}\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.LogWriter.traceConnectsResetEntry(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"EXPRESSION_STATEMENT","change":"traceConnectsEntry(dataSource.getServerName(),dataSource.getPortNumber(),dataSource.getDatabaseName(),getProperties(dataSource))","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"getProperties(dataSource)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"traceConnectsEntry(dataSource.getServerName(),dataSource.getPortNumber(),dataSource.getDatabaseName(),getProperties(dataSource))","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"TRY_STATEMENT","change":"try {\n  if (traceSuspended()) {\n    return;\n  }\n  traceConnectsEntry(dataSource.getServerName(),dataSource.getPortNumber(),dataSource.getDatabaseName(),getProperties(dataSource));\n}\n catch (SqlException se) {\n  dncprintln(\"Encountered an SQL exception while trying to trace connection entry\");\n}\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"EXPRESSION_STATEMENT","change":"traceConnectsEntry(dataSource.getServerName(),dataSource.getPortNumber(),dataSource.getDatabaseName(),dataSource.getProperties())","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"traceConnectsEntry(dataSource.getServerName(),dataSource.getPortNumber(),dataSource.getDatabaseName(),dataSource.getProperties())","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"dataSource.getProperties()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"TRY_STATEMENT","change":"try {\n  if (traceSuspended()) {\n    return;\n  }\n  traceConnectsEntry(dataSource.getServerName(),dataSource.getPortNumber(),dataSource.getDatabaseName(),dataSource.getProperties());\n}\n catch (SqlException se) {\n  dncprintln(\"Encountered an SQL exception while trying to trace connection entry\");\n}\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.LogWriter.traceConnectsEntry(ClientDataSource)"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_DECLARATION","change":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"CLASS_S","local":"java.client.org.apache.derby.jdbc.ClientBaseDataSource"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"ARRAY_ACCESS","change":"fields[i]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"ARRAY_TYPE","change":"Field[]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"ASSIGNMENT","change":"property \u003d sb.toString()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"ASSIGNMENT","change":"clz \u003d clz.getSuperclass()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"ASSIGNMENT","change":"propertyField \u003d clz.getDeclaredField(name.substring(12))","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"ASSIGNMENT","change":"clz \u003d getClass()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"BOOLEAN_LITERAL","change":"true","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"BREAK_STATEMENT","change":"break;\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"CATCH_CLAUSE","change":"catch (IllegalAccessException e) {\n  throw new SqlException(new LogWriter(this.logWriter,this.traceLevel),\"bug check: property cannot be accessed\");\n}\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"CATCH_CLAUSE","change":"catch (NoSuchFieldException nsfe) {\n  clz\u003dclz.getSuperclass();\n  if (clz \u003d\u003d Object.class) {\n    throw new SqlException(new LogWriter(logWriter,traceLevel),\"bug check: corresponding property field does not exist\");\n  }\n  continue;\n}\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"CHARACTER_LITERAL","change":"\u0027*\u0027","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"CLASS_INSTANCE_CREATION","change":"new LogWriter(this.logWriter,this.traceLevel)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"CLASS_INSTANCE_CREATION","change":"new SqlException(new LogWriter(this.logWriter,this.traceLevel),\"bug check: property cannot be accessed\")","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"CLASS_INSTANCE_CREATION","change":"new StringBuffer(property)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"CLASS_INSTANCE_CREATION","change":"new LogWriter(logWriter,traceLevel)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"CLASS_INSTANCE_CREATION","change":"new SqlException(new LogWriter(logWriter,traceLevel),\"bug check: corresponding property field does not exist\")","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"CLASS_INSTANCE_CREATION","change":"new Properties()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"CONTINUE_STATEMENT","change":"continue;\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"DIMENSION","change":"[]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"EXPRESSION_STATEMENT","change":"properties.setProperty(propertyKey,property)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"EXPRESSION_STATEMENT","change":"property\u003dsb.toString()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"EXPRESSION_STATEMENT","change":"sb.setCharAt(j,\u0027*\u0027)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"EXPRESSION_STATEMENT","change":"propertyField.setAccessible(true)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"EXPRESSION_STATEMENT","change":"clz\u003dclz.getSuperclass()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"EXPRESSION_STATEMENT","change":"propertyField\u003dclz.getDeclaredField(name.substring(12))","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"EXPRESSION_STATEMENT","change":"clz\u003dgetClass()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"FIELD_ACCESS","change":"this.traceLevel","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"FIELD_ACCESS","change":"this.logWriter","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"FOR_STATEMENT","change":"for (int j\u003d0; j \u003c property.length(); j++) {\n  sb.setCharAt(j,\u0027*\u0027);\n}\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"FOR_STATEMENT","change":"for (int i\u003d0; i \u003c fields.length; i++) {\n  String name\u003dfields[i].getName();\n  if (name.startsWith(\"propertyKey_\")) {\n    if (Modifier.isTransient(fields[i].getModifiers())) {\n      continue;\n    }\n    try {\n      String propertyKey\u003dfields[i].get(this).toString();\n      Field propertyField;\n      clz\u003dgetClass();\n      while (true) {\n        try {\n          propertyField\u003dclz.getDeclaredField(name.substring(12));\n          break;\n        }\n catch (        NoSuchFieldException nsfe) {\n          clz\u003dclz.getSuperclass();\n          if (clz \u003d\u003d Object.class) {\n            throw new SqlException(new LogWriter(logWriter,traceLevel),\"bug check: corresponding property field does not exist\");\n          }\n          continue;\n        }\n      }\n      if (!Modifier.isTransient(propertyField.getModifiers())) {\n        propertyField.setAccessible(true);\n        Object propertyObj\u003dpropertyField.get(this);\n        String property\u003dString.valueOf(propertyObj);\n        if (\"password\".equals(propertyKey)) {\n          StringBuffer sb\u003dnew StringBuffer(property);\n          for (int j\u003d0; j \u003c property.length(); j++) {\n            sb.setCharAt(j,\u0027*\u0027);\n          }\n          property\u003dsb.toString();\n        }\n        properties.setProperty(propertyKey,property);\n      }\n    }\n catch (    IllegalAccessException e) {\n      throw new SqlException(new LogWriter(this.logWriter,this.traceLevel),\"bug check: property cannot be accessed\");\n    }\n  }\n}\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"IF_STATEMENT","change":"\"password\".equals(propertyKey)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"IF_STATEMENT","change":"!Modifier.isTransient(propertyField.getModifiers())","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"IF_STATEMENT","change":"clz \u003d\u003d Object.class","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"IF_STATEMENT","change":"Modifier.isTransient(fields[i].getModifiers())","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"IF_STATEMENT","change":"name.startsWith(\"propertyKey_\")","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"INFIX_EXPRESSION","change":"j \u003c property.length()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"INFIX_EXPRESSION","change":"clz \u003d\u003d Object.class","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"INFIX_EXPRESSION","change":"i \u003c fields.length","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"JAVADOC","change":"/** \n * Not an external.  Do not document in pubs. Returns all non-transient properties of a ClientBaseDataSource.\n */\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"properties.setProperty(propertyKey,property)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"sb.toString()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"sb.setCharAt(j,\u0027*\u0027)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"property.length()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"\"password\".equals(propertyKey)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"String.valueOf(propertyObj)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"propertyField.get(this)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"propertyField.setAccessible(true)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"propertyField.getModifiers()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"Modifier.isTransient(propertyField.getModifiers())","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"clz.getSuperclass()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"name.substring(12)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"clz.getDeclaredField(name.substring(12))","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"getClass()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"fields[i].get(this)","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"fields[i].get(this).toString()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"fields[i].getModifiers()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"Modifier.isTransient(fields[i].getModifiers())","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"name.startsWith(\"propertyKey_\")","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"fields[i].getName()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"METHOD_INVOCATION","change":"clz.getFields()","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"MODIFIER","change":"public","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"NUMBER_LITERAL","change":"12","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"POSTFIX_EXPRESSION","change":"j++","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"POSTFIX_EXPRESSION","change":"i++","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"PREFIX_EXPRESSION","change":"!Modifier.isTransient(propertyField.getModifiers())","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"QUALIFIED_NAME","change":"fields.length","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"RETURN_STATEMENT","change":"return properties;\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"LogWriter","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"SqlException","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"IllegalAccessException","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"StringBuffer","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"Object","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"NoSuchFieldException","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"Field","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"Class","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SIMPLE_TYPE","change":"Properties","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"IllegalAccessException e","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"SINGLE_VARIABLE_DECLARATION","change":"NoSuchFieldException nsfe","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"STRING_LITERAL","change":"bug check: property cannot be accessed","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"STRING_LITERAL","change":"password","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"STRING_LITERAL","change":"bug check: corresponding property field does not exist","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"STRING_LITERAL","change":"propertyKey_","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"THIS_EXPRESSION","change":"this","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"THROW_STATEMENT","change":"throw new SqlException(new LogWriter(this.logWriter,this.traceLevel),\"bug check: property cannot be accessed\");\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"THROW_STATEMENT","change":"throw new SqlException(new LogWriter(logWriter,traceLevel),\"bug check: corresponding property field does not exist\");\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"TRY_STATEMENT","change":"try {\n  propertyField\u003dclz.getDeclaredField(name.substring(12));\n  break;\n}\n catch (NoSuchFieldException nsfe) {\n  clz\u003dclz.getSuperclass();\n  if (clz \u003d\u003d Object.class) {\n    throw new SqlException(new LogWriter(logWriter,traceLevel),\"bug check: corresponding property field does not exist\");\n  }\n  continue;\n}\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"TRY_STATEMENT","change":"try {\n  String propertyKey\u003dfields[i].get(this).toString();\n  Field propertyField;\n  clz\u003dgetClass();\n  while (true) {\n    try {\n      propertyField\u003dclz.getDeclaredField(name.substring(12));\n      break;\n    }\n catch (    NoSuchFieldException nsfe) {\n      clz\u003dclz.getSuperclass();\n      if (clz \u003d\u003d Object.class) {\n        throw new SqlException(new LogWriter(logWriter,traceLevel),\"bug check: corresponding property field does not exist\");\n      }\n      continue;\n    }\n  }\n  if (!Modifier.isTransient(propertyField.getModifiers())) {\n    propertyField.setAccessible(true);\n    Object propertyObj\u003dpropertyField.get(this);\n    String property\u003dString.valueOf(propertyObj);\n    if (\"password\".equals(propertyKey)) {\n      StringBuffer sb\u003dnew StringBuffer(property);\n      for (int j\u003d0; j \u003c property.length(); j++) {\n        sb.setCharAt(j,\u0027*\u0027);\n      }\n      property\u003dsb.toString();\n    }\n    properties.setProperty(propertyKey,property);\n  }\n}\n catch (IllegalAccessException e) {\n  throw new SqlException(new LogWriter(this.logWriter,this.traceLevel),\"bug check: property cannot be accessed\");\n}\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"TYPE_LITERAL","change":"Object","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_EXPRESSION","change":"int [j\u003d0]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_EXPRESSION","change":"int [i\u003d0]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"j","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"sb","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"property","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"propertyObj","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"propertyField","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"propertyKey","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"name","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"i","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"fields","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"clz","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"properties","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"StringBuffer [sb\u003dnew StringBuffer(property)]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [property\u003dString.valueOf(propertyObj)]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Object [propertyObj\u003dpropertyField.get(this)]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Field [propertyField]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [propertyKey\u003dfields[i].get(this).toString()]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [name\u003dfields[i].getName()]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Field[] [fields\u003dclz.getFields()]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Class [clz\u003dgetClass()]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Properties [properties\u003dnew Properties()]","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"2fe796b2569ca81607507ef74c93c674f63cedf8","changeType":"WHILE_STATEMENT","change":"while (true) {\n  try {\n    propertyField\u003dclz.getDeclaredField(name.substring(12));\n    break;\n  }\n catch (  NoSuchFieldException nsfe) {\n    clz\u003dclz.getSuperclass();\n    if (clz \u003d\u003d Object.class) {\n      throw new SqlException(new LogWriter(logWriter,traceLevel),\"bug check: corresponding property field does not exist\");\n    }\n    continue;\n  }\n}\n","source":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()","target":"org.apache.derby.client.am.LogWriter.getProperties(ClientDataSource)","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.ClientBaseDataSource.getProperties()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"CLASS_S","local":"java.engine.org.apache.derby.impl.sql.compile.CursorNode"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"BOOLEAN_LITERAL","change":"false","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"CAST_EXPRESSION","change":"(ConstantNode)fetchFirst","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"CAST_EXPRESSION","change":"(ConstantNode)offset","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"CLASS_INSTANCE_CREATION","change":"new DataTypeDescriptor(TypeId.getBuiltInTypeId(Types.BIGINT),false)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"EXPRESSION_STATEMENT","change":"fetchFirst.setType(new DataTypeDescriptor(TypeId.getBuiltInTypeId(Types.BIGINT),false))","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"EXPRESSION_STATEMENT","change":"offset.setType(new DataTypeDescriptor(TypeId.getBuiltInTypeId(Types.BIGINT),false))","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"IF_STATEMENT","change":"fetchFirst instanceof ParameterNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"IF_STATEMENT","change":"val \u003c 1","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"IF_STATEMENT","change":"fetchFirst instanceof ConstantNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"IF_STATEMENT","change":"offset instanceof ParameterNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"IF_STATEMENT","change":"val \u003c 0","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"IF_STATEMENT","change":"offset instanceof ConstantNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"INFIX_EXPRESSION","change":"val \u003c 1","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"INFIX_EXPRESSION","change":"val \u003c 0","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"INSTANCEOF_EXPRESSION","change":"fetchFirst instanceof ParameterNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"INSTANCEOF_EXPRESSION","change":"fetchFirst instanceof ConstantNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"INSTANCEOF_EXPRESSION","change":"offset instanceof ParameterNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"INSTANCEOF_EXPRESSION","change":"offset instanceof ConstantNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"TypeId.getBuiltInTypeId(Types.BIGINT)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"fetchFirst.setType(new DataTypeDescriptor(TypeId.getBuiltInTypeId(Types.BIGINT),false))","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"Long.toString(val)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"StandardException.newException(SQLState.LANG_INVALID_ROW_COUNT_FIRST,Long.toString(val))","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"dvd.getLong()","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"((ConstantNode)fetchFirst).getValue()","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"offset.setType(new DataTypeDescriptor(TypeId.getBuiltInTypeId(Types.BIGINT),false))","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"StandardException.newException(SQLState.LANG_INVALID_ROW_COUNT_OFFSET,Long.toString(val))","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"((ConstantNode)offset).getValue()","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"MODIFIER","change":"private","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"NUMBER_LITERAL","change":"1","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"PARENTHESIZED_EXPRESSION","change":"((ConstantNode)fetchFirst)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"PARENTHESIZED_EXPRESSION","change":"((ConstantNode)offset)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"PRIMITIVE_TYPE","change":"long","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"QUALIFIED_NAME","change":"Types.BIGINT","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"QUALIFIED_NAME","change":"SQLState.LANG_INVALID_ROW_COUNT_FIRST","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"QUALIFIED_NAME","change":"SQLState.LANG_INVALID_ROW_COUNT_OFFSET","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"SIMPLE_TYPE","change":"DataTypeDescriptor","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"SIMPLE_TYPE","change":"ParameterNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"SIMPLE_TYPE","change":"ConstantNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"SIMPLE_TYPE","change":"DataValueDescriptor","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"SIMPLE_TYPE","change":"StandardException","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"THROW_STATEMENT","change":"throw StandardException.newException(SQLState.LANG_INVALID_ROW_COUNT_FIRST,Long.toString(val));\n","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"THROW_STATEMENT","change":"throw StandardException.newException(SQLState.LANG_INVALID_ROW_COUNT_OFFSET,Long.toString(val));\n","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"val","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"dvd","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"long [val\u003ddvd.getLong()]","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"DataValueDescriptor [dvd\u003d((ConstantNode)fetchFirst).getValue()]","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"DataValueDescriptor [dvd\u003d((ConstantNode)offset).getValue()]","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"EXPRESSION_STATEMENT","change":"bindOffsetFetch(offset,fetchFirst)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"SUR_T","local":"org.apache.derby.impl.sql.compile.CursorNode.bindStatement()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"bindOffsetFetch(offset,fetchFirst)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"SUR_T","local":"org.apache.derby.impl.sql.compile.CursorNode.bindStatement()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"EXPRESSION_STATEMENT","change":"bindOffsetFetch()","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SUR_S","local":"org.apache.derby.impl.sql.compile.CursorNode.bindStatement()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"bindOffsetFetch()","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":false,"scope":"SUR_S","local":"org.apache.derby.impl.sql.compile.CursorNode.bindStatement()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"EXPRESSION_STATEMENT","change":"bindOffsetFetch(offset,fetchFirst)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.FromSubquery.bindExpressions(FromList)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"bindOffsetFetch(offset,fetchFirst)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.FromSubquery.bindExpressions(FromList)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"EXPRESSION_STATEMENT","change":"bindOffsetFetch(offset,fetchFirst)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.InsertNode.bindStatement()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"bindOffsetFetch(offset,fetchFirst)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.InsertNode.bindStatement()"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"CLASS_T","local":"java.engine.org.apache.derby.impl.sql.compile.QueryTreeNode"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"BOOLEAN_LITERAL","change":"false","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"CAST_EXPRESSION","change":"(ConstantNode)fetchFirst","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"CAST_EXPRESSION","change":"(ConstantNode)offset","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"CLASS_INSTANCE_CREATION","change":"new DataTypeDescriptor(TypeId.getBuiltInTypeId(Types.BIGINT),false)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"EXPRESSION_STATEMENT","change":"fetchFirst.setType(new DataTypeDescriptor(TypeId.getBuiltInTypeId(Types.BIGINT),false))","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"EXPRESSION_STATEMENT","change":"offset.setType(new DataTypeDescriptor(TypeId.getBuiltInTypeId(Types.BIGINT),false))","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"IF_STATEMENT","change":"fetchFirst instanceof ParameterNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"IF_STATEMENT","change":"val \u003c 1","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"IF_STATEMENT","change":"fetchFirst instanceof ConstantNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"IF_STATEMENT","change":"offset instanceof ParameterNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"IF_STATEMENT","change":"val \u003c 0","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"IF_STATEMENT","change":"offset instanceof ConstantNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"INFIX_EXPRESSION","change":"val \u003c 1","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"INFIX_EXPRESSION","change":"val \u003c 0","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"INSTANCEOF_EXPRESSION","change":"fetchFirst instanceof ParameterNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"INSTANCEOF_EXPRESSION","change":"fetchFirst instanceof ConstantNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"INSTANCEOF_EXPRESSION","change":"offset instanceof ParameterNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"INSTANCEOF_EXPRESSION","change":"offset instanceof ConstantNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"JAVADOC","change":"/** \n * Bind the parameters of OFFSET n ROWS and FETCH FIRST n ROWS ONLY, if any.\n * @param offset the OFFSET parameter, if any\n * @param fetchFirst the FETCH parameter, if any\n * @exception StandardException         Thrown on error\n */\n","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"TypeId.getBuiltInTypeId(Types.BIGINT)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"fetchFirst.setType(new DataTypeDescriptor(TypeId.getBuiltInTypeId(Types.BIGINT),false))","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"Long.toString(val)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"StandardException.newException(SQLState.LANG_INVALID_ROW_COUNT_FIRST,Long.toString(val))","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"dvd.getLong()","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"((ConstantNode)fetchFirst).getValue()","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"offset.setType(new DataTypeDescriptor(TypeId.getBuiltInTypeId(Types.BIGINT),false))","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"StandardException.newException(SQLState.LANG_INVALID_ROW_COUNT_OFFSET,Long.toString(val))","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"((ConstantNode)offset).getValue()","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"MODIFIER","change":"static","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"MODIFIER","change":"public","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"NUMBER_LITERAL","change":"1","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"PARENTHESIZED_EXPRESSION","change":"((ConstantNode)fetchFirst)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"PARENTHESIZED_EXPRESSION","change":"((ConstantNode)offset)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"PRIMITIVE_TYPE","change":"long","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"QUALIFIED_NAME","change":"Types.BIGINT","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"QUALIFIED_NAME","change":"SQLState.LANG_INVALID_ROW_COUNT_FIRST","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"QUALIFIED_NAME","change":"SQLState.LANG_INVALID_ROW_COUNT_OFFSET","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"SIMPLE_TYPE","change":"DataTypeDescriptor","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"SIMPLE_TYPE","change":"ParameterNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"SIMPLE_TYPE","change":"ConstantNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"SIMPLE_TYPE","change":"DataValueDescriptor","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"SIMPLE_TYPE","change":"StandardException","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"SIMPLE_TYPE","change":"ValueNode","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ValueNode fetchFirst","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ValueNode offset","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"THROW_STATEMENT","change":"throw StandardException.newException(SQLState.LANG_INVALID_ROW_COUNT_FIRST,Long.toString(val));\n","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"THROW_STATEMENT","change":"throw StandardException.newException(SQLState.LANG_INVALID_ROW_COUNT_OFFSET,Long.toString(val));\n","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"val","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"dvd","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"long [val\u003ddvd.getLong()]","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"DataValueDescriptor [dvd\u003d((ConstantNode)fetchFirst).getValue()]","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"DataValueDescriptor [dvd\u003d((ConstantNode)offset).getValue()]","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"EXPRESSION_STATEMENT","change":"bindOffsetFetch(offset,fetchFirst)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.SubqueryNode.bindExpression(FromList,SubqueryList,Vector)"}
{"project":"apache_derby","commit":"108305bc34abd2cc0c9cb30e842ca85e20cf5b97","changeType":"METHOD_INVOCATION","change":"bindOffsetFetch(offset,fetchFirst)","source":"org.apache.derby.impl.sql.compile.CursorNode.bindOffsetFetch()","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.bindOffsetFetch(ValueNode,ValueNode)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.SubqueryNode.bindExpression(FromList,SubqueryList,Vector)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"EXPRESSION_STATEMENT","change":"addUDTUsagePriv(getValueNodes(_searchCondition))","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.MergeNode.addOnClausePrivileges()"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_INVOCATION","change":"addUDTUsagePriv(getValueNodes(_searchCondition))","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.MergeNode.addOnClausePrivileges()"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"EXPRESSION_STATEMENT","change":"addUDTUsagePriv(getValueNodes(value))","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.MergeNode.bindExpression(ValueNode,FromList)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_INVOCATION","change":"addUDTUsagePriv(getValueNodes(value))","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.MergeNode.bindExpression(ValueNode,FromList)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"TRY_STATEMENT","change":"try {\n  value.bindExpression(fromList,new SubqueryList(getContextManager()),new ArrayList\u003cAggregateNode\u003e());\n  addUDTUsagePriv(getValueNodes(value));\n}\n  finally {\n  cc.popCurrentPrivType();\n  cc.setReliability(previousReliability);\n}\n","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.MergeNode.bindExpression(ValueNode,FromList)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"CLASS_T","local":"java.engine.org.apache.derby.impl.sql.compile.QueryTreeNode"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"ENHANCED_FOR_STATEMENT","change":"for (ValueNode val : valueNodes) {\n  DataTypeDescriptor dtd\u003dval.getTypeServices();\n  if ((dtd !\u003d null) \u0026\u0026 dtd.getTypeId().userType()) {\n    AliasDescriptor ad\u003dgetUDTDesc(dtd);\n    getCompilerContext().addRequiredUsagePriv(ad);\n  }\n}\n","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"EXPRESSION_STATEMENT","change":"getCompilerContext().addRequiredUsagePriv(ad)","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"IF_STATEMENT","change":"(dtd !\u003d null) \u0026\u0026 dtd.getTypeId().userType()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"IF_STATEMENT","change":"!isPrivilegeCollectionRequired()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"INFIX_EXPRESSION","change":"dtd !\u003d null","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"INFIX_EXPRESSION","change":"(dtd !\u003d null) \u0026\u0026 dtd.getTypeId().userType()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"JAVADOC","change":"/** \n * Add USAGE privilege for all UDTs mentioned in the indicated ValueNodes.\n */\n","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_INVOCATION","change":"getCompilerContext()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_INVOCATION","change":"getCompilerContext().addRequiredUsagePriv(ad)","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_INVOCATION","change":"getUDTDesc(dtd)","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_INVOCATION","change":"dtd.getTypeId()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_INVOCATION","change":"dtd.getTypeId().userType()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_INVOCATION","change":"val.getTypeServices()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_INVOCATION","change":"isPrivilegeCollectionRequired()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"NULL_LITERAL","change":"null","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"PARAMETERIZED_TYPE","change":"List\u003cValueNode\u003e","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"PARENTHESIZED_EXPRESSION","change":"(dtd !\u003d null)","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"PREFIX_EXPRESSION","change":"!isPrivilegeCollectionRequired()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"RETURN_STATEMENT","change":"return;\n","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"SIMPLE_TYPE","change":"AliasDescriptor","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"SIMPLE_TYPE","change":"DataTypeDescriptor","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"SIMPLE_TYPE","change":"ValueNode","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"SIMPLE_TYPE","change":"StandardException","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"SIMPLE_TYPE","change":"List","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ValueNode val","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"SINGLE_VARIABLE_DECLARATION","change":"List\u003cValueNode\u003e valueNodes","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"ad","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"dtd","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"AliasDescriptor [ad\u003dgetUDTDesc(dtd)]","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"DataTypeDescriptor [dtd\u003dval.getTypeServices()]","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"CLASS_S","local":"java.engine.org.apache.derby.impl.sql.compile.UpdateNode"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"ENHANCED_FOR_STATEMENT","change":"for (ValueNode val : valueNodes) {\n  DataTypeDescriptor dtd\u003dval.getTypeServices();\n  if ((dtd !\u003d null) \u0026\u0026 dtd.getTypeId().userType()) {\n    AliasDescriptor ad\u003dgetUDTDesc(dtd);\n    getCompilerContext().addRequiredUsagePriv(ad);\n  }\n}\n","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"EXPRESSION_STATEMENT","change":"getCompilerContext().addRequiredUsagePriv(ad)","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"IF_STATEMENT","change":"(dtd !\u003d null) \u0026\u0026 dtd.getTypeId().userType()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"IF_STATEMENT","change":"!isPrivilegeCollectionRequired()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"INFIX_EXPRESSION","change":"dtd !\u003d null","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"INFIX_EXPRESSION","change":"(dtd !\u003d null) \u0026\u0026 dtd.getTypeId().userType()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"JAVADOC","change":"/** \n * Add USAGE privilege for all UDTs mentioned in the WHERE clause and on the right side of SET operators.\n */\n","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_INVOCATION","change":"getCompilerContext()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_INVOCATION","change":"getCompilerContext().addRequiredUsagePriv(ad)","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_INVOCATION","change":"getUDTDesc(dtd)","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_INVOCATION","change":"dtd.getTypeId()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_INVOCATION","change":"dtd.getTypeId().userType()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_INVOCATION","change":"val.getTypeServices()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"METHOD_INVOCATION","change":"isPrivilegeCollectionRequired()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"MODIFIER","change":"private","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"NULL_LITERAL","change":"null","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"PARAMETERIZED_TYPE","change":"List\u003cValueNode\u003e","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"PARENTHESIZED_EXPRESSION","change":"(dtd !\u003d null)","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"PREFIX_EXPRESSION","change":"!isPrivilegeCollectionRequired()","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"RETURN_STATEMENT","change":"return;\n","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"SIMPLE_TYPE","change":"AliasDescriptor","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"SIMPLE_TYPE","change":"DataTypeDescriptor","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"SIMPLE_TYPE","change":"ValueNode","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"SIMPLE_TYPE","change":"StandardException","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"SIMPLE_TYPE","change":"List","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ValueNode val","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"SINGLE_VARIABLE_DECLARATION","change":"List\u003cValueNode\u003e valueNodes","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"ad","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"dtd","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"AliasDescriptor [ad\u003dgetUDTDesc(dtd)]","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"daffaee4b8323b1f248e539e3db747f22740de8c","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"DataTypeDescriptor [dtd\u003dval.getTypeServices()]","source":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)","target":"org.apache.derby.impl.sql.compile.QueryTreeNode.addUDTUsagePriv(List)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.UpdateNode.addUDTUsagePriv(List)"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.jdbc.BrokeredCallableStatement40.isClosed()","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"EXT_S","local":"java.engine.org.apache.derby.iapi.jdbc.BrokeredCallableStatement40"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"METHOD_INVOCATION","change":"getCallableStatement().isClosed()","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"EXT_S","local":"org.apache.derby.iapi.jdbc.BrokeredCallableStatement40.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"RETURN_STATEMENT","change":"return getCallableStatement().isClosed();\n","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"EXT_S","local":"org.apache.derby.iapi.jdbc.BrokeredCallableStatement40.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"CLASS_S","local":"java.engine.org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"JAVADOC","change":"/** \n * Checks if the statement is closed.\n * @return \u003ccode\u003etrue\u003c/code\u003e if the statement is closed,\u003ccode\u003efalse\u003c/code\u003e otherwise\n * @exception SQLException if an error occurs\n */\n","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"METHOD_INVOCATION","change":"getPreparedStatement()","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"METHOD_INVOCATION","change":"getPreparedStatement().isClosed()","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"MODIFIER","change":"final","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"MODIFIER","change":"public","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"RETURN_STATEMENT","change":"return getPreparedStatement().isClosed();\n","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"SIMPLE_TYPE","change":"SQLException","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"CAST_EXPRESSION","change":"(EngineStatement)getStatement()","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"JAVADOC","change":"/** \n * Checks if the statement is closed.\n * @return \u003ccode\u003etrue\u003c/code\u003e if the statement is closed,\u003ccode\u003efalse\u003c/code\u003e otherwise\n * @exception SQLException if an error occurs\n */\n","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"METHOD_INVOCATION","change":"getStatement()","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"METHOD_INVOCATION","change":"((EngineStatement)getStatement()).isClosed()","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"MODIFIER","change":"public","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"MODIFIER","change":"final","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"PARENTHESIZED_EXPRESSION","change":"((EngineStatement)getStatement())","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"RETURN_STATEMENT","change":"return ((EngineStatement)getStatement()).isClosed();\n","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"SIMPLE_TYPE","change":"EngineStatement","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"JAVADOC","change":"/** \n * Checks if the statement is closed. Not implemented for this class since \u003ccode\u003eisClosed()\u003c/code\u003e is a new method in JDBC 4.0. The JDBC 4.0 sub-classes should override this method.\n * @return \u003ccode\u003etrue\u003c/code\u003e if the statement is closed,\u003ccode\u003efalse\u003c/code\u003e otherwise\n * @exception SQLException not-implemented exception\n */\n","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"TARGET","local":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"METHOD_INVOCATION","change":"Util.notImplemented()","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"TARGET","local":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"MODIFIER","change":"protected","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"TARGET","local":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"THROW_STATEMENT","change":"throw Util.notImplemented();\n","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"TARGET","local":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.jdbc.BrokeredStatement40.isClosed()","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"EXT_S","local":"java.engine.org.apache.derby.iapi.jdbc.BrokeredStatement40"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"METHOD_INVOCATION","change":"getStatement().isClosed()","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"EXT_S","local":"org.apache.derby.iapi.jdbc.BrokeredStatement40.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"RETURN_STATEMENT","change":"return getStatement().isClosed();\n","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":false,"scope":"EXT_S","local":"org.apache.derby.iapi.jdbc.BrokeredStatement40.isClosed()"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.jdbc.EngineStatement.isClosed()","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":true,"scope":"EXT_T","local":"java.engine.org.apache.derby.iapi.jdbc.EngineStatement"}
{"project":"apache_derby","commit":"c9ec6b98d90b335b3609f8d169cc072685a68865","changeType":"JAVADOC","change":"/** \n * Identical to the JDBC 4 isClosed() method.\n */\n","source":"org.apache.derby.iapi.jdbc.BrokeredPreparedStatement40.isClosed()","target":"org.apache.derby.iapi.jdbc.BrokeredStatement.isClosed()","added":true,"scope":"EXT_T","local":"org.apache.derby.iapi.jdbc.EngineStatement.isClosed()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"METHOD_DECLARATION","change":"org.apache.derby.jdbc.AutoloadedDriver.getParentLogger()","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"EXT_T","local":"java.engine.org.apache.derby.jdbc.AutoloadedDriver"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"CAST_EXPRESSION","change":"(SQLFeatureNotSupportedException)Util.notImplemented(\"getParentLogger()\")","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"EXT_T","local":"org.apache.derby.jdbc.AutoloadedDriver.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"METHOD_INVOCATION","change":"Util.notImplemented(\"getParentLogger()\")","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"EXT_T","local":"org.apache.derby.jdbc.AutoloadedDriver.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"STRING_LITERAL","change":"getParentLogger()","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"EXT_T","local":"org.apache.derby.jdbc.AutoloadedDriver.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"THROW_STATEMENT","change":"throw (SQLFeatureNotSupportedException)Util.notImplemented(\"getParentLogger()\");\n","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"EXT_T","local":"org.apache.derby.jdbc.AutoloadedDriver.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"METHOD_DECLARATION","change":"org.apache.derby.jdbc.EmbeddedBaseDataSource.getParentLogger()","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"EXT_T","local":"java.engine.org.apache.derby.jdbc.EmbeddedBaseDataSource"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"METHOD_DECLARATION","change":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource.getParentLogger()","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"EXT_T","local":"java.engine.org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"CAST_EXPRESSION","change":"(SQLFeatureNotSupportedException)Util.notImplemented(\"getParentLogger()\")","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"EXT_T","local":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"METHOD_INVOCATION","change":"Util.notImplemented(\"getParentLogger()\")","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"EXT_T","local":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"STRING_LITERAL","change":"getParentLogger()","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"EXT_T","local":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"THROW_STATEMENT","change":"throw (SQLFeatureNotSupportedException)Util.notImplemented(\"getParentLogger()\");\n","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"EXT_T","local":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"METHOD_DECLARATION","change":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":false,"scope":"CLASS_S","local":"java.engine.org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"CAST_EXPRESSION","change":"(SQLFeatureNotSupportedException)Util.notImplemented(\"getParentLogger()\")","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"METHOD_INVOCATION","change":"Util.notImplemented(\"getParentLogger()\")","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"MODIFIER","change":"public","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"SIMPLE_TYPE","change":"SQLFeatureNotSupportedException","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"SIMPLE_TYPE","change":"Logger","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"STRING_LITERAL","change":"getParentLogger()","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"THROW_STATEMENT","change":"throw (SQLFeatureNotSupportedException)Util.notImplemented(\"getParentLogger()\");\n","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":false,"scope":"SOURCE","local":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"METHOD_DECLARATION","change":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"CLASS_T","local":"java.engine.org.apache.derby.jdbc.EmbeddedDriver"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"CAST_EXPRESSION","change":"(SQLFeatureNotSupportedException)Util.notImplemented(\"getParentLogger()\")","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"METHOD_INVOCATION","change":"Util.notImplemented(\"getParentLogger()\")","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"MODIFIER","change":"public","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"SIMPLE_TYPE","change":"SQLFeatureNotSupportedException","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"SIMPLE_TYPE","change":"Logger","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"STRING_LITERAL","change":"getParentLogger()","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"THROW_STATEMENT","change":"throw (SQLFeatureNotSupportedException)Util.notImplemented(\"getParentLogger()\");\n","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":true,"scope":"TARGET","local":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"EXPRESSION_STATEMENT","change":"fail(\"Call to getParentLogger() not expected to pass\")","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":false,"scope":"EXT_S","local":"org.apache.derbyTesting.functionTests.tests.jdbc4.JDBC4FromJDBC3DataSourceTest.assertNonJDBC4DataSource(DataSource)"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"METHOD_INVOCATION","change":"fail(\"Call to getParentLogger() not expected to pass\")","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":false,"scope":"EXT_S","local":"org.apache.derbyTesting.functionTests.tests.jdbc4.JDBC4FromJDBC3DataSourceTest.assertNonJDBC4DataSource(DataSource)"}
{"project":"apache_derby","commit":"eec86ed87462846a8683a5082a55f357142579d1","changeType":"STRING_LITERAL","change":"Call to getParentLogger() not expected to pass","source":"org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40.getParentLogger()","target":"org.apache.derby.jdbc.EmbeddedDriver.getParentLogger()","added":false,"scope":"EXT_S","local":"org.apache.derbyTesting.functionTests.tests.jdbc4.JDBC4FromJDBC3DataSourceTest.assertNonJDBC4DataSource(DataSource)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"stmt.executeX(\"RELEASE SAVEPOINT \" + Utils.quoteSqlIdentifier(savepointName))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.releaseSavepoint(java.sql.Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"INFIX_EXPRESSION","change":"\"RELEASE SAVEPOINT \" + Utils.quoteSqlIdentifier(savepointName)","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.releaseSavepoint(java.sql.Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"stmt.executeX(\"RELEASE SAVEPOINT \" + Utils.quoteSqlIdentifier(savepointName))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.releaseSavepoint(java.sql.Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"Utils.quoteSqlIdentifier(savepointName)","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.releaseSavepoint(java.sql.Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"TRY_STATEMENT","change":"try {\n  stmt\u003d(Statement)createStatementX(java.sql.ResultSet.TYPE_FORWARD_ONLY,java.sql.ResultSet.CONCUR_READ_ONLY,holdability());\n  String savepointName;\n  try {\n    savepointName\u003d((Savepoint)savepoint).getSavepointName();\n  }\n catch (  SQLException e) {\n    savepointName\u003ddncGeneratedSavepointNamePrefix__ + ((Savepoint)savepoint).getSavepointId();\n  }\n  stmt.executeX(\"RELEASE SAVEPOINT \" + Utils.quoteSqlIdentifier(savepointName));\n}\n  finally {\n  if (stmt !\u003d null) {\n    try {\n      stmt.closeX();\n    }\n catch (    SqlException doNothing) {\n    }\n  }\n  xaState_\u003dsaveXaState;\n}\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.releaseSavepoint(java.sql.Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"TRY_STATEMENT","change":"try {\n  int saveXaState\u003dxaState_;\n  if (agent_.loggingEnabled()) {\n    agent_.logWriter_.traceEntry(this,\"releaseSavepoint\",savepoint);\n  }\n  checkForClosedConnection();\n  if (savepoint \u003d\u003d null) {\n    throw new SqlException(agent_.logWriter_,new ClientMessageId(SQLState.XACT_SAVEPOINT_RELEASE_ROLLBACK_FAIL));\n  }\n else   if (autoCommit_) {\n    throw new SqlException(agent_.logWriter_,new ClientMessageId(SQLState.NO_SAVEPOINT_ROLLBACK_OR_RELEASE_WHEN_AUTO));\n  }\n  try {\n    if (this !\u003d ((Savepoint)savepoint).agent_.connection_) {\n      throw new SqlException(agent_.logWriter_,new ClientMessageId(SQLState.SAVEPOINT_NOT_CREATED_BY_CONNECTION));\n    }\n  }\n catch (  java.lang.ClassCastException e) {\n    throw new SqlException(agent_.logWriter_,new ClientMessageId(SQLState.SAVEPOINT_NOT_CREATED_BY_CONNECTION));\n  }\n  Statement stmt\u003dnull;\n  try {\n    stmt\u003d(Statement)createStatementX(java.sql.ResultSet.TYPE_FORWARD_ONLY,java.sql.ResultSet.CONCUR_READ_ONLY,holdability());\n    String savepointName;\n    try {\n      savepointName\u003d((Savepoint)savepoint).getSavepointName();\n    }\n catch (    SQLException e) {\n      savepointName\u003ddncGeneratedSavepointNamePrefix__ + ((Savepoint)savepoint).getSavepointId();\n    }\n    stmt.executeX(\"RELEASE SAVEPOINT \" + Utils.quoteSqlIdentifier(savepointName));\n  }\n  finally {\n    if (stmt !\u003d null) {\n      try {\n        stmt.closeX();\n      }\n catch (      SqlException doNothing) {\n      }\n    }\n    xaState_\u003dsaveXaState;\n  }\n}\n catch (SqlException se) {\n  throw se.getSQLException();\n}\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.releaseSavepoint(java.sql.Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"stmt.executeX(\"ROLLBACK TO SAVEPOINT \" + Utils.quoteSqlIdentifier(savepointName))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.rollback(java.sql.Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"INFIX_EXPRESSION","change":"\"ROLLBACK TO SAVEPOINT \" + Utils.quoteSqlIdentifier(savepointName)","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.rollback(java.sql.Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"Utils.quoteSqlIdentifier(savepointName)","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.rollback(java.sql.Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"stmt.executeX(\"ROLLBACK TO SAVEPOINT \" + Utils.quoteSqlIdentifier(savepointName))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.rollback(java.sql.Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"TRY_STATEMENT","change":"try {\n  stmt\u003dcreateStatementX(java.sql.ResultSet.TYPE_FORWARD_ONLY,java.sql.ResultSet.CONCUR_READ_ONLY,holdability());\n  String savepointName;\n  try {\n    savepointName\u003d((Savepoint)savepoint).getSavepointName();\n  }\n catch (  SQLException e) {\n    savepointName\u003ddncGeneratedSavepointNamePrefix__ + ((Savepoint)savepoint).getSavepointId();\n  }\n  stmt.executeX(\"ROLLBACK TO SAVEPOINT \" + Utils.quoteSqlIdentifier(savepointName));\n}\n  finally {\n  if (stmt !\u003d null) {\n    try {\n      stmt.closeX();\n    }\n catch (    SqlException doNothing) {\n    }\n  }\n  xaState_\u003dsaveXaState;\n}\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.rollback(java.sql.Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"TRY_STATEMENT","change":"try {\n  int saveXaState\u003dxaState_;\n  if (agent_.loggingEnabled()) {\n    agent_.logWriter_.traceEntry(this,\"rollback\",savepoint);\n  }\n  checkForClosedConnection();\n  if (savepoint \u003d\u003d null) {\n    throw new SqlException(agent_.logWriter_,new ClientMessageId(SQLState.XACT_SAVEPOINT_RELEASE_ROLLBACK_FAIL));\n  }\n else   if (autoCommit_) {\n    throw new SqlException(agent_.logWriter_,new ClientMessageId(SQLState.NO_SAVEPOINT_ROLLBACK_OR_RELEASE_WHEN_AUTO));\n  }\n  try {\n    if (this !\u003d ((Savepoint)savepoint).agent_.connection_) {\n      throw new SqlException(agent_.logWriter_,new ClientMessageId(SQLState.SAVEPOINT_NOT_CREATED_BY_CONNECTION));\n    }\n  }\n catch (  java.lang.ClassCastException e) {\n    throw new SqlException(agent_.logWriter_,new ClientMessageId(SQLState.SAVEPOINT_NOT_CREATED_BY_CONNECTION));\n  }\n  Statement stmt\u003dnull;\n  try {\n    stmt\u003dcreateStatementX(java.sql.ResultSet.TYPE_FORWARD_ONLY,java.sql.ResultSet.CONCUR_READ_ONLY,holdability());\n    String savepointName;\n    try {\n      savepointName\u003d((Savepoint)savepoint).getSavepointName();\n    }\n catch (    SQLException e) {\n      savepointName\u003ddncGeneratedSavepointNamePrefix__ + ((Savepoint)savepoint).getSavepointId();\n    }\n    stmt.executeX(\"ROLLBACK TO SAVEPOINT \" + Utils.quoteSqlIdentifier(savepointName));\n  }\n  finally {\n    if (stmt !\u003d null) {\n      try {\n        stmt.closeX();\n      }\n catch (      SqlException doNothing) {\n      }\n    }\n    xaState_\u003dsaveXaState;\n  }\n}\n catch (SqlException se) {\n  throw se.getSQLException();\n}\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.rollback(java.sql.Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"stmt.executeX(\"SAVEPOINT \" + Utils.quoteSqlIdentifier(savepointName) + \" ON ROLLBACK RETAIN CURSORS\")","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.setSavepointX(Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"INFIX_EXPRESSION","change":"\"SAVEPOINT \" + Utils.quoteSqlIdentifier(savepointName) + \" ON ROLLBACK RETAIN CURSORS\"","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.setSavepointX(Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"stmt.executeX(\"SAVEPOINT \" + Utils.quoteSqlIdentifier(savepointName) + \" ON ROLLBACK RETAIN CURSORS\")","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.setSavepointX(Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"Utils.quoteSqlIdentifier(savepointName)","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.setSavepointX(Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"TRY_STATEMENT","change":"try {\n  stmt\u003d(Statement)createStatementX(java.sql.ResultSet.TYPE_FORWARD_ONLY,java.sql.ResultSet.CONCUR_READ_ONLY,holdability());\n  String savepointName;\n  try {\n    savepointName\u003dsavepoint.getSavepointName();\n  }\n catch (  SQLException e) {\n    savepointName\u003ddncGeneratedSavepointNamePrefix__ + savepoint.getSavepointId();\n  }\n  stmt.executeX(\"SAVEPOINT \" + Utils.quoteSqlIdentifier(savepointName) + \" ON ROLLBACK RETAIN CURSORS\");\n}\n catch (SqlException se) {\n  throw se.getSQLException();\n}\n finally {\n  if (stmt !\u003d null) {\n    try {\n      stmt.closeX();\n    }\n catch (    SqlException doNothing) {\n    }\n  }\n}\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"EXT_T","local":"org.apache.derby.client.am.Connection.setSavepointX(Savepoint)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_DECLARATION","change":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"CLASS_S","local":"java.client.org.apache.derby.client.am.ResultSet"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"ASSIGNMENT","change":"start \u003d i","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"ASSIGNMENT","change":"i \u003d orgValue.indexOf(\"\\\"\",start) + 1","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"CLASS_INSTANCE_CREATION","change":"new StringBuffer()","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"retValue.append(\"\\\"\")","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"retValue.append(orgValue.substring(start,orgValue.length()))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"start\u003di","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"retValue.append(orgValue.substring(start,i)).append(\"\\\"\")","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"INFIX_EXPRESSION","change":"orgValue.indexOf(\"\\\"\",start) + 1","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"INFIX_EXPRESSION","change":"(i\u003dorgValue.indexOf(\"\\\"\",start) + 1) \u003e 0","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"retValue.toString()","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"retValue.append(\"\\\"\")","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"orgValue.length()","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"orgValue.substring(start,orgValue.length())","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"retValue.append(orgValue.substring(start,orgValue.length()))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"orgValue.substring(start,i)","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"retValue.append(orgValue.substring(start,i))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"retValue.append(orgValue.substring(start,i)).append(\"\\\"\")","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"orgValue.indexOf(\"\\\"\",start)","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"MODIFIER","change":"private","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"NUMBER_LITERAL","change":"1","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"PARENTHESIZED_EXPRESSION","change":"(i\u003dorgValue.indexOf(\"\\\"\",start) + 1)","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"RETURN_STATEMENT","change":"return retValue.toString();\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"SIMPLE_TYPE","change":"StringBuffer","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String orgValue","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"STRING_LITERAL","change":"\"","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"retValue","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"start","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"i","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"StringBuffer [retValue\u003dnew StringBuffer()]","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [i\u003d0, start\u003d0]","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"WHILE_STATEMENT","change":"while ((i\u003dorgValue.indexOf(\"\\\"\",start) + 1) \u003e 0) {\n  retValue.append(orgValue.substring(start,i)).append(\"\\\"\");\n  start\u003di;\n}\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"updateString.append(Utils.quoteSqlIdentifier(resultSetMetaData_.getColumnName(column))).append(\" \u003d ? \")","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.buildUpdateString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"FOR_STATEMENT","change":"for (column\u003d1; column \u003c\u003d resultSetMetaData_.columns_; column++) {\n  if (columnUpdated_[column - 1]) {\n    if (foundOneUpdatedColumnAlready) {\n      updateString.append(\",\");\n    }\n    try {\n      updateString.append(Utils.quoteSqlIdentifier(resultSetMetaData_.getColumnName(column))).append(\" \u003d ? \");\n    }\n catch (    SQLException sqle) {\n      throw new SqlException(sqle);\n    }\n    numColumns++;\n    foundOneUpdatedColumnAlready\u003dtrue;\n  }\n}\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.buildUpdateString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"updateString.append(Utils.quoteSqlIdentifier(resultSetMetaData_.getColumnName(column))).append(\" \u003d ? \")","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.buildUpdateString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"updateString.append(Utils.quoteSqlIdentifier(resultSetMetaData_.getColumnName(column)))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.buildUpdateString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"Utils.quoteSqlIdentifier(resultSetMetaData_.getColumnName(column))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.buildUpdateString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"TRY_STATEMENT","change":"try {\n  updateString.append(Utils.quoteSqlIdentifier(resultSetMetaData_.getColumnName(column))).append(\" \u003d ? \");\n}\n catch (SQLException sqle) {\n  throw new SqlException(sqle);\n}\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.buildUpdateString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"updateString.append(quoteSqlIdentifier(resultSetMetaData_.getColumnName(column))).append(\" \u003d ? \")","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.buildUpdateString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"FOR_STATEMENT","change":"for (column\u003d1; column \u003c\u003d resultSetMetaData_.columns_; column++) {\n  if (columnUpdated_[column - 1]) {\n    if (foundOneUpdatedColumnAlready) {\n      updateString.append(\",\");\n    }\n    try {\n      updateString.append(quoteSqlIdentifier(resultSetMetaData_.getColumnName(column))).append(\" \u003d ? \");\n    }\n catch (    SQLException sqle) {\n      throw new SqlException(sqle);\n    }\n    numColumns++;\n    foundOneUpdatedColumnAlready\u003dtrue;\n  }\n}\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.buildUpdateString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"updateString.append(quoteSqlIdentifier(resultSetMetaData_.getColumnName(column)))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.buildUpdateString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"quoteSqlIdentifier(resultSetMetaData_.getColumnName(column))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.buildUpdateString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"updateString.append(quoteSqlIdentifier(resultSetMetaData_.getColumnName(column))).append(\" \u003d ? \")","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.buildUpdateString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"TRY_STATEMENT","change":"try {\n  updateString.append(quoteSqlIdentifier(resultSetMetaData_.getColumnName(column))).append(\" \u003d ? \");\n}\n catch (SQLException sqle) {\n  throw new SqlException(sqle);\n}\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.buildUpdateString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"ASSIGNMENT","change":"tableName +\u003d Utils.quoteSqlIdentifier(resultSetMetaData_.sqlxSchema_[baseTableColumn]) + \".\"","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.getTableName()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"ASSIGNMENT","change":"tableName +\u003d Utils.quoteSqlIdentifier(resultSetMetaData_.sqlxBasename_[baseTableColumn])","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.getTableName()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"tableName+\u003dUtils.quoteSqlIdentifier(resultSetMetaData_.sqlxSchema_[baseTableColumn]) + \".\"","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.getTableName()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"tableName+\u003dUtils.quoteSqlIdentifier(resultSetMetaData_.sqlxBasename_[baseTableColumn])","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.getTableName()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"INFIX_EXPRESSION","change":"Utils.quoteSqlIdentifier(resultSetMetaData_.sqlxSchema_[baseTableColumn]) + \".\"","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.getTableName()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"Utils.quoteSqlIdentifier(resultSetMetaData_.sqlxSchema_[baseTableColumn])","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.getTableName()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"Utils.quoteSqlIdentifier(resultSetMetaData_.sqlxBasename_[baseTableColumn])","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.getTableName()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"ASSIGNMENT","change":"tableName +\u003d quoteSqlIdentifier(resultSetMetaData_.sqlxBasename_[baseTableColumn])","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.getTableName()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"ASSIGNMENT","change":"tableName +\u003d quoteSqlIdentifier(resultSetMetaData_.sqlxSchema_[baseTableColumn]) + \".\"","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.getTableName()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"tableName+\u003dquoteSqlIdentifier(resultSetMetaData_.sqlxBasename_[baseTableColumn])","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.getTableName()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"tableName+\u003dquoteSqlIdentifier(resultSetMetaData_.sqlxSchema_[baseTableColumn]) + \".\"","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.getTableName()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"INFIX_EXPRESSION","change":"quoteSqlIdentifier(resultSetMetaData_.sqlxSchema_[baseTableColumn]) + \".\"","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.getTableName()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"quoteSqlIdentifier(resultSetMetaData_.sqlxBasename_[baseTableColumn])","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.getTableName()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"quoteSqlIdentifier(resultSetMetaData_.sqlxSchema_[baseTableColumn])","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.getTableName()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"insertSQL.append(Utils.quoteSqlIdentifier(resultSetMetaData_.getColumnName(column)))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.buildInsertString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"FOR_STATEMENT","change":"for (column\u003d1; column \u003c\u003d resultSetMetaData_.columns_; column++) {\n  if (foundOneUpdatedColumnAlready) {\n    insertSQL.append(\",\");\n    valuesSQL.append(\",\");\n  }\n  try {\n    insertSQL.append(Utils.quoteSqlIdentifier(resultSetMetaData_.getColumnName(column)));\n  }\n catch (  SQLException sqle) {\n    throw new SqlException(sqle);\n  }\n  if (columnUpdated_[column - 1]) {\n    valuesSQL.append(\"?\");\n  }\n else {\n    valuesSQL.append(\"DEFAULT\");\n  }\n  foundOneUpdatedColumnAlready\u003dtrue;\n}\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.buildInsertString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"Utils.quoteSqlIdentifier(resultSetMetaData_.getColumnName(column))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.buildInsertString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"insertSQL.append(Utils.quoteSqlIdentifier(resultSetMetaData_.getColumnName(column)))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.buildInsertString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"TRY_STATEMENT","change":"try {\n  insertSQL.append(Utils.quoteSqlIdentifier(resultSetMetaData_.getColumnName(column)));\n}\n catch (SQLException sqle) {\n  throw new SqlException(sqle);\n}\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"SUR_T","local":"org.apache.derby.client.am.ResultSet.buildInsertString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"insertSQL.append(quoteSqlIdentifier(resultSetMetaData_.getColumnName(column)))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.buildInsertString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"FOR_STATEMENT","change":"for (column\u003d1; column \u003c\u003d resultSetMetaData_.columns_; column++) {\n  if (foundOneUpdatedColumnAlready) {\n    insertSQL.append(\",\");\n    valuesSQL.append(\",\");\n  }\n  try {\n    insertSQL.append(quoteSqlIdentifier(resultSetMetaData_.getColumnName(column)));\n  }\n catch (  SQLException sqle) {\n    throw new SqlException(sqle);\n  }\n  if (columnUpdated_[column - 1]) {\n    valuesSQL.append(\"?\");\n  }\n else {\n    valuesSQL.append(\"DEFAULT\");\n  }\n  foundOneUpdatedColumnAlready\u003dtrue;\n}\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.buildInsertString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"insertSQL.append(quoteSqlIdentifier(resultSetMetaData_.getColumnName(column)))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.buildInsertString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"quoteSqlIdentifier(resultSetMetaData_.getColumnName(column))","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.buildInsertString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"TRY_STATEMENT","change":"try {\n  insertSQL.append(quoteSqlIdentifier(resultSetMetaData_.getColumnName(column)));\n}\n catch (SQLException sqle) {\n  throw new SqlException(sqle);\n}\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":false,"scope":"SUR_S","local":"org.apache.derby.client.am.ResultSet.buildInsertString()"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_DECLARATION","change":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"CLASS_T","local":"java.client.org.apache.derby.client.am.Utils"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"CHARACTER_LITERAL","change":"\u0027\"\u0027","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"CLASS_INSTANCE_CREATION","change":"new StringBuffer(identifier.length() + 2)","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"retValue.append(quote)","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"EXPRESSION_STATEMENT","change":"retValue.append(ch)","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"FOR_STATEMENT","change":"for (int i\u003d0; i \u003c identifier.length(); i++) {\n  char ch\u003didentifier.charAt(i);\n  if (ch \u003d\u003d quote) {\n    retValue.append(quote);\n  }\n  retValue.append(ch);\n}\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"IF_STATEMENT","change":"ch \u003d\u003d quote","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"INFIX_EXPRESSION","change":"ch \u003d\u003d quote","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"INFIX_EXPRESSION","change":"i \u003c identifier.length()","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"INFIX_EXPRESSION","change":"identifier.length() + 2","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"JAVADOC","change":"/** \n * Quote an SQL identifier by enclosing it in double-quote characters and escaping any double-quote characters with an extra double-quote character.\n * @param identifier the identifier to quote\n * @return the quoted identifier\n */\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"retValue.toString()","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"retValue.append(quote)","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"retValue.append(ch)","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"identifier.charAt(i)","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"METHOD_INVOCATION","change":"identifier.length()","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"MODIFIER","change":"final","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"MODIFIER","change":"static","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"NUMBER_LITERAL","change":"2","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"POSTFIX_EXPRESSION","change":"i++","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"PRIMITIVE_TYPE","change":"char","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"RETURN_STATEMENT","change":"return retValue.toString();\n","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"SIMPLE_TYPE","change":"StringBuffer","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String identifier","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"VARIABLE_DECLARATION_EXPRESSION","change":"int [i\u003d0]","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"ch","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"i","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"quote","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"retValue","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"char [ch\u003didentifier.charAt(i)]","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"char [quote\u003d\u0027\"\u0027]","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"11468253bf0f1f8b20ff315e392742791b85a2a5","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"StringBuffer [retValue\u003dnew StringBuffer(identifier.length() + 2)]","source":"org.apache.derby.client.am.ResultSet.quoteSqlIdentifier(String)","target":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Utils.quoteSqlIdentifier(String)"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"FIELD_DECLARATION","change":"/** \n * This activation is set by EmbedStatement for a single execution Activation. Ie. a ResultSet from a Statement.executeQuery(). In this case the closing of this ResultSet will close the activation or the finalization of the parent EmbedStatement without it being closed will mark the Activation as unused.\n * @see EmbedStatement#finalize()\n * @see EmbedPreparedStatement#finalize()\n */\nActivation singleUseActivation;\n","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"CLASS_T","local":"java.engine.org.apache.derby.impl.jdbc.EmbedResultSet"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"JAVADOC","change":"/** \n * This activation is set by EmbedStatement for a single execution Activation. Ie. a ResultSet from a Statement.executeQuery(). In this case the closing of this ResultSet will close the activation or the finalization of the parent EmbedStatement without it being closed will mark the Activation as unused.\n * @see EmbedStatement#finalize()\n * @see EmbedPreparedStatement#finalize()\n */\n","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"CLASS_T","local":"java.engine.org.apache.derby.impl.jdbc.EmbedResultSet"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"FIELD_DECLARATION","change":"/** \n * This activation is set by EmbedStatement for a single execution Activation. Ie. a ResultSet from a Statement.executeQuery(). In this case the closing of this ResultSet will close the activation or the finalization of the ResultSet without it being closed will mark the Activation as unused. c.f. EmbedPreparedStatement.finalize().\n */\nActivation singleUseActivation;\n","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":false,"scope":"CLASS_T","local":"java.engine.org.apache.derby.impl.jdbc.EmbedResultSet"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"JAVADOC","change":"/** \n * This activation is set by EmbedStatement for a single execution Activation. Ie. a ResultSet from a Statement.executeQuery(). In this case the closing of this ResultSet will close the activation or the finalization of the ResultSet without it being closed will mark the Activation as unused. c.f. EmbedPreparedStatement.finalize().\n */\n","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":false,"scope":"CLASS_T","local":"java.engine.org.apache.derby.impl.jdbc.EmbedResultSet"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":false,"scope":"CLASS_S","local":"java.engine.org.apache.derby.impl.jdbc.EmbedResultSet"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"EXPRESSION_STATEMENT","change":"singleUseActivation.markUnused()","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"EXPRESSION_STATEMENT","change":"super.finalize()","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"IF_STATEMENT","change":"singleUseActivation !\u003d null","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"INFIX_EXPRESSION","change":"singleUseActivation !\u003d null","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"JAVADOC","change":"/** \n * JDBC states that a ResultSet is closed when garbage collected. We simply mark the activation as unused. Some later use of the connection will clean everything up.\n * @exception Throwable Allows any exception to be thrown during finalize\n */\n","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"METHOD_INVOCATION","change":"singleUseActivation.markUnused()","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"MODIFIER","change":"protected","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"NULL_LITERAL","change":"null","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"SIMPLE_TYPE","change":"Throwable","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"SUPER_METHOD_INVOCATION","change":"super.finalize()","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"CLASS_T","local":"java.engine.org.apache.derby.impl.jdbc.EmbedStatement"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"EXPRESSION_STATEMENT","change":"results.singleUseActivation.markUnused()","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"EXPRESSION_STATEMENT","change":"super.finalize()","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"IF_STATEMENT","change":"results !\u003d null \u0026\u0026 results.singleUseActivation !\u003d null","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"INFIX_EXPRESSION","change":"results.singleUseActivation !\u003d null","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"INFIX_EXPRESSION","change":"results !\u003d null","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"INFIX_EXPRESSION","change":"results !\u003d null \u0026\u0026 results.singleUseActivation !\u003d null","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"JAVADOC","change":"/** \n * Mark the statement and its single-use activation as unused. This method should be called from \u003ccode\u003eEmbedPreparedStatement\u003c/code\u003e\u0027s finalizer as well, even though prepared statements reuse activations, since \u003ccode\u003egetGeneratedKeys()\u003c/code\u003e uses a single-use activation regardless of statement type.\n */\n","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"METHOD_INVOCATION","change":"results.singleUseActivation.markUnused()","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"MODIFIER","change":"protected","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"NULL_LITERAL","change":"null","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"QUALIFIED_NAME","change":"results.singleUseActivation","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"SIMPLE_TYPE","change":"Throwable","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()"}
{"project":"apache_derby","commit":"4f278dd37004fb8f3e2b1886d15d4a8f362228ad","changeType":"SUPER_METHOD_INVOCATION","change":"super.finalize()","source":"org.apache.derby.impl.jdbc.EmbedResultSet.finalize()","target":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.jdbc.EmbedStatement.finalize()"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"CLASS_S","local":"java.engine.org.apache.derby.impl.sql.compile.DMLModStatementNode"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"ASSIGNMENT","change":"allIsForgiven \u003d true","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"BOOLEAN_LITERAL","change":"true","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"BOOLEAN_LITERAL","change":"false","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"BREAK_STATEMENT","change":"break;\n","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"CAST_EXPRESSION","change":"(ResultColumn)resultRCL.elementAt(i)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"CAST_EXPRESSION","change":"(ResultColumn)targetRCL.elementAt(i)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"CONTINUE_STATEMENT","change":"continue;\n","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"EXPRESSION_STATEMENT","change":"i--","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"EXPRESSION_STATEMENT","change":"count--","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"EXPRESSION_STATEMENT","change":"resultRCL.resetVirtualColumnIds()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"EXPRESSION_STATEMENT","change":"targetRCL.resetVirtualColumnIds()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"EXPRESSION_STATEMENT","change":"resultRCL.removeElementAt(i)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"EXPRESSION_STATEMENT","change":"targetRCL.removeElementAt(i)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"EXPRESSION_STATEMENT","change":"allIsForgiven\u003dtrue","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"FOR_STATEMENT","change":"for (int j\u003d0; j \u003c addedCount; j++) {\n  String addedColumnName\u003daddedGeneratedColumns.elementAt(j).getColumnName();\n  if (columnName.equals(addedColumnName)) {\n    allIsForgiven\u003dtrue;\n    break;\n  }\n}\n","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"FOR_STATEMENT","change":"for (int i\u003d0; i \u003c count; i++) {\n  ResultColumn rc\u003d(ResultColumn)targetRCL.elementAt(i);\n  if (rc.hasGenerationClause()) {\n    ValueNode resultExpression\u003d((ResultColumn)resultRCL.elementAt(i)).getExpression();\n    if (!(resultExpression instanceof DefaultNode)) {\n      boolean allIsForgiven\u003dfalse;\n      if (forUpdate) {\n        String columnName\u003drc.getTableColumnDescriptor().getColumnName();\n        int addedCount\u003daddedGeneratedColumns.size();\n        for (int j\u003d0; j \u003c addedCount; j++) {\n          String addedColumnName\u003daddedGeneratedColumns.elementAt(j).getColumnName();\n          if (columnName.equals(addedColumnName)) {\n            allIsForgiven\u003dtrue;\n            break;\n          }\n        }\n      }\n      if (allIsForgiven) {\n        continue;\n      }\n      throw StandardException.newException(SQLState.LANG_CANT_OVERRIDE_GENERATION_CLAUSE,rc.getName());\n    }\n else {\n      if (forUpdate) {\n        continue;\n      }\n      targetRCL.removeElementAt(i);\n      resultRCL.removeElementAt(i);\n      targetRCL.resetVirtualColumnIds();\n      resultRCL.resetVirtualColumnIds();\n      count--;\n      i--;\n    }\n  }\n}\n","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"IF_STATEMENT","change":"forUpdate","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"IF_STATEMENT","change":"allIsForgiven","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"IF_STATEMENT","change":"columnName.equals(addedColumnName)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"IF_STATEMENT","change":"!(resultExpression instanceof DefaultNode)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"IF_STATEMENT","change":"rc.hasGenerationClause()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"INFIX_EXPRESSION","change":"j \u003c addedCount","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"INFIX_EXPRESSION","change":"i \u003c count","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"INSTANCEOF_EXPRESSION","change":"resultExpression instanceof DefaultNode","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"JAVADOC","change":"/** \n * Do not allow generation clauses to be overriden. Throws an exception if the user attempts to override the value of a generated column. The only value allowed in a generated column is DEFAULT. If we find a generated column which is being explicitly set to DEFAULT in an INSERT, we remove it from the column lists--it will be added back in during the enhance phase. For an update, addedGeneratedColumns will be non-null and we will use this list to pass through the generated columns which have already been added to the update list.\n * @param targetRCL  the row in the table being INSERTed or UPDATEd\n * @param forUpdate  true if this is an UPDATE. false otherwise.\n * @param addedGeneratedColumns generated columns which the compiler added earlier on\n */\n","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"resultRCL.resetVirtualColumnIds()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"targetRCL.resetVirtualColumnIds()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"resultRCL.removeElementAt(i)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"targetRCL.removeElementAt(i)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"rc.getName()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"StandardException.newException(SQLState.LANG_CANT_OVERRIDE_GENERATION_CLAUSE,rc.getName())","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"columnName.equals(addedColumnName)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"addedGeneratedColumns.elementAt(j)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"addedGeneratedColumns.elementAt(j).getColumnName()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"addedGeneratedColumns.size()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"rc.getTableColumnDescriptor()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"rc.getTableColumnDescriptor().getColumnName()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"resultRCL.elementAt(i)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"((ResultColumn)resultRCL.elementAt(i)).getExpression()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"rc.hasGenerationClause()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"targetRCL.elementAt(i)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"resultSet.getResultColumns()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"targetRCL.size()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"PARENTHESIZED_EXPRESSION","change":"(resultExpression instanceof DefaultNode)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"PARENTHESIZED_EXPRESSION","change":"((ResultColumn)resultRCL.elementAt(i))","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"POSTFIX_EXPRESSION","change":"i--","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"POSTFIX_EXPRESSION","change":"count--","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"POSTFIX_EXPRESSION","change":"j++","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"POSTFIX_EXPRESSION","change":"i++","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"PREFIX_EXPRESSION","change":"!(resultExpression instanceof DefaultNode)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"QUALIFIED_NAME","change":"SQLState.LANG_CANT_OVERRIDE_GENERATION_CLAUSE","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SIMPLE_TYPE","change":"DefaultNode","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SIMPLE_TYPE","change":"ResultColumn","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SIMPLE_TYPE","change":"ValueNode","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SIMPLE_TYPE","change":"ResultColumnList","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SIMPLE_TYPE","change":"StandardException","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SIMPLE_TYPE","change":"ColumnDescriptorList","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ColumnDescriptorList addedGeneratedColumns","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SINGLE_VARIABLE_DECLARATION","change":"boolean forUpdate","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ResultColumnList targetRCL","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"THROW_STATEMENT","change":"throw StandardException.newException(SQLState.LANG_CANT_OVERRIDE_GENERATION_CLAUSE,rc.getName());\n","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_EXPRESSION","change":"int [j\u003d0]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_EXPRESSION","change":"int [i\u003d0]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"addedColumnName","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"j","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"addedCount","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"columnName","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"allIsForgiven","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"resultExpression","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"rc","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"i","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"resultRCL","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"count","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [addedColumnName\u003daddedGeneratedColumns.elementAt(j).getColumnName()]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [addedCount\u003daddedGeneratedColumns.size()]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [columnName\u003drc.getTableColumnDescriptor().getColumnName()]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"boolean [allIsForgiven\u003dfalse]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"ValueNode [resultExpression\u003d((ResultColumn)resultRCL.elementAt(i)).getExpression()]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"ResultColumn [rc\u003d(ResultColumn)targetRCL.elementAt(i)]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"ResultColumnList [resultRCL\u003dresultSet.getResultColumns()]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [count\u003dtargetRCL.size()]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"EXPRESSION_STATEMENT","change":"forbidGenerationOverrides(targetColumnList,false,null)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.compile.InsertNode.bindStatement()"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"forbidGenerationOverrides(targetColumnList,false,null)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.compile.InsertNode.bindStatement()"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"CLASS_T","local":"java.engine.org.apache.derby.impl.sql.compile.UpdateNode"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"ASSIGNMENT","change":"allIsForgiven \u003d true","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"BOOLEAN_LITERAL","change":"true","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"BOOLEAN_LITERAL","change":"false","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"BREAK_STATEMENT","change":"break;\n","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"CAST_EXPRESSION","change":"(ResultColumn)resultRCL.elementAt(i)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"CAST_EXPRESSION","change":"(ResultColumn)targetRCL.elementAt(i)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"CONTINUE_STATEMENT","change":"continue;\n","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"EXPRESSION_STATEMENT","change":"allIsForgiven\u003dtrue","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"FOR_STATEMENT","change":"for (int j\u003d0; j \u003c addedCount; j++) {\n  String addedColumnName\u003daddedGeneratedColumns.elementAt(j).getColumnName();\n  if (columnName.equals(addedColumnName)) {\n    allIsForgiven\u003dtrue;\n    break;\n  }\n}\n","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"FOR_STATEMENT","change":"for (int i\u003d0; i \u003c count; i++) {\n  ResultColumn rc\u003d(ResultColumn)targetRCL.elementAt(i);\n  if (rc.hasGenerationClause()) {\n    ValueNode resultExpression\u003d((ResultColumn)resultRCL.elementAt(i)).getExpression();\n    if (!(resultExpression instanceof DefaultNode)) {\n      boolean allIsForgiven\u003dfalse;\n      String columnName\u003drc.getTableColumnDescriptor().getColumnName();\n      int addedCount\u003daddedGeneratedColumns.size();\n      for (int j\u003d0; j \u003c addedCount; j++) {\n        String addedColumnName\u003daddedGeneratedColumns.elementAt(j).getColumnName();\n        if (columnName.equals(addedColumnName)) {\n          allIsForgiven\u003dtrue;\n          break;\n        }\n      }\n      if (allIsForgiven) {\n        continue;\n      }\n      throw StandardException.newException(SQLState.LANG_CANT_OVERRIDE_GENERATION_CLAUSE,rc.getName());\n    }\n else {\n      continue;\n    }\n  }\n}\n","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"IF_STATEMENT","change":"allIsForgiven","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"IF_STATEMENT","change":"columnName.equals(addedColumnName)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"IF_STATEMENT","change":"!(resultExpression instanceof DefaultNode)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"IF_STATEMENT","change":"rc.hasGenerationClause()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"INFIX_EXPRESSION","change":"j \u003c addedCount","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"INFIX_EXPRESSION","change":"i \u003c count","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"INSTANCEOF_EXPRESSION","change":"resultExpression instanceof DefaultNode","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"JAVADOC","change":"/** \n * Do not allow generation clauses to be overriden. Throws an exception if the user attempts to override the value of a generated column.  The only value allowed in a generated column is DEFAULT. We will use addedGeneratedColumns list to pass through the generated columns which have already been added to the update list.\n * @param targetRCL  the row in the table being UPDATEd\n * @param addedGeneratedColumns generated columns which the compiler addedearlier on\n * @throws StandardException on error\n */\n","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"rc.getName()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"StandardException.newException(SQLState.LANG_CANT_OVERRIDE_GENERATION_CLAUSE,rc.getName())","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"columnName.equals(addedColumnName)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"addedGeneratedColumns.elementAt(j)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"addedGeneratedColumns.elementAt(j).getColumnName()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"addedGeneratedColumns.size()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"rc.getTableColumnDescriptor()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"rc.getTableColumnDescriptor().getColumnName()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"resultRCL.elementAt(i)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"((ResultColumn)resultRCL.elementAt(i)).getExpression()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"rc.hasGenerationClause()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"targetRCL.elementAt(i)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"resultSet.getResultColumns()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"targetRCL.size()","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"MODIFIER","change":"private","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"PARENTHESIZED_EXPRESSION","change":"(resultExpression instanceof DefaultNode)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"PARENTHESIZED_EXPRESSION","change":"((ResultColumn)resultRCL.elementAt(i))","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"POSTFIX_EXPRESSION","change":"j++","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"POSTFIX_EXPRESSION","change":"i++","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"PREFIX_EXPRESSION","change":"!(resultExpression instanceof DefaultNode)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"QUALIFIED_NAME","change":"SQLState.LANG_CANT_OVERRIDE_GENERATION_CLAUSE","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SIMPLE_TYPE","change":"DefaultNode","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SIMPLE_TYPE","change":"ResultColumn","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SIMPLE_TYPE","change":"ValueNode","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SIMPLE_TYPE","change":"ResultColumnList","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SIMPLE_TYPE","change":"StandardException","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SIMPLE_TYPE","change":"ColumnDescriptorList","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ColumnDescriptorList addedGeneratedColumns","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ResultColumnList targetRCL","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"THROW_STATEMENT","change":"throw StandardException.newException(SQLState.LANG_CANT_OVERRIDE_GENERATION_CLAUSE,rc.getName());\n","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_EXPRESSION","change":"int [j\u003d0]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_EXPRESSION","change":"int [i\u003d0]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"addedColumnName","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"j","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"addedCount","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"columnName","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"allIsForgiven","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"resultExpression","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"rc","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"i","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"resultRCL","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"count","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [addedColumnName\u003daddedGeneratedColumns.elementAt(j).getColumnName()]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [addedCount\u003daddedGeneratedColumns.size()]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"String [columnName\u003drc.getTableColumnDescriptor().getColumnName()]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"boolean [allIsForgiven\u003dfalse]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"ValueNode [resultExpression\u003d((ResultColumn)resultRCL.elementAt(i)).getExpression()]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"ResultColumn [rc\u003d(ResultColumn)targetRCL.elementAt(i)]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"ResultColumnList [resultRCL\u003dresultSet.getResultColumns()]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [count\u003dtargetRCL.size()]","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"EXPRESSION_STATEMENT","change":"forbidGenerationOverrides(resultSet.getResultColumns(),addedGeneratedColumns)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.UpdateNode.bindStatement()"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"forbidGenerationOverrides(resultSet.getResultColumns(),addedGeneratedColumns)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.UpdateNode.bindStatement()"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"EXPRESSION_STATEMENT","change":"forbidGenerationOverrides(resultSet.getResultColumns(),true,addedGeneratedColumns)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.compile.UpdateNode.bindStatement()"}
{"project":"apache_derby","commit":"47611b15f9599718c37fa63b0b94c86658357d52","changeType":"METHOD_INVOCATION","change":"forbidGenerationOverrides(resultSet.getResultColumns(),true,addedGeneratedColumns)","source":"org.apache.derby.impl.sql.compile.DMLModStatementNode.forbidGenerationOverrides(ResultColumnList,boolean,ColumnDescriptorList)","target":"org.apache.derby.impl.sql.compile.UpdateNode.forbidGenerationOverrides(ResultColumnList,ColumnDescriptorList)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.compile.UpdateNode.bindStatement()"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"METHOD_DECLARATION","change":"org.apache.derbyTesting.functionTests.tests.lang.SecurityPolicyReloadingTest.sleep(long)","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"EXT_S","local":"java.testing.org.apache.derbyTesting.functionTests.tests.lang.SecurityPolicyReloadingTest"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"EXPRESSION_STATEMENT","change":"Thread.currentThread().sleep(numberOfSeconds * (1000L))","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"EXT_S","local":"org.apache.derbyTesting.functionTests.tests.lang.SecurityPolicyReloadingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"METHOD_INVOCATION","change":"Thread.currentThread().sleep(numberOfSeconds * (1000L))","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"EXT_S","local":"org.apache.derbyTesting.functionTests.tests.lang.SecurityPolicyReloadingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"EXPRESSION_STATEMENT","change":"Thread.sleep(10)","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"EXT_S","local":"org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testDisposableStatsEagerness()"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"METHOD_INVOCATION","change":"Thread.sleep(10)","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"EXT_S","local":"org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testDisposableStatsEagerness()"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"TRY_STATEMENT","change":"try {\n  Thread.sleep(10);\n}\n catch (InterruptedException ie) {\n  Thread.currentThread().interrupt();\n}\n","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"EXT_S","local":"org.apache.derbyTesting.functionTests.tests.lang.UpdateStatisticsTest.testDisposableStatsEagerness()"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"METHOD_DECLARATION","change":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"CLASS_S","local":"java.testing.org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"CATCH_CLAUSE","change":"catch (InterruptedException ie) {\n  alarm(\"sleep call interrupted\");\n}\n","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"EXPRESSION_STATEMENT","change":"alarm(\"sleep call interrupted\")","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"EXPRESSION_STATEMENT","change":"Thread.sleep(millis)","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"JAVADOC","change":"/** \n * Puts the current thread to sleep, but \u003cem\u003edoes not\u003c/em\u003e guarantee that the thread sleeps for the specified amount of time (interrupts are not handled).\n * @param millis number of milliseconds to sleep\n */\n","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"METHOD_INVOCATION","change":"alarm(\"sleep call interrupted\")","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"METHOD_INVOCATION","change":"Thread.sleep(millis)","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"MODIFIER","change":"static","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"MODIFIER","change":"private","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"PRIMITIVE_TYPE","change":"long","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"SIMPLE_TYPE","change":"InterruptedException","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"SINGLE_VARIABLE_DECLARATION","change":"InterruptedException ie","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"SINGLE_VARIABLE_DECLARATION","change":"long millis","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"STRING_LITERAL","change":"sleep call interrupted","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"TRY_STATEMENT","change":"try {\n  Thread.sleep(millis);\n}\n catch (InterruptedException ie) {\n  alarm(\"sleep call interrupted\");\n}\n","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"METHOD_DECLARATION","change":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"CLASS_T","local":"java.testing.org.apache.derbyTesting.junit.BaseTestCase"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"CATCH_CLAUSE","change":"catch (InterruptedException ie) {\n  alarm(\"sleep interrupted\");\n}\n","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"EXPRESSION_STATEMENT","change":"alarm(\"sleep interrupted\")","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"EXPRESSION_STATEMENT","change":"Thread.sleep(ms)","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"JAVADOC","change":"/** \n * Makes the current thread sleep up to  {@code ms} milliseconds. \n */\n","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"METHOD_INVOCATION","change":"alarm(\"sleep interrupted\")","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"METHOD_INVOCATION","change":"Thread.sleep(ms)","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"MODIFIER","change":"static","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"MODIFIER","change":"public","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"PRIMITIVE_TYPE","change":"long","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"SIMPLE_TYPE","change":"InterruptedException","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"SINGLE_VARIABLE_DECLARATION","change":"InterruptedException ie","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"SINGLE_VARIABLE_DECLARATION","change":"long ms","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"STRING_LITERAL","change":"sleep interrupted","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"TRY_STATEMENT","change":"try {\n  Thread.sleep(ms);\n}\n catch (InterruptedException ie) {\n  alarm(\"sleep interrupted\");\n}\n","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"EXPRESSION_STATEMENT","change":"sleep(1)","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.junit.BaseTestCase.sleepAtLeastOneTick()"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"METHOD_INVOCATION","change":"sleep(1)","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.junit.BaseTestCase.sleepAtLeastOneTick()"}
{"project":"apache_derby","commit":"afe4dfdfd23be510fcfb373de969428a128e283f","changeType":"WHILE_STATEMENT","change":"while (System.currentTimeMillis() \u003d\u003d currentTime) {\n  sleep(1);\n}\n","source":"org.apache.derbyTesting.functionTests.tests.memorydb.DropWhileConnectingTest.sleep(long)","target":"org.apache.derbyTesting.junit.BaseTestCase.sleep(long)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.junit.BaseTestCase.sleepAtLeastOneTick()"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"METHOD_DECLARATION","change":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"CLASS_S","local":"java.testing.org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"CATCH_CLAUSE","change":"catch (InstantiationException ie) {\n  throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ ie.getMessage());\n}\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"CATCH_CLAUSE","change":"catch (IllegalAccessException iae) {\n  throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ iae.getMessage());\n}\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"CATCH_CLAUSE","change":"catch (ClassNotFoundException cnfe) {\n  throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ cnfe.getMessage());\n}\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"CLASS_INSTANCE_CREATION","change":"new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ ie.getMessage())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"CLASS_INSTANCE_CREATION","change":"new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ iae.getMessage())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"CLASS_INSTANCE_CREATION","change":"new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ cnfe.getMessage())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"EXPRESSION_STATEMENT","change":"Class.forName(driverClass).newInstance()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"INFIX_EXPRESSION","change":"\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ ie.getMessage()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"INFIX_EXPRESSION","change":"\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ iae.getMessage()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"INFIX_EXPRESSION","change":"\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ cnfe.getMessage()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"JAVADOC","change":"/** \n * Load the specified JDBC driver\n * @param driverClass name of the JDBC driver class.\n * @throws SQLException if loading the driver fails.\n */\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"METHOD_INVOCATION","change":"ie.getMessage()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"METHOD_INVOCATION","change":"iae.getMessage()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"METHOD_INVOCATION","change":"cnfe.getMessage()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"METHOD_INVOCATION","change":"Class.forName(driverClass)","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"METHOD_INVOCATION","change":"Class.forName(driverClass).newInstance()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"MODIFIER","change":"static","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"MODIFIER","change":"private","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SIMPLE_TYPE","change":"SQLException","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SIMPLE_TYPE","change":"InstantiationException","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SIMPLE_TYPE","change":"IllegalAccessException","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SIMPLE_TYPE","change":"ClassNotFoundException","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SINGLE_VARIABLE_DECLARATION","change":"InstantiationException ie","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SINGLE_VARIABLE_DECLARATION","change":"IllegalAccessException iae","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ClassNotFoundException cnfe","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String driverClass","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"STRING_LITERAL","change":"\u0027: ","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"STRING_LITERAL","change":"Failed to load JDBC driver \u0027","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"THROW_STATEMENT","change":"throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ ie.getMessage());\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"THROW_STATEMENT","change":"throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ iae.getMessage());\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"THROW_STATEMENT","change":"throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ cnfe.getMessage());\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"TRY_STATEMENT","change":"try {\n  Class.forName(driverClass).newInstance();\n}\n catch (ClassNotFoundException cnfe) {\n  throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ cnfe.getMessage());\n}\ncatch (IllegalAccessException iae) {\n  throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ iae.getMessage());\n}\ncatch (InstantiationException ie) {\n  throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ ie.getMessage());\n}\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"EXPRESSION_STATEMENT","change":"loadJDBCDriver(client.getJDBCDriverName())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SUR_S","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getConnection()"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"METHOD_INVOCATION","change":"loadJDBCDriver(client.getJDBCDriverName())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":false,"scope":"SUR_S","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getConnection()"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"METHOD_DECLARATION","change":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"CLASS_T","local":"java.testing.org.apache.derbyTesting.functionTests.util.TestConfiguration"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"EXPRESSION_STATEMENT","change":"loadJDBCDriver(client.getJDBCDriverName())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultConnection()"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"METHOD_INVOCATION","change":"loadJDBCDriver(client.getJDBCDriverName())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultConnection()"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"CATCH_CLAUSE","change":"catch (InstantiationException ie) {\n  throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ ie.getMessage());\n}\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"CATCH_CLAUSE","change":"catch (IllegalAccessException iae) {\n  throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ iae.getMessage());\n}\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"CATCH_CLAUSE","change":"catch (ClassNotFoundException cnfe) {\n  throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ cnfe.getMessage());\n}\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"CLASS_INSTANCE_CREATION","change":"new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ ie.getMessage())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"CLASS_INSTANCE_CREATION","change":"new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ iae.getMessage())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"CLASS_INSTANCE_CREATION","change":"new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ cnfe.getMessage())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"EXPRESSION_STATEMENT","change":"Class.forName(driverClass).newInstance()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"INFIX_EXPRESSION","change":"\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ ie.getMessage()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"INFIX_EXPRESSION","change":"\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ iae.getMessage()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"INFIX_EXPRESSION","change":"\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ cnfe.getMessage()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"JAVADOC","change":"/** \n * Load the specified JDBC driver\n * @param driverClass name of the JDBC driver class.\n * @throws SQLException if loading the driver fails.\n */\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"METHOD_INVOCATION","change":"ie.getMessage()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"METHOD_INVOCATION","change":"iae.getMessage()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"METHOD_INVOCATION","change":"cnfe.getMessage()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"METHOD_INVOCATION","change":"Class.forName(driverClass)","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"METHOD_INVOCATION","change":"Class.forName(driverClass).newInstance()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"MODIFIER","change":"static","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"MODIFIER","change":"private","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SIMPLE_TYPE","change":"SQLException","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SIMPLE_TYPE","change":"InstantiationException","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SIMPLE_TYPE","change":"IllegalAccessException","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SIMPLE_TYPE","change":"ClassNotFoundException","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SINGLE_VARIABLE_DECLARATION","change":"InstantiationException ie","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SINGLE_VARIABLE_DECLARATION","change":"IllegalAccessException iae","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ClassNotFoundException cnfe","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String driverClass","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"STRING_LITERAL","change":"\u0027: ","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"STRING_LITERAL","change":"Failed to load JDBC driver \u0027","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"THROW_STATEMENT","change":"throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ ie.getMessage());\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"THROW_STATEMENT","change":"throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ iae.getMessage());\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"THROW_STATEMENT","change":"throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ cnfe.getMessage());\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"f308936b4f1acfd70c23a4dd905c3a7422512070","changeType":"TRY_STATEMENT","change":"try {\n  Class.forName(driverClass).newInstance();\n}\n catch (ClassNotFoundException cnfe) {\n  throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ cnfe.getMessage());\n}\ncatch (IllegalAccessException iae) {\n  throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ iae.getMessage());\n}\ncatch (InstantiationException ie) {\n  throw new SQLException(\"Failed to load JDBC driver \u0027\" + driverClass + \"\u0027: \"+ ie.getMessage());\n}\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.loadJDBCDriver(String)","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.loadJDBCDriver(String)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"CLASS_S","local":"java.engine.org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"ARRAY_CREATION","change":"new byte[saltLength]","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"ARRAY_TYPE","change":"byte[]","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"CLASS_INSTANCE_CREATION","change":"new SecureRandom()","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"DIMENSION","change":"[]","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"EXPRESSION_STATEMENT","change":"random.nextBytes(salt)","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"JAVADOC","change":"/** \n * Generate an array of random bytes to use as salt when hashing credentials.\n * @param props database properties that possibly specify the desiredlength of the salt\n * @return random bytes\n */\n","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"METHOD_INVOCATION","change":"random.nextBytes(salt)","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"METHOD_INVOCATION","change":"getIntProperty(props,Property.AUTHENTICATION_BUILTIN_SALT_LENGTH,Property.AUTHENTICATION_BUILTIN_SALT_LENGTH_DEFAULT,0,Integer.MAX_VALUE)","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"MODIFIER","change":"private","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"PRIMITIVE_TYPE","change":"byte","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"QUALIFIED_NAME","change":"Integer.MAX_VALUE","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"QUALIFIED_NAME","change":"Property.AUTHENTICATION_BUILTIN_SALT_LENGTH_DEFAULT","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"QUALIFIED_NAME","change":"Property.AUTHENTICATION_BUILTIN_SALT_LENGTH","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"RETURN_STATEMENT","change":"return salt;\n","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"SIMPLE_TYPE","change":"SecureRandom","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"SIMPLE_TYPE","change":"Dictionary","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Dictionary props","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"salt","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"random","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"saltLength","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"byte[] [salt\u003dnew byte[saltLength]]","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"SecureRandom [random\u003dnew SecureRandom()]","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [saltLength\u003dgetIntProperty(props,Property.AUTHENTICATION_BUILTIN_SALT_LENGTH,Property.AUTHENTICATION_BUILTIN_SALT_LENGTH_DEFAULT,0,Integer.MAX_VALUE)]","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"ASSIGNMENT","change":"salt \u003d generateRandomSalt(props)","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SUR_S","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.encryptUsingDefaultAlgorithm(String,String,Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"EXPRESSION_STATEMENT","change":"salt\u003dgenerateRandomSalt(props)","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SUR_S","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.encryptUsingDefaultAlgorithm(String,String,Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"METHOD_INVOCATION","change":"generateRandomSalt(props)","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":false,"scope":"SUR_S","local":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.encryptUsingDefaultAlgorithm(String,String,Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"CLASS_T","local":"java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"ARRAY_CREATION","change":"new byte[saltLength]","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"ARRAY_TYPE","change":"byte[]","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"CLASS_INSTANCE_CREATION","change":"new SecureRandom()","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"DIMENSION","change":"[]","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"EXPRESSION_STATEMENT","change":"random.nextBytes(salt)","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"JAVADOC","change":"/** \n * Generate an array of random bytes to use as salt when hashing credentials.\n * @param props database properties that possibly specify the desiredlength of the salt\n * @return random bytes\n */\n","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"METHOD_INVOCATION","change":"random.nextBytes(salt)","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"METHOD_INVOCATION","change":"getIntProperty(props,Property.AUTHENTICATION_BUILTIN_SALT_LENGTH,Property.AUTHENTICATION_BUILTIN_SALT_LENGTH_DEFAULT,0,Integer.MAX_VALUE)","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"MODIFIER","change":"private","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"NUMBER_LITERAL","change":"0","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"PRIMITIVE_TYPE","change":"byte","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"QUALIFIED_NAME","change":"Integer.MAX_VALUE","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"QUALIFIED_NAME","change":"Property.AUTHENTICATION_BUILTIN_SALT_LENGTH_DEFAULT","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"QUALIFIED_NAME","change":"Property.AUTHENTICATION_BUILTIN_SALT_LENGTH","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"RETURN_STATEMENT","change":"return salt;\n","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"SIMPLE_TYPE","change":"SecureRandom","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"SIMPLE_TYPE","change":"Dictionary","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Dictionary props","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"salt","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"random","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"saltLength","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"byte[] [salt\u003dnew byte[saltLength]]","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"SecureRandom [random\u003dnew SecureRandom()]","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"int [saltLength\u003dgetIntProperty(props,Property.AUTHENTICATION_BUILTIN_SALT_LENGTH,Property.AUTHENTICATION_BUILTIN_SALT_LENGTH_DEFAULT,0,Integer.MAX_VALUE)]","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"ASSIGNMENT","change":"salt \u003d generateRandomSalt(props)","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.makePasswordHasher(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"EXPRESSION_STATEMENT","change":"salt\u003dgenerateRandomSalt(props)","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.makePasswordHasher(Dictionary)"}
{"project":"apache_derby","commit":"a84fc2679293c30e3ebf1b62443cc8a34225b0df","changeType":"METHOD_INVOCATION","change":"generateRandomSalt(props)","source":"org.apache.derby.impl.jdbc.authentication.AuthenticationServiceBase.generateRandomSalt(Dictionary)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.generateRandomSalt(Dictionary)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.makePasswordHasher(Dictionary)"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_DECLARATION","change":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"CLASS_S","local":"java.testing.org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"getDefaultDataSourceProperties()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SUR_S","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"getDataSource(getDefaultDataSourceProperties())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SUR_S","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"RETURN_STATEMENT","change":"return getDataSource(getDefaultDataSourceProperties());\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SUR_S","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"CLASS_INSTANCE_CREATION","change":"new Properties()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"EXPRESSION_STATEMENT","change":"attrs.setProperty(\"connectionAttributes\",\"create\u003dtrue\")","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"EXPRESSION_STATEMENT","change":"attrs.setProperty(\"databaseName\",CONFIG.getDatabaseName())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"EXPRESSION_STATEMENT","change":"attrs.setProperty(\"portNumber\",Integer.toString(CONFIG.getPort()))","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"EXPRESSION_STATEMENT","change":"attrs.setProperty(\"serverName\",CONFIG.getHostName())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"IF_STATEMENT","change":"!usingEmbedded()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"JAVADOC","change":"/** \n * Generate properties which can be set on a \u003ccode\u003eDataSource\u003c/code\u003e in order to connect to the default database.\n * @return a \u003ccode\u003eProperties\u003c/code\u003e object containing servername, port number, database name and other attributes needed to connect to the default database\n */\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"attrs.setProperty(\"connectionAttributes\",\"create\u003dtrue\")","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"CONFIG.getDatabaseName()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"attrs.setProperty(\"databaseName\",CONFIG.getDatabaseName())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"CONFIG.getPort()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"Integer.toString(CONFIG.getPort())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"attrs.setProperty(\"portNumber\",Integer.toString(CONFIG.getPort()))","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"CONFIG.getHostName()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"attrs.setProperty(\"serverName\",CONFIG.getHostName())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"usingEmbedded()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"MODIFIER","change":"static","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"MODIFIER","change":"private","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"PREFIX_EXPRESSION","change":"!usingEmbedded()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"RETURN_STATEMENT","change":"return attrs;\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"SIMPLE_TYPE","change":"Properties","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"STRING_LITERAL","change":"create\u003dtrue","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"STRING_LITERAL","change":"connectionAttributes","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"STRING_LITERAL","change":"databaseName","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"STRING_LITERAL","change":"portNumber","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"STRING_LITERAL","change":"serverName","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"attrs","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Properties [attrs\u003dnew Properties()]","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"getDefaultDataSourceProperties()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SUR_S","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getXADataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"getXADataSource(getDefaultDataSourceProperties())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SUR_S","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getXADataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"RETURN_STATEMENT","change":"return getXADataSource(getDefaultDataSourceProperties());\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SUR_S","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getXADataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"getDefaultDataSourceProperties()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SUR_S","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getConnectionPoolDataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"getConnectionPoolDataSource(getDefaultDataSourceProperties())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SUR_S","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getConnectionPoolDataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"RETURN_STATEMENT","change":"return getConnectionPoolDataSource(getDefaultDataSourceProperties());\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":false,"scope":"SUR_S","local":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getConnectionPoolDataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_DECLARATION","change":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"CLASS_T","local":"java.testing.org.apache.derbyTesting.functionTests.util.TestConfiguration"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"CLASS_INSTANCE_CREATION","change":"new Properties()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"EXPRESSION_STATEMENT","change":"attrs.setProperty(\"connectionAttributes\",\"create\u003dtrue\")","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"EXPRESSION_STATEMENT","change":"attrs.setProperty(\"databaseName\",DERBY_TEST_CONFIG.getDatabaseName())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"EXPRESSION_STATEMENT","change":"attrs.setProperty(\"portNumber\",Integer.toString(DERBY_TEST_CONFIG.getPort()))","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"EXPRESSION_STATEMENT","change":"attrs.setProperty(\"serverName\",DERBY_TEST_CONFIG.getHostName())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"IF_STATEMENT","change":"!(DERBY_TEST_CONFIG.getJDBCClient() \u003d\u003d JDBCClient.EMBEDDED)","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"INFIX_EXPRESSION","change":"DERBY_TEST_CONFIG.getJDBCClient() \u003d\u003d JDBCClient.EMBEDDED","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"JAVADOC","change":"/** \n * Generate properties which can be set on a \u003ccode\u003eDataSource\u003c/code\u003e in order to connect to the default database.\n * @return a \u003ccode\u003eProperties\u003c/code\u003e object containing servername, port number, database name and other attributes needed to connect to the default database\n */\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"attrs.setProperty(\"connectionAttributes\",\"create\u003dtrue\")","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"DERBY_TEST_CONFIG.getDatabaseName()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"attrs.setProperty(\"databaseName\",DERBY_TEST_CONFIG.getDatabaseName())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"DERBY_TEST_CONFIG.getPort()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"Integer.toString(DERBY_TEST_CONFIG.getPort())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"attrs.setProperty(\"portNumber\",Integer.toString(DERBY_TEST_CONFIG.getPort()))","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"DERBY_TEST_CONFIG.getHostName()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"attrs.setProperty(\"serverName\",DERBY_TEST_CONFIG.getHostName())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"DERBY_TEST_CONFIG.getJDBCClient()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"MODIFIER","change":"static","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"MODIFIER","change":"public","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"PARENTHESIZED_EXPRESSION","change":"(DERBY_TEST_CONFIG.getJDBCClient() \u003d\u003d JDBCClient.EMBEDDED)","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"PREFIX_EXPRESSION","change":"!(DERBY_TEST_CONFIG.getJDBCClient() \u003d\u003d JDBCClient.EMBEDDED)","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"QUALIFIED_NAME","change":"JDBCClient.EMBEDDED","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"RETURN_STATEMENT","change":"return attrs;\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"SIMPLE_TYPE","change":"Properties","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"STRING_LITERAL","change":"create\u003dtrue","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"STRING_LITERAL","change":"connectionAttributes","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"STRING_LITERAL","change":"databaseName","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"STRING_LITERAL","change":"portNumber","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"STRING_LITERAL","change":"serverName","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"attrs","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Properties [attrs\u003dnew Properties()]","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"TestConfiguration.getDefaultDataSourceProperties()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.util.TestDataSourceFactory.getDataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"getDataSource(TestConfiguration.getDefaultDataSourceProperties())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.util.TestDataSourceFactory.getDataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"RETURN_STATEMENT","change":"return getDataSource(TestConfiguration.getDefaultDataSourceProperties());\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.util.TestDataSourceFactory.getDataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"TestConfiguration.getDefaultDataSourceProperties()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.util.TestDataSourceFactory.getConnectionPoolDataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"getConnectionPoolDataSource(TestConfiguration.getDefaultDataSourceProperties())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.util.TestDataSourceFactory.getConnectionPoolDataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"RETURN_STATEMENT","change":"return getConnectionPoolDataSource(TestConfiguration.getDefaultDataSourceProperties());\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.util.TestDataSourceFactory.getConnectionPoolDataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"TestConfiguration.getDefaultDataSourceProperties()","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.util.TestDataSourceFactory.getXADataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"METHOD_INVOCATION","change":"getXADataSource(TestConfiguration.getDefaultDataSourceProperties())","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.util.TestDataSourceFactory.getXADataSource()"}
{"project":"apache_derby","commit":"57efc3c3c7c7075505aebc6ed8fcb94b2a9beb0b","changeType":"RETURN_STATEMENT","change":"return getXADataSource(TestConfiguration.getDefaultDataSourceProperties());\n","source":"org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase.getDefaultDataSourceProperties()","target":"org.apache.derbyTesting.functionTests.util.TestConfiguration.getDefaultDataSourceProperties()","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.util.TestDataSourceFactory.getXADataSource()"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.sql.compile.NodeFactory.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"EXT_S","local":"java.engine.org.apache.derby.iapi.sql.compile.NodeFactory"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"CLASS_T","local":"java.engine.org.apache.derby.impl.sql.compile.FromBaseTable"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"ASSIGNMENT","change":"vtiNode \u003d getNodeFactory().getNode(C_NodeTypes.FROM_VTI,newNode,correlationName,resultColumns,tableProperties,exposedName,cm)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"ASSIGNMENT","change":"vtiNode \u003d getNodeFactory().getNode(C_NodeTypes.FROM_VTI,newNode,correlationName,resultColumns,tableProperties,cm)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"CAST_EXPRESSION","change":"(ResultSetNode)vtiNode","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"EXPRESSION_STATEMENT","change":"vtiNode\u003dgetNodeFactory().getNode(C_NodeTypes.FROM_VTI,newNode,correlationName,resultColumns,tableProperties,exposedName,cm)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"EXPRESSION_STATEMENT","change":"vtiNode\u003dgetNodeFactory().getNode(C_NodeTypes.FROM_VTI,newNode,correlationName,resultColumns,tableProperties,cm)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"IF_STATEMENT","change":"correlationName !\u003d null","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"INFIX_EXPRESSION","change":"correlationName !\u003d null","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"JAVADOC","change":"/** \n * Return a node that represents invocation of the virtual table for the given table descriptor. The mapping of the table descriptor to a specific VTI class name will occur as part of the \"init\" phase for the NewInvocationNode that we create here. Currently only handles no argument VTIs corresponding to a subset of the diagnostic tables. (e.g. lock_table). The node returned is a FROM_VTI node with a passed in NEW_INVOCATION_NODE representing the class, with no arguments. Other attributes of the original FROM_TABLE node (such as resultColumns) are passed into the FROM_VTI node.\n */\n","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_INVOCATION","change":"getNodeFactory()","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_INVOCATION","change":"getNodeFactory().getNode(C_NodeTypes.FROM_VTI,newNode,correlationName,resultColumns,tableProperties,exposedName,cm)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_INVOCATION","change":"td.getDescriptorName()","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_INVOCATION","change":"td.getSchemaName()","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_INVOCATION","change":"newNode.makeTableName(td.getSchemaName(),td.getDescriptorName())","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_INVOCATION","change":"getNodeFactory().getNode(C_NodeTypes.FROM_VTI,newNode,correlationName,resultColumns,tableProperties,cm)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_INVOCATION","change":"getNodeFactory().getNode(C_NodeTypes.NEW_INVOCATION_NODE,null,td,Collections.EMPTY_LIST,Boolean.FALSE,cm)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"MODIFIER","change":"private","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"NULL_LITERAL","change":"null","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"QUALIFIED_NAME","change":"C_NodeTypes.FROM_VTI","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"QUALIFIED_NAME","change":"Boolean.FALSE","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"QUALIFIED_NAME","change":"Collections.EMPTY_LIST","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"QUALIFIED_NAME","change":"C_NodeTypes.NEW_INVOCATION_NODE","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"RETURN_STATEMENT","change":"return (ResultSetNode)vtiNode;\n","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"ResultSetNode","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"TableName","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"QueryTreeNode","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"StandardException","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"ContextManager","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"Properties","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"ResultColumnList","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"TableDescriptor","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ContextManager cm","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Properties tableProperties","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ResultColumnList resultColumns","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String correlationName","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SINGLE_VARIABLE_DECLARATION","change":"TableDescriptor td","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"exposedName","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"vtiNode","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"newNode","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"TableName [exposedName\u003dnewNode.makeTableName(td.getSchemaName(),td.getDescriptorName())]","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"QueryTreeNode [vtiNode]","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"QueryTreeNode [newNode\u003dgetNodeFactory().getNode(C_NodeTypes.NEW_INVOCATION_NODE,null,td,Collections.EMPTY_LIST,Boolean.FALSE,cm)]","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_INVOCATION","change":"mapTableAsVTI(tableDescriptor,getCorrelationName(),resultColumns,getProperties(),getContextManager())","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"SUR_T","local":"org.apache.derby.impl.sql.compile.FromBaseTable.bindNonVTITables(DataDictionary,FromList)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"ResultSetNode [vtiNode\u003dmapTableAsVTI(tableDescriptor,getCorrelationName(),resultColumns,getProperties(),getContextManager())]","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":true,"scope":"SUR_T","local":"org.apache.derby.impl.sql.compile.FromBaseTable.bindNonVTITables(DataDictionary,FromList)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_INVOCATION","change":"getNodeFactory().mapTableAsVTI(tableDescriptor,getCorrelationName(),resultColumns,getProperties(),getContextManager())","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SUR_S","local":"org.apache.derby.impl.sql.compile.FromBaseTable.bindNonVTITables(DataDictionary,FromList)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"ResultSetNode [vtiNode\u003dgetNodeFactory().mapTableAsVTI(tableDescriptor,getCorrelationName(),resultColumns,getProperties(),getContextManager())]","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SUR_S","local":"org.apache.derby.impl.sql.compile.FromBaseTable.bindNonVTITables(DataDictionary,FromList)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"CLASS_S","local":"java.engine.org.apache.derby.impl.sql.compile.NodeFactoryImpl"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"ASSIGNMENT","change":"vtiNode \u003d getNode(C_NodeTypes.FROM_VTI,newNode,correlationName,resultColumns,tableProperties,exposedName,cm)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"ASSIGNMENT","change":"vtiNode \u003d getNode(C_NodeTypes.FROM_VTI,newNode,correlationName,resultColumns,tableProperties,cm)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"CAST_EXPRESSION","change":"(ResultSetNode)vtiNode","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"EXPRESSION_STATEMENT","change":"vtiNode\u003dgetNode(C_NodeTypes.FROM_VTI,newNode,correlationName,resultColumns,tableProperties,exposedName,cm)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"EXPRESSION_STATEMENT","change":"vtiNode\u003dgetNode(C_NodeTypes.FROM_VTI,newNode,correlationName,resultColumns,tableProperties,cm)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"IF_STATEMENT","change":"correlationName !\u003d null","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"INFIX_EXPRESSION","change":"correlationName !\u003d null","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"JAVADOC","change":"/** \n * Return a node that represents invocation of the virtual table for the given table descriptor.  The mapping of the table descriptor to a specific VTI class name will occur as part of the \"init\" phase for the NewInvocationNode that we create here. \u003cP\u003e Currently only handles no argument vtis corresponding to a subset of the diagnostic tables. (e.g. lock_table). The node returned is a FROM_VTI node with a passed in NEW_INVOCATION_NODE representing the class, with no arguments. Other attributes of the original FROM_TABLE node (such as resultColumns) are passed into the FROM_VTI node.\n */\n","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_INVOCATION","change":"getNode(C_NodeTypes.FROM_VTI,newNode,correlationName,resultColumns,tableProperties,exposedName,cm)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_INVOCATION","change":"td.getDescriptorName()","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_INVOCATION","change":"td.getSchemaName()","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_INVOCATION","change":"newNode.makeTableName(td.getSchemaName(),td.getDescriptorName())","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_INVOCATION","change":"getNode(C_NodeTypes.FROM_VTI,newNode,correlationName,resultColumns,tableProperties,cm)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"METHOD_INVOCATION","change":"getNode(C_NodeTypes.NEW_INVOCATION_NODE,null,td,emptyVector,Boolean.FALSE,cm)","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"MODIFIER","change":"public","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"NULL_LITERAL","change":"null","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"QUALIFIED_NAME","change":"C_NodeTypes.FROM_VTI","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"QUALIFIED_NAME","change":"Boolean.FALSE","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"QUALIFIED_NAME","change":"C_NodeTypes.NEW_INVOCATION_NODE","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"RETURN_STATEMENT","change":"return (ResultSetNode)vtiNode;\n","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"ResultSetNode","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"TableName","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"QueryTreeNode","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"StandardException","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"ContextManager","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"Properties","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"ResultColumnList","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SIMPLE_TYPE","change":"TableDescriptor","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ContextManager cm","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Properties tableProperties","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SINGLE_VARIABLE_DECLARATION","change":"ResultColumnList resultColumns","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SINGLE_VARIABLE_DECLARATION","change":"String correlationName","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"SINGLE_VARIABLE_DECLARATION","change":"TableDescriptor td","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"exposedName","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"vtiNode","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"newNode","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"TableName [exposedName\u003dnewNode.makeTableName(td.getSchemaName(),td.getDescriptorName())]","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"QueryTreeNode [vtiNode]","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"9eb1bd1219a56341e58528b3bf3ec1bb0666a360","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"QueryTreeNode [newNode\u003dgetNode(C_NodeTypes.NEW_INVOCATION_NODE,null,td,emptyVector,Boolean.FALSE,cm)]","source":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","target":"org.apache.derby.impl.sql.compile.FromBaseTable.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.NodeFactoryImpl.mapTableAsVTI(TableDescriptor,String,ResultColumnList,Properties,ContextManager)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"CLASS_S","local":"java.engine.org.apache.derby.impl.sql.catalog.DD_Version"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"CAST_EXPRESSION","change":"(SPSDescriptor)it.next()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"CONTINUE_STATEMENT","change":"continue;\n","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"EXPRESSION_STATEMENT","change":"bootingDictionary.dropDependentsStoredDependencies(spsd.getUUID(),tc)","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"EXPRESSION_STATEMENT","change":"bootingDictionary.dropSPSDescriptor(spsd,tc)","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"FOR_STATEMENT","change":"for (java.util.Iterator it\u003dbootingDictionary.getAllSPSDescriptors().iterator(); it.hasNext(); ) {\n  SPSDescriptor spsd\u003d(SPSDescriptor)it.next();\n  SchemaDescriptor sd\u003dspsd.getSchemaDescriptor();\n  boolean isSYSIBM\u003dsd.getSchemaName().equals(SchemaDescriptor.IBM_SYSTEM_SCHEMA_NAME);\n  if (!sd.isSystemSchema() \u0026\u0026 !isSYSIBM) {\n    continue;\n  }\n  if (removeSYSIBMonly \u0026\u0026 !isSYSIBM) {\n    continue;\n  }\n  bootingDictionary.dropSPSDescriptor(spsd,tc);\n  bootingDictionary.dropDependentsStoredDependencies(spsd.getUUID(),tc);\n}\n","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"IF_STATEMENT","change":"removeSYSIBMonly \u0026\u0026 !isSYSIBM","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"IF_STATEMENT","change":"!sd.isSystemSchema() \u0026\u0026 !isSYSIBM","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"INFIX_EXPRESSION","change":"removeSYSIBMonly \u0026\u0026 !isSYSIBM","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"INFIX_EXPRESSION","change":"!sd.isSystemSchema() \u0026\u0026 !isSYSIBM","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"JAVADOC","change":"/** \n * Drop all jdbc metadata spses.  This it to ensure that we don\u0027t have any problems with old metadata queries that have outdated query text (the plans are always cleared out on upgrade time).\n * @param tc the xact\n * @param removeSYSIBMonly if \u003ccode\u003etrue\u003c/code\u003e, remove storedprepared statements in the SYSIBM schema only; otherwise, remove stored prepared statements in all system schemas (including SYSIBM)\n * @exception StandardException  Standard Derby error policy.\n */\n","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"spsd.getUUID()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"bootingDictionary.dropDependentsStoredDependencies(spsd.getUUID(),tc)","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"bootingDictionary.dropSPSDescriptor(spsd,tc)","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"sd.isSystemSchema()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"sd.getSchemaName()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"sd.getSchemaName().equals(SchemaDescriptor.IBM_SYSTEM_SCHEMA_NAME)","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"spsd.getSchemaDescriptor()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"it.next()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"it.hasNext()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"bootingDictionary.getAllSPSDescriptors()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"bootingDictionary.getAllSPSDescriptors().iterator()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"MODIFIER","change":"protected","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"PREFIX_EXPRESSION","change":"!isSYSIBM","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"PREFIX_EXPRESSION","change":"!sd.isSystemSchema()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"QUALIFIED_NAME","change":"SchemaDescriptor.IBM_SYSTEM_SCHEMA_NAME","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"QUALIFIED_NAME","change":"java.util","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"QUALIFIED_NAME","change":"java.util.Iterator","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"SIMPLE_TYPE","change":"SchemaDescriptor","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"SIMPLE_TYPE","change":"SPSDescriptor","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"SIMPLE_TYPE","change":"java.util.Iterator","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"SIMPLE_TYPE","change":"StandardException","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"SIMPLE_TYPE","change":"TransactionController","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"SINGLE_VARIABLE_DECLARATION","change":"boolean removeSYSIBMonly","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"SINGLE_VARIABLE_DECLARATION","change":"TransactionController tc","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"VARIABLE_DECLARATION_EXPRESSION","change":"java.util.Iterator [it\u003dbootingDictionary.getAllSPSDescriptors().iterator()]","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"isSYSIBM","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"sd","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"spsd","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"it","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"boolean [isSYSIBM\u003dsd.getSchemaName().equals(SchemaDescriptor.IBM_SYSTEM_SCHEMA_NAME)]","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"SchemaDescriptor [sd\u003dspsd.getSchemaDescriptor()]","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"SPSDescriptor [spsd\u003d(SPSDescriptor)it.next()]","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"EXPRESSION_STATEMENT","change":"dropJDBCMetadataSPSes(tc,false)","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SUR_S","local":"org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int,String)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"dropJDBCMetadataSPSes(tc,false)","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":false,"scope":"SUR_S","local":"org.apache.derby.impl.sql.catalog.DD_Version.doFullUpgrade(TransactionController,int,String)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"CLASS_T","local":"java.engine.org.apache.derby.impl.sql.catalog.DataDictionaryImpl"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"EXPRESSION_STATEMENT","change":"dropJDBCMetadataSPSes(tc)","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.updateMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"dropJDBCMetadataSPSes(tc)","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.updateMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"CAST_EXPRESSION","change":"(SPSDescriptor)it.next()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"CONTINUE_STATEMENT","change":"continue;\n","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"EXPRESSION_STATEMENT","change":"dropDependentsStoredDependencies(spsd.getUUID(),tc)","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"EXPRESSION_STATEMENT","change":"dropSPSDescriptor(spsd,tc)","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"FOR_STATEMENT","change":"for (java.util.Iterator it\u003dgetAllSPSDescriptors().iterator(); it.hasNext(); ) {\n  SPSDescriptor spsd\u003d(SPSDescriptor)it.next();\n  SchemaDescriptor sd\u003dspsd.getSchemaDescriptor();\n  if (!sd.isSystemSchema()) {\n    continue;\n  }\n  dropSPSDescriptor(spsd,tc);\n  dropDependentsStoredDependencies(spsd.getUUID(),tc);\n}\n","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"IF_STATEMENT","change":"!sd.isSystemSchema()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"JAVADOC","change":"/** \n * Remove metadata stored prepared statements.\n * @param tc the xact\n */\n","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"spsd.getUUID()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"dropDependentsStoredDependencies(spsd.getUUID(),tc)","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"dropSPSDescriptor(spsd,tc)","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"sd.isSystemSchema()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"spsd.getSchemaDescriptor()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"it.next()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"it.hasNext()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"getAllSPSDescriptors()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"METHOD_INVOCATION","change":"getAllSPSDescriptors().iterator()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"MODIFIER","change":"private","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"PREFIX_EXPRESSION","change":"!sd.isSystemSchema()","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"QUALIFIED_NAME","change":"java.util","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"QUALIFIED_NAME","change":"java.util.Iterator","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"SIMPLE_TYPE","change":"SchemaDescriptor","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"SIMPLE_TYPE","change":"SPSDescriptor","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"SIMPLE_TYPE","change":"java.util.Iterator","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"SIMPLE_TYPE","change":"StandardException","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"SIMPLE_TYPE","change":"TransactionController","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"SINGLE_VARIABLE_DECLARATION","change":"TransactionController tc","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"VARIABLE_DECLARATION_EXPRESSION","change":"java.util.Iterator [it\u003dgetAllSPSDescriptors().iterator()]","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"sd","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"spsd","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"it","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"SchemaDescriptor [sd\u003dspsd.getSchemaDescriptor()]","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"3f523e625ff1d8eb55013c183adbf6851ee12710","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"SPSDescriptor [spsd\u003d(SPSDescriptor)it.next()]","source":"org.apache.derby.impl.sql.catalog.DD_Version.dropJDBCMetadataSPSes(TransactionController,boolean)","target":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.catalog.DataDictionaryImpl.dropJDBCMetadataSPSes(TransactionController)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.store.replication.master.MasterController.getHostName()","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"java.engine.org.apache.derby.impl.store.replication.master.MasterController"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"slaveAddr.getHostAddress().getHostName()","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.master.MasterController.getHostName()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"RETURN_STATEMENT","change":"return slaveAddr.getHostAddress().getHostName();\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.master.MasterController.getHostName()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"CATCH_CLAUSE","change":"catch (UnknownHostException uhe) {\n  throw StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,uhe,dbname,getHostName(),String.valueOf(getPortNumber()));\n}\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.master.MasterController.startMaster(RawStoreFactory,DataFactory,LogFactory,String,int,String)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"getHostName()","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.master.MasterController.startMaster(RawStoreFactory,DataFactory,LogFactory,String,int,String)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,uhe,dbname,getHostName(),String.valueOf(getPortNumber()))","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.master.MasterController.startMaster(RawStoreFactory,DataFactory,LogFactory,String,int,String)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"THROW_STATEMENT","change":"throw StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,uhe,dbname,getHostName(),String.valueOf(getPortNumber()));\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.master.MasterController.startMaster(RawStoreFactory,DataFactory,LogFactory,String,int,String)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"TRY_STATEMENT","change":"try {\n  slaveAddr\u003dnew SlaveAddress(slavehost,(new Integer(slaveport)).intValue());\n}\n catch (UnknownHostException uhe) {\n  throw StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,uhe,dbname,getHostName(),String.valueOf(getPortNumber()));\n}\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.master.MasterController.startMaster(RawStoreFactory,DataFactory,LogFactory,String,int,String)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"CATCH_CLAUSE","change":"catch (IOException ioe) {\n  throw StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,ioe,dbname,getHostName(),String.valueOf(getPortNumber()));\n}\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.master.MasterController.setupConnection()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"CATCH_CLAUSE","change":"catch (Exception e) {\n  throw StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,e,dbname,getHostName(),String.valueOf(getPortNumber()));\n}\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.master.MasterController.setupConnection()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"getHostName()","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.master.MasterController.setupConnection()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,ioe,dbname,getHostName(),String.valueOf(getPortNumber()))","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.master.MasterController.setupConnection()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,e,dbname,getHostName(),String.valueOf(getPortNumber()))","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.master.MasterController.setupConnection()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"THROW_STATEMENT","change":"throw StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,e,dbname,getHostName(),String.valueOf(getPortNumber()));\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.master.MasterController.setupConnection()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"THROW_STATEMENT","change":"throw StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,ioe,dbname,getHostName(),String.valueOf(getPortNumber()));\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.master.MasterController.setupConnection()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"TRY_STATEMENT","change":"try {\n  if (transmitter !\u003d null) {\n    transmitter.tearDown();\n  }\n  transmitter\u003dnew ReplicationMessageTransmit(slaveAddr);\n  if (logShipper !\u003d null \u0026\u0026 logShipper.getHighestShippedInstant() !\u003d -1) {\n    transmitter.initConnection(SLAVE_CONNECTION_ATTEMPT_TIMEOUT,logShipper.getHighestShippedInstant());\n  }\n else {\n    transmitter.initConnection(SLAVE_CONNECTION_ATTEMPT_TIMEOUT,logFactory.getFirstUnflushedInstantAsLong());\n  }\n}\n catch (SocketTimeoutException ste) {\n  throw StandardException.newException(SQLState.REPLICATION_MASTER_TIMED_OUT,dbname);\n}\ncatch (IOException ioe) {\n  throw StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,ioe,dbname,getHostName(),String.valueOf(getPortNumber()));\n}\ncatch (StandardException se) {\n  throw se;\n}\ncatch (Exception e) {\n  throw StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,e,dbname,getHostName(),String.valueOf(getPortNumber()));\n}\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.master.MasterController.setupConnection()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":false,"scope":"CLASS_S","local":"java.engine.org.apache.derby.impl.store.replication.net.ReplicationMessageReceive"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"JAVADOC","change":"/** \n * Used to get the host name the slave listens for master connections on\n * @return the host name \n */\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"slaveAddress.getHostAddress()","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"slaveAddress.getHostAddress().getHostName()","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"MODIFIER","change":"public","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"RETURN_STATEMENT","change":"return slaveAddress.getHostAddress().getHostName();\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"EXPRESSION_STATEMENT","change":"Monitor.logTextMessage(MessageId.REPLICATION_SLAVE_NETWORK_LISTEN,dbname,getHostName(),String.valueOf(getPort()))","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":false,"scope":"SUR_S","local":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.ReplicationMessageReceive(String,int,String)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"getHostName()","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":false,"scope":"SUR_S","local":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.ReplicationMessageReceive(String,int,String)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"Monitor.logTextMessage(MessageId.REPLICATION_SLAVE_NETWORK_LISTEN,dbname,getHostName(),String.valueOf(getPort()))","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":false,"scope":"SUR_S","local":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.ReplicationMessageReceive(String,int,String)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"TRY_STATEMENT","change":"try {\n  slaveAddress\u003dnew SlaveAddress(hostName,portNumber);\n  Monitor.logTextMessage(MessageId.REPLICATION_SLAVE_NETWORK_LISTEN,dbname,getHostName(),String.valueOf(getPort()));\n}\n catch (UnknownHostException uhe) {\n  String port;\n  if (portNumber \u003e 0) {\n    port\u003dString.valueOf(portNumber);\n  }\n else {\n    port\u003dString.valueOf(SlaveAddress.DEFAULT_PORT_NO);\n  }\n  throw StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,uhe,dbname,hostName,port);\n}\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":false,"scope":"SUR_S","local":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.ReplicationMessageReceive(String,int,String)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"EXPRESSION_STATEMENT","change":"Monitor.logTextMessage(MessageId.REPLICATION_SLAVE_NETWORK_LISTEN,dbname,slaveAddress.getHostAddress().getHostName(),String.valueOf(slaveAddress.getPortNumber()))","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"SUR_T","local":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.ReplicationMessageReceive(SlaveAddress,String)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"slaveAddress.getHostAddress().getHostName()","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"SUR_T","local":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.ReplicationMessageReceive(SlaveAddress,String)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"Monitor.logTextMessage(MessageId.REPLICATION_SLAVE_NETWORK_LISTEN,dbname,slaveAddress.getHostAddress().getHostName(),String.valueOf(slaveAddress.getPortNumber()))","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"SUR_T","local":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.ReplicationMessageReceive(SlaveAddress,String)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"CLASS_T","local":"java.engine.org.apache.derby.impl.store.replication.slave.SlaveController"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"JAVADOC","change":"/** \n * Used to return the host name of the slave.\n * @return a String containing the host name of the slave.\n */\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"slaveAddr.getHostAddress()","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"slaveAddr.getHostAddress().getHostName()","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"MODIFIER","change":"private","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"RETURN_STATEMENT","change":"return slaveAddr.getHostAddress().getHostName();\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"TARGET","local":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"CATCH_CLAUSE","change":"catch (Exception e) {\n  Throwable cause\u003de.getCause();\n  if (cause instanceof SocketTimeoutException) {\n    return false;\n  }\n else {\n    throw StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,e,dbname,getHostName(),String.valueOf(getPortNumber()));\n  }\n}\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.slave.SlaveController.setupConnection()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"getHostName()","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.slave.SlaveController.setupConnection()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,e,dbname,getHostName(),String.valueOf(getPortNumber()))","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.slave.SlaveController.setupConnection()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"THROW_STATEMENT","change":"throw StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,e,dbname,getHostName(),String.valueOf(getPortNumber()));\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.slave.SlaveController.setupConnection()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"TRY_STATEMENT","change":"try {\n  if (highestLogInstant !\u003d -1) {\n    receiver.initConnection(DEFAULT_SOCKET_TIMEOUT,highestLogInstant,dbname);\n  }\n else {\n    receiver.initConnection(DEFAULT_SOCKET_TIMEOUT,logToFile.getFirstUnflushedInstantAsLong(),dbname);\n  }\n  return true;\n}\n catch (StandardException se) {\n  throw se;\n}\ncatch (Exception e) {\n  Throwable cause\u003de.getCause();\n  if (cause instanceof SocketTimeoutException) {\n    return false;\n  }\n else {\n    throw StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,e,dbname,getHostName(),String.valueOf(getPortNumber()));\n  }\n}\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.slave.SlaveController.setupConnection()"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"CATCH_CLAUSE","change":"catch (UnknownHostException uhe) {\n  throw StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,uhe,dbname,getHostName(),String.valueOf(getPortNumber()));\n}\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.slave.SlaveController.boot(boolean,Properties)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"getHostName()","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.slave.SlaveController.boot(boolean,Properties)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"METHOD_INVOCATION","change":"StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,uhe,dbname,getHostName(),String.valueOf(getPortNumber()))","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.slave.SlaveController.boot(boolean,Properties)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"THROW_STATEMENT","change":"throw StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,uhe,dbname,getHostName(),String.valueOf(getPortNumber()));\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.slave.SlaveController.boot(boolean,Properties)"}
{"project":"apache_derby","commit":"f2ec1d8c88b705a154801a104ad4e0f65e1b69d1","changeType":"TRY_STATEMENT","change":"try {\n  int slavePort\u003d-1;\n  if (port !\u003d null) {\n    slavePort\u003d(new Integer(port)).intValue();\n  }\n  slaveAddr\u003dnew SlaveAddress(properties.getProperty(Attribute.REPLICATION_SLAVE_HOST),slavePort);\n}\n catch (UnknownHostException uhe) {\n  throw StandardException.newException(SQLState.REPLICATION_CONNECTION_EXCEPTION,uhe,dbname,getHostName(),String.valueOf(getPortNumber()));\n}\n","source":"org.apache.derby.impl.store.replication.net.ReplicationMessageReceive.getHostName()","target":"org.apache.derby.impl.store.replication.slave.SlaveController.getHostName()","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.store.replication.slave.SlaveController.boot(boolean,Properties)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"CLASS_T","local":"java.engine.org.apache.derby.impl.sql.compile.OptimizerImpl"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"BOOLEAN_LITERAL","change":"false","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"CAST_EXPRESSION","change":"(FromVTI)rsn","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"CAST_EXPRESSION","change":"(ProjectRestrictNode)optimizable","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"IF_STATEMENT","change":"!(rsn instanceof FromVTI)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"IF_STATEMENT","change":"!(optimizable instanceof ProjectRestrictNode)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"INSTANCEOF_EXPRESSION","change":"((FromVTI)rsn).getMethodCall() instanceof StaticMethodCallNode","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"INSTANCEOF_EXPRESSION","change":"rsn instanceof FromVTI","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"INSTANCEOF_EXPRESSION","change":"optimizable instanceof ProjectRestrictNode","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"JAVADOC","change":"/** \n * Return true if the optimizable is a table function \n */\n","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"METHOD_INVOCATION","change":"((FromVTI)rsn).getMethodCall()","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"METHOD_INVOCATION","change":"((ProjectRestrictNode)optimizable).getChildResult()","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"MODIFIER","change":"static","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"PARENTHESIZED_EXPRESSION","change":"((FromVTI)rsn)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"PARENTHESIZED_EXPRESSION","change":"(((FromVTI)rsn).getMethodCall() instanceof StaticMethodCallNode)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"PARENTHESIZED_EXPRESSION","change":"(rsn instanceof FromVTI)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"PARENTHESIZED_EXPRESSION","change":"((ProjectRestrictNode)optimizable)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"PARENTHESIZED_EXPRESSION","change":"(optimizable instanceof ProjectRestrictNode)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"PREFIX_EXPRESSION","change":"!(rsn instanceof FromVTI)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"PREFIX_EXPRESSION","change":"!(optimizable instanceof ProjectRestrictNode)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"RETURN_STATEMENT","change":"return (((FromVTI)rsn).getMethodCall() instanceof StaticMethodCallNode);\n","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"RETURN_STATEMENT","change":"return false;\n","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"SIMPLE_TYPE","change":"StaticMethodCallNode","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"SIMPLE_TYPE","change":"FromVTI","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"SIMPLE_TYPE","change":"ProjectRestrictNode","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"SIMPLE_TYPE","change":"ResultSetNode","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"SIMPLE_TYPE","change":"Optimizable","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Optimizable optimizable","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"rsn","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"ResultSetNode [rsn\u003d((ProjectRestrictNode)optimizable).getChildResult()]","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"TARGET","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"IF_STATEMENT","change":"isTableFunction(optimizable)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"SUR_T","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.getTupleDescriptor(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"METHOD_INVOCATION","change":"isTableFunction(optimizable)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"SUR_T","local":"org.apache.derby.impl.sql.compile.OptimizerImpl.getTupleDescriptor(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"METHOD_DECLARATION","change":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"CLASS_S","local":"java.engine.org.apache.derby.impl.sql.compile.XMLOptTrace"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"BOOLEAN_LITERAL","change":"false","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"CAST_EXPRESSION","change":"(FromVTI)rsn","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"CAST_EXPRESSION","change":"(ProjectRestrictNode)optimizable","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"IF_STATEMENT","change":"!(rsn instanceof FromVTI)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"IF_STATEMENT","change":"!(optimizable instanceof ProjectRestrictNode)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"INSTANCEOF_EXPRESSION","change":"((FromVTI)rsn).getMethodCall() instanceof StaticMethodCallNode","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"INSTANCEOF_EXPRESSION","change":"rsn instanceof FromVTI","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"INSTANCEOF_EXPRESSION","change":"optimizable instanceof ProjectRestrictNode","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"JAVADOC","change":"/** \n * Return true if the optimizable is a table function \n */\n","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"METHOD_INVOCATION","change":"((FromVTI)rsn).getMethodCall()","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"METHOD_INVOCATION","change":"((ProjectRestrictNode)optimizable).getChildResult()","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"MODIFIER","change":"private","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"PARENTHESIZED_EXPRESSION","change":"((FromVTI)rsn)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"PARENTHESIZED_EXPRESSION","change":"(((FromVTI)rsn).getMethodCall() instanceof StaticMethodCallNode)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"PARENTHESIZED_EXPRESSION","change":"(rsn instanceof FromVTI)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"PARENTHESIZED_EXPRESSION","change":"((ProjectRestrictNode)optimizable)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"PARENTHESIZED_EXPRESSION","change":"(optimizable instanceof ProjectRestrictNode)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"PREFIX_EXPRESSION","change":"!(rsn instanceof FromVTI)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"PREFIX_EXPRESSION","change":"!(optimizable instanceof ProjectRestrictNode)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"PRIMITIVE_TYPE","change":"boolean","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"RETURN_STATEMENT","change":"return (((FromVTI)rsn).getMethodCall() instanceof StaticMethodCallNode);\n","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"RETURN_STATEMENT","change":"return false;\n","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"SIMPLE_TYPE","change":"StaticMethodCallNode","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"SIMPLE_TYPE","change":"FromVTI","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"SIMPLE_TYPE","change":"ProjectRestrictNode","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"SIMPLE_TYPE","change":"ResultSetNode","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"SIMPLE_TYPE","change":"Optimizable","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"SINGLE_VARIABLE_DECLARATION","change":"Optimizable optimizable","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"VARIABLE_DECLARATION_FRAGMENT","change":"rsn","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"ResultSetNode [rsn\u003d((ProjectRestrictNode)optimizable).getChildResult()]","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"SOURCE","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"IF_STATEMENT","change":"OptimizerImpl.isTableFunction(optimizable)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.getOptimizableName(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"METHOD_INVOCATION","change":"OptimizerImpl.isTableFunction(optimizable)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.getOptimizableName(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"TRY_STATEMENT","change":"try {\n  if (isBaseTable(optimizable)) {\n    ProjectRestrictNode prn\u003d(ProjectRestrictNode)optimizable;\n    TableDescriptor td\u003d((FromBaseTable)prn.getChildResult()).getTableDescriptor();\n    return makeTableName(td.getSchemaName(),td.getName(),cm);\n  }\n else   if (OptimizerImpl.isTableFunction(optimizable)) {\n    ProjectRestrictNode prn\u003d(ProjectRestrictNode)optimizable;\n    AliasDescriptor ad\u003d((StaticMethodCallNode)((FromVTI)prn.getChildResult()).getMethodCall()).ad;\n    return makeTableName(ad.getSchemaName(),ad.getName(),cm);\n  }\n else   if (isFromTable(optimizable)) {\n    return ((FromTable)((ProjectRestrictNode)optimizable).getChildResult()).getTableName();\n  }\n}\n catch (StandardException e) {\n}\n","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.getOptimizableName(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"IF_STATEMENT","change":"isTableFunction(optimizable)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.getOptimizableName(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"METHOD_INVOCATION","change":"isTableFunction(optimizable)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.getOptimizableName(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"TRY_STATEMENT","change":"try {\n  if (isBaseTable(optimizable)) {\n    ProjectRestrictNode prn\u003d(ProjectRestrictNode)optimizable;\n    TableDescriptor td\u003d((FromBaseTable)prn.getChildResult()).getTableDescriptor();\n    return makeTableName(td.getSchemaName(),td.getName(),cm);\n  }\n else   if (isTableFunction(optimizable)) {\n    ProjectRestrictNode prn\u003d(ProjectRestrictNode)optimizable;\n    AliasDescriptor ad\u003d((StaticMethodCallNode)((FromVTI)prn.getChildResult()).getMethodCall()).ad;\n    return makeTableName(ad.getSchemaName(),ad.getName(),cm);\n  }\n else   if (isFromTable(optimizable)) {\n    return ((FromTable)((ProjectRestrictNode)optimizable).getChildResult()).getTableName();\n  }\n}\n catch (StandardException e) {\n}\n","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.getOptimizableName(Optimizable)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"METHOD_INVOCATION","change":"OptimizerImpl.isTableFunction(optimizable)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.getSQLName(Optimizable,ConglomerateDescriptor,boolean)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"boolean [isTableFunction\u003dOptimizerImpl.isTableFunction(optimizable)]","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":true,"scope":"EXT_T","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.getSQLName(Optimizable,ConglomerateDescriptor,boolean)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"METHOD_INVOCATION","change":"isTableFunction(optimizable)","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.getSQLName(Optimizable,ConglomerateDescriptor,boolean)"}
{"project":"apache_derby","commit":"a56ecfa31c1400e7113a6b3e28477a1c06b56f86","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"boolean [isTableFunction\u003disTableFunction(optimizable)]","source":"org.apache.derby.impl.sql.compile.XMLOptTrace.isTableFunction(Optimizable)","target":"org.apache.derby.impl.sql.compile.OptimizerImpl.isTableFunction(Optimizable)","added":false,"scope":"EXT_S","local":"org.apache.derby.impl.sql.compile.XMLOptTrace.getSQLName(Optimizable,ConglomerateDescriptor,boolean)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.types.NumberDataType.setValue(byte)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":true,"scope":"CLASS_T","local":"java.engine.org.apache.derby.iapi.types.NumberDataType"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":true,"scope":"CLASS_T","local":"java.engine.org.apache.derby.iapi.types.NumberDataType"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"CAST_EXPRESSION","change":"(int)theValue","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.types.NumberDataType.setValue(short)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"EXPRESSION_STATEMENT","change":"setValue((int)theValue)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.types.NumberDataType.setValue(short)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"JAVADOC","change":"/** \n * Common code to handle converting a short to this value by using the int to this value conversion. Simply calls setValue(int).\n */\n","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.types.NumberDataType.setValue(short)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"METHOD_INVOCATION","change":"setValue((int)theValue)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.types.NumberDataType.setValue(short)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"MODIFIER","change":"public","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.types.NumberDataType.setValue(short)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"PRIMITIVE_TYPE","change":"int","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.types.NumberDataType.setValue(short)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"PRIMITIVE_TYPE","change":"short","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.types.NumberDataType.setValue(short)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.types.NumberDataType.setValue(short)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"SIMPLE_TYPE","change":"StandardException","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.types.NumberDataType.setValue(short)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"SINGLE_VARIABLE_DECLARATION","change":"short theValue","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":true,"scope":"TARGET","local":"org.apache.derby.iapi.types.NumberDataType.setValue(short)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"EXPRESSION_STATEMENT","change":"setValue((int)theValue)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":true,"scope":"SUR_T","local":"org.apache.derby.iapi.types.NumberDataType.setValue(byte)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"JAVADOC","change":"/** \n * Common code to handle converting a byte to this value by using the int to this value conversion. Simply calls setValue(int).\n */\n","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":true,"scope":"SUR_T","local":"org.apache.derby.iapi.types.NumberDataType.setValue(byte)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"METHOD_INVOCATION","change":"setValue((int)theValue)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":true,"scope":"SUR_T","local":"org.apache.derby.iapi.types.NumberDataType.setValue(byte)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"CLASS_S","local":"java.engine.org.apache.derby.iapi.types.SQLDecimal"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.types.SQLDecimal.setValue(short)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"EXT_S","local":"java.engine.org.apache.derby.iapi.types.SQLDecimal"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"EXPRESSION_STATEMENT","change":"setValue((long)theValue)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"EXT_S","local":"org.apache.derby.iapi.types.SQLDecimal.setValue(short)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"METHOD_INVOCATION","change":"setValue((long)theValue)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"EXT_S","local":"org.apache.derby.iapi.types.SQLDecimal.setValue(short)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"CAST_EXPRESSION","change":"(long)theValue","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"EXPRESSION_STATEMENT","change":"setValue((long)theValue)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"JAVADOC","change":"/** \n * @see NumberDataValue#setValue\n */\n","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"METHOD_INVOCATION","change":"setValue((long)theValue)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"MODIFIER","change":"public","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"PRIMITIVE_TYPE","change":"long","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"PRIMITIVE_TYPE","change":"byte","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"SINGLE_VARIABLE_DECLARATION","change":"byte theValue","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"SOURCE","local":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.types.SQLDouble.setValue(byte)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"EXT_S","local":"java.engine.org.apache.derby.iapi.types.SQLDouble"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.types.SQLDouble.setValue(short)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"EXT_S","local":"java.engine.org.apache.derby.iapi.types.SQLDouble"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.types.SQLInteger.setValue(byte)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"EXT_S","local":"java.engine.org.apache.derby.iapi.types.SQLInteger"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.types.SQLInteger.setValue(short)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"EXT_S","local":"java.engine.org.apache.derby.iapi.types.SQLInteger"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.types.SQLLongint.setValue(byte)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"EXT_S","local":"java.engine.org.apache.derby.iapi.types.SQLLongint"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.types.SQLLongint.setValue(short)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"EXT_S","local":"java.engine.org.apache.derby.iapi.types.SQLLongint"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.types.SQLReal.setValue(byte)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"EXT_S","local":"java.engine.org.apache.derby.iapi.types.SQLReal"}
{"project":"apache_derby","commit":"9d34086a962d7cadca6ba344256f4ac91540c04e","changeType":"METHOD_DECLARATION","change":"org.apache.derby.iapi.types.SQLReal.setValue(short)","source":"org.apache.derby.iapi.types.SQLDecimal.setValue(byte)","target":"org.apache.derby.iapi.types.NumberDataType.setValue(short)","added":false,"scope":"EXT_S","local":"java.engine.org.apache.derby.iapi.types.SQLReal"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"EXPRESSION_STATEMENT","change":"setSystemOut(new PrintStream(serverOutputOut))","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.tests.derbynet.DerbyNetAutoStartTest.testStartNetworkServerTrueWithInvalidPort()"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"EXPRESSION_STATEMENT","change":"setSystemOut(realSystemOut)","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.tests.derbynet.DerbyNetAutoStartTest.testStartNetworkServerTrueWithInvalidPort()"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"METHOD_INVOCATION","change":"setSystemOut(new PrintStream(serverOutputOut))","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.tests.derbynet.DerbyNetAutoStartTest.testStartNetworkServerTrueWithInvalidPort()"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"METHOD_INVOCATION","change":"setSystemOut(realSystemOut)","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.tests.derbynet.DerbyNetAutoStartTest.testStartNetworkServerTrueWithInvalidPort()"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"TRY_STATEMENT","change":"try {\n  try {\n    DatabaseMetaData dbmd\u003dgetConnection().getMetaData();\n    ResultSet rs\u003ddbmd.getSchemas();\n    assertNotNull(rs);\n    rs.close();\n  }\n catch (  SQLException e) {\n    fail();\n  }\n}\n  finally {\n  setSystemOut(realSystemOut);\n  setSystemErr(realSystemErr);\n}\n","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.tests.derbynet.DerbyNetAutoStartTest.testStartNetworkServerTrueWithInvalidPort()"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"EXPRESSION_STATEMENT","change":"setSystemOut(new PrintStream(new TestNullOutputStream()))","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.tests.tools.IjSecurityManagerTest.testRunIJ()"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"EXPRESSION_STATEMENT","change":"setSystemOut(out)","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.tests.tools.IjSecurityManagerTest.testRunIJ()"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"METHOD_INVOCATION","change":"setSystemOut(new PrintStream(new TestNullOutputStream()))","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.tests.tools.IjSecurityManagerTest.testRunIJ()"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"METHOD_INVOCATION","change":"setSystemOut(out)","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.tests.tools.IjSecurityManagerTest.testRunIJ()"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"TRY_STATEMENT","change":"try {\n  ij.main(new String[]{\"extinout/IjSecurityManagerTest.sql\"});\n}\n catch (Exception e) {\n  fail(\"Failed to run ij under security manager.\",e);\n}\n finally {\n  setSystemOut(out);\n}\n","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.tests.tools.IjSecurityManagerTest.testRunIJ()"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"METHOD_DECLARATION","change":"org.apache.derbyTesting.functionTests.tests.tools.SysinfoCPCheckTest.setSystemOut(PrintStream)","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":false,"scope":"EXT_S","local":"java.testing.org.apache.derbyTesting.functionTests.tests.tools.SysinfoCPCheckTest"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"METHOD_DECLARATION","change":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":false,"scope":"CLASS_S","local":"java.testing.org.apache.derbyTesting.functionTests.util.HarnessJavaTest"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"ANONYMOUS_CLASS_DECLARATION","change":"{\n  public Object run(){\n    System.setOut(out);\n    return null;\n  }\n}\n","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"CLASS_INSTANCE_CREATION","change":"new java.security.PrivilegedAction(){\n  public Object run(){\n    System.setOut(out);\n    return null;\n  }\n}\n","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"EXPRESSION_STATEMENT","change":"AccessController.doPrivileged(new java.security.PrivilegedAction(){\n  public Object run(){\n    System.setOut(out);\n    return null;\n  }\n}\n)","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"JAVADOC","change":"/** \n * Need to capture System.out so that we can compare it.\n * @param out\n */\n","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"METHOD_INVOCATION","change":"AccessController.doPrivileged(new java.security.PrivilegedAction(){\n  public Object run(){\n    System.setOut(out);\n    return null;\n  }\n}\n)","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"MODIFIER","change":"final","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"MODIFIER","change":"private","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"QUALIFIED_NAME","change":"java.security","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"QUALIFIED_NAME","change":"java.security.PrivilegedAction","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"SIMPLE_TYPE","change":"java.security.PrivilegedAction","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"SIMPLE_TYPE","change":"PrintStream","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"SINGLE_VARIABLE_DECLARATION","change":"final PrintStream out","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":false,"scope":"SOURCE","local":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"METHOD_DECLARATION","change":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"CLASS_T","local":"java.testing.org.apache.derbyTesting.junit.BaseTestCase"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"ANONYMOUS_CLASS_DECLARATION","change":"{\n  public Void run(){\n    System.setOut(out);\n    return null;\n  }\n}\n","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"CLASS_INSTANCE_CREATION","change":"new PrivilegedAction\u003cVoid\u003e(){\n  public Void run(){\n    System.setOut(out);\n    return null;\n  }\n}\n","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"EXPRESSION_STATEMENT","change":"AccessController.doPrivileged(new PrivilegedAction\u003cVoid\u003e(){\n  public Void run(){\n    System.setOut(out);\n    return null;\n  }\n}\n)","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"JAVADOC","change":"/** \n * Change the value of  {@code System.out}.\n * @param out the new stream\n */\n","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"METHOD_INVOCATION","change":"AccessController.doPrivileged(new PrivilegedAction\u003cVoid\u003e(){\n  public Void run(){\n    System.setOut(out);\n    return null;\n  }\n}\n)","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"MODIFIER","change":"final","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"MODIFIER","change":"protected","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"PARAMETERIZED_TYPE","change":"PrivilegedAction\u003cVoid\u003e","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"SIMPLE_TYPE","change":"Void","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"SIMPLE_TYPE","change":"PrivilegedAction","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"SIMPLE_TYPE","change":"PrintStream","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"c393694c042abca4c6baa901700fe13f5546a2d2","changeType":"SINGLE_VARIABLE_DECLARATION","change":"final PrintStream out","source":"org.apache.derbyTesting.functionTests.util.HarnessJavaTest.setSystemOut(PrintStream)","target":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)","added":true,"scope":"TARGET","local":"org.apache.derbyTesting.junit.BaseTestCase.setSystemOut(PrintStream)"}
{"project":"apache_derby","commit":"35bdb15ae9035fece4cc96fde22cd6007b2e70d0","changeType":"EXPRESSION_STATEMENT","change":"JDBC.assertDatabaseMetaDataColumns(rs,null,new String[]{\"TABLE_SCHEM\",\"TABLE_CATALOG\"})","source":"org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","target":"org.apache.derbyTesting.junit.JDBC.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.tests.jdbc4.TestDbMetaData.assertGetSchemasRs(ResultSet)"}
{"project":"apache_derby","commit":"35bdb15ae9035fece4cc96fde22cd6007b2e70d0","changeType":"METHOD_INVOCATION","change":"JDBC.assertDatabaseMetaDataColumns(rs,null,new String[]{\"TABLE_SCHEM\",\"TABLE_CATALOG\"})","source":"org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","target":"org.apache.derbyTesting.junit.JDBC.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.functionTests.tests.jdbc4.TestDbMetaData.assertGetSchemasRs(ResultSet)"}
{"project":"apache_derby","commit":"35bdb15ae9035fece4cc96fde22cd6007b2e70d0","changeType":"METHOD_DECLARATION","change":"org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertDatabaseMetaDataColumns(ResultSet,boolean[],int[],String...)","source":"org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","target":"org.apache.derbyTesting.junit.JDBC.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","added":false,"scope":"CLASS_T","local":"java.testing.org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest"}
{"project":"apache_derby","commit":"35bdb15ae9035fece4cc96fde22cd6007b2e70d0","changeType":"EXPRESSION_STATEMENT","change":"JDBC.assertDatabaseMetaDataColumns(rs,nullability,columnTypes,columnNames)","source":"org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","target":"org.apache.derbyTesting.junit.JDBC.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","added":true,"scope":"SUR_T","local":"org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertMetaDataResultSet(ResultSet,String[],int[],boolean[])"}
{"project":"apache_derby","commit":"35bdb15ae9035fece4cc96fde22cd6007b2e70d0","changeType":"METHOD_INVOCATION","change":"JDBC.assertDatabaseMetaDataColumns(rs,nullability,columnTypes,columnNames)","source":"org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","target":"org.apache.derbyTesting.junit.JDBC.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","added":true,"scope":"SUR_T","local":"org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertMetaDataResultSet(ResultSet,String[],int[],boolean[])"}
{"project":"apache_derby","commit":"35bdb15ae9035fece4cc96fde22cd6007b2e70d0","changeType":"EXPRESSION_STATEMENT","change":"assertDatabaseMetaDataColumns(rs,nullability,columnTypes,columnNames)","source":"org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","target":"org.apache.derbyTesting.junit.JDBC.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","added":false,"scope":"SUR_S","local":"org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertMetaDataResultSet(ResultSet,String[],int[],boolean[])"}
{"project":"apache_derby","commit":"35bdb15ae9035fece4cc96fde22cd6007b2e70d0","changeType":"METHOD_INVOCATION","change":"assertDatabaseMetaDataColumns(rs,nullability,columnTypes,columnNames)","source":"org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","target":"org.apache.derbyTesting.junit.JDBC.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","added":false,"scope":"SUR_S","local":"org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertMetaDataResultSet(ResultSet,String[],int[],boolean[])"}
{"project":"apache_derby","commit":"35bdb15ae9035fece4cc96fde22cd6007b2e70d0","changeType":"METHOD_DECLARATION","change":"org.apache.derbyTesting.junit.JDBC.assertDatabaseMetaDataColumns(ResultSet,boolean[],int[],String...)","source":"org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","target":"org.apache.derbyTesting.junit.JDBC.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","added":true,"scope":"EXT_T","local":"java.testing.org.apache.derbyTesting.junit.JDBC"}
{"project":"apache_derby","commit":"35bdb15ae9035fece4cc96fde22cd6007b2e70d0","changeType":"EXPRESSION_STATEMENT","change":"assertDatabaseMetaDataColumns(rs,null,expectedTypes,expectedColNames)","source":"org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","target":"org.apache.derbyTesting.junit.JDBC.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.junit.JDBC.assertDatabaseMetaDataColumns(ResultSet,int[],String...)"}
{"project":"apache_derby","commit":"35bdb15ae9035fece4cc96fde22cd6007b2e70d0","changeType":"METHOD_INVOCATION","change":"assertDatabaseMetaDataColumns(rs,null,expectedTypes,expectedColNames)","source":"org.apache.derbyTesting.functionTests.tests.jdbcapi.DatabaseMetaDataTest.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","target":"org.apache.derbyTesting.junit.JDBC.assertDatabaseMetaDataColumns(ResultSet,boolean,int,String)","added":true,"scope":"EXT_T","local":"org.apache.derbyTesting.junit.JDBC.assertDatabaseMetaDataColumns(ResultSet,int[],String...)"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"METHOD_INVOCATION","change":"Collections.emptyMap()","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Connection.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"PARAMETERIZED_TYPE","change":"Map\u003cString,Class\u003c?\u003e\u003e","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Connection.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"PARAMETERIZED_TYPE","change":"Class\u003c?\u003e","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Connection.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"SIMPLE_TYPE","change":"Class","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Connection.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Connection.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"SIMPLE_TYPE","change":"Map","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Connection.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"TRY_STATEMENT","change":"try {\n  if (agent_.loggingEnabled()) {\n    agent_.logWriter_.traceEntry(this,\"getTypeMap\");\n  }\n  checkForClosedConnection();\n  Map\u003cString,Class\u003c?\u003e\u003e map\u003dCollections.emptyMap();\n  if (agent_.loggingEnabled()) {\n    agent_.logWriter_.traceExit(this,\"getTypeMap\",map);\n  }\n  return map;\n}\n catch (SqlException se) {\n  throw se.getSQLException();\n}\n","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Connection.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"Map\u003cString,Class\u003c?\u003e\u003e [map\u003dCollections.emptyMap()]","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Connection.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"WILDCARD_TYPE","change":"?","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":true,"scope":"TARGET","local":"org.apache.derby.client.am.Connection.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"QUALIFIED_NAME","change":"java.util","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"TARGET","local":"org.apache.derby.client.am.Connection.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"QUALIFIED_NAME","change":"java.util.Map","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"TARGET","local":"org.apache.derby.client.am.Connection.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"QUALIFIED_NAME","change":"Collections.EMPTY_MAP","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"TARGET","local":"org.apache.derby.client.am.Connection.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"SIMPLE_TYPE","change":"java.util.Map","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"TARGET","local":"org.apache.derby.client.am.Connection.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"TRY_STATEMENT","change":"try {\n  if (agent_.loggingEnabled()) {\n    agent_.logWriter_.traceEntry(this,\"getTypeMap\");\n  }\n  checkForClosedConnection();\n  java.util.Map map\u003dCollections.EMPTY_MAP;\n  if (agent_.loggingEnabled()) {\n    agent_.logWriter_.traceExit(this,\"getTypeMap\",map);\n  }\n  return map;\n}\n catch (SqlException se) {\n  throw se.getSQLException();\n}\n","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"TARGET","local":"org.apache.derby.client.am.Connection.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"VARIABLE_DECLARATION_STATEMENT","change":"java.util.Map [map\u003dCollections.EMPTY_MAP]","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"TARGET","local":"org.apache.derby.client.am.Connection.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"METHOD_DECLARATION","change":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"CLASS_S","local":"java.client.org.apache.derby.client.am.LogicalConnection40"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"CAST_EXPRESSION","change":"(java.sql.Connection)physicalConnection_","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"CATCH_CLAUSE","change":"catch (SQLException sqle) {\n  notifyException(sqle);\n  throw sqle;\n}\n","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"EXPRESSION_STATEMENT","change":"notifyException(sqle)","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"EXPRESSION_STATEMENT","change":"checkForNullPhysicalConnection()","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"JAVADOC","change":"/** \n * Returns the type map for this connection.\n * @return type map for this connection\n * @exception SQLException if a database access error occurs\n */\n","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"METHOD_INVOCATION","change":"notifyException(sqle)","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"METHOD_INVOCATION","change":"((java.sql.Connection)physicalConnection_).getTypeMap()","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"METHOD_INVOCATION","change":"checkForNullPhysicalConnection()","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"MODIFIER","change":"public","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"PARAMETERIZED_TYPE","change":"Class\u003c?\u003e","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"PARAMETERIZED_TYPE","change":"Map\u003cString,Class\u003c?\u003e\u003e","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"PARENTHESIZED_EXPRESSION","change":"((java.sql.Connection)physicalConnection_)","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"QUALIFIED_NAME","change":"java.sql","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"QUALIFIED_NAME","change":"java.sql.Connection","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"RETURN_STATEMENT","change":"return ((java.sql.Connection)physicalConnection_).getTypeMap();\n","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"SIMPLE_TYPE","change":"SQLException","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"SIMPLE_TYPE","change":"java.sql.Connection","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"SIMPLE_TYPE","change":"Class","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"SIMPLE_TYPE","change":"String","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"SIMPLE_TYPE","change":"Map","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"SINGLE_VARIABLE_DECLARATION","change":"SQLException sqle","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"THROW_STATEMENT","change":"throw sqle;\n","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"TRY_STATEMENT","change":"try {\n  checkForNullPhysicalConnection();\n  return ((java.sql.Connection)physicalConnection_).getTypeMap();\n}\n catch (SQLException sqle) {\n  notifyException(sqle);\n  throw sqle;\n}\n","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"WILDCARD_TYPE","change":"?","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"METHOD_DECLARATION","change":"org.apache.derby.client.net.NetConnection40.getTypeMap()","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"EXT_S","local":"java.client.org.apache.derby.client.net.NetConnection40"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"RETURN_STATEMENT","change":"return super.getTypeMap();\n","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"EXT_S","local":"org.apache.derby.client.net.NetConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"4772c7ee2b0f7c59edf32db2f21294904e286293","changeType":"SUPER_METHOD_INVOCATION","change":"super.getTypeMap()","source":"org.apache.derby.client.am.LogicalConnection40.getTypeMap()","target":"org.apache.derby.client.am.Connection.getTypeMap()","added":false,"scope":"EXT_S","local":"org.apache.derby.client.net.NetConnection40.getTypeMap()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"METHOD_DECLARATION","change":"org.apache.derby.client.net.NetConnection.closeResources()","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"CLASS_T","local":"java.client.org.apache.derby.client.net.NetConnection"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"EXPRESSION_STATEMENT","change":"xares_.removeXaresFromSameRMchain()","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"EXPRESSION_STATEMENT","change":"super.closeResources()","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"IF_STATEMENT","change":"xares_ !\u003d null","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"IF_STATEMENT","change":"isOpen()","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"IF_STATEMENT","change":"!isXAConnection_","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"INFIX_EXPRESSION","change":"xares_ !\u003d null","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"JAVADOC","change":"/** \n * closes resources connection will be not available  for reuse.\n */\n","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"METHOD_INVOCATION","change":"xares_.removeXaresFromSameRMchain()","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"METHOD_INVOCATION","change":"isOpen()","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"MODIFIER","change":"public","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"MODIFIER","change":"synchronized","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"NULL_LITERAL","change":"null","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"PREFIX_EXPRESSION","change":"!isXAConnection_","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"RETURN_STATEMENT","change":"return;\n","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"SIMPLE_TYPE","change":"SQLException","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"SUPER_METHOD_INVOCATION","change":"super.closeResources()","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":true,"scope":"TARGET","local":"org.apache.derby.client.net.NetConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"METHOD_DECLARATION","change":"org.apache.derby.client.net.NetXAConnection.closeResources()","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":false,"scope":"CLASS_S","local":"java.client.org.apache.derby.client.net.NetXAConnection"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"EXPRESSION_STATEMENT","change":"xares_.removeXaresFromSameRMchain()","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.net.NetXAConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"EXPRESSION_STATEMENT","change":"super.closeResources()","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.net.NetXAConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"IF_STATEMENT","change":"xares_ !\u003d null","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.net.NetXAConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"IF_STATEMENT","change":"open_","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.net.NetXAConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"INFIX_EXPRESSION","change":"xares_ !\u003d null","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.net.NetXAConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"METHOD_INVOCATION","change":"xares_.removeXaresFromSameRMchain()","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.net.NetXAConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"MODIFIER","change":"public","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.net.NetXAConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"MODIFIER","change":"synchronized","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.net.NetXAConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"NULL_LITERAL","change":"null","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.net.NetXAConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"PRIMITIVE_TYPE","change":"void","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.net.NetXAConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"RETURN_STATEMENT","change":"return;\n","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.net.NetXAConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"SIMPLE_TYPE","change":"SQLException","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.net.NetXAConnection.closeResources()"}
{"project":"apache_derby","commit":"dadd05a17c2f386293cd0c22c3aa8bf0ab5fd94d","changeType":"SUPER_METHOD_INVOCATION","change":"super.closeResources()","source":"org.apache.derby.client.net.NetXAConnection.closeResources()","target":"org.apache.derby.client.net.NetConnection.closeResources()","added":false,"scope":"SOURCE","local":"org.apache.derby.client.net.NetXAConnection.closeResources()"}
